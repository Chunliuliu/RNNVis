{"version":3,"sources":["webpack:///static/js/app.8557021d69c3a828d514.js","webpack:///./src/event-bus.js","webpack:///./src/layout/chart.js","webpack:///./src/layout/sentence.js","webpack:///./src/preprocess.js","webpack:///./src/components/InfoBoard.vue?732a","webpack:///./src/App.vue?fc6a","webpack:///./src/algorithm/cluster.js","webpack:///./src/main.js","webpack:///App.vue","webpack:///ArcView.vue","webpack:///ClusterView.vue","webpack:///InfoBoard.vue","webpack:///InfoView.vue","webpack:///MainView.vue","webpack:///ModelConfig.vue","webpack:///ModelView.vue","webpack:///ProjectGraph.vue","webpack:///ProjectView.vue","webpack:///TestView.vue","webpack:///TextView.vue","webpack:///./src/services/dataService.js","webpack:///./src/components/ArcView.vue?65fd","webpack:///./src/components/ClusterView.vue?baef","webpack:///./src/components/InfoView.vue?4c49","webpack:///./src/components/MainView.vue?f5a7","webpack:///./src/components/ModelConfig.vue?32d1","webpack:///./src/components/ModelView.vue?ad30","webpack:///./src/components/ProjectGraph.vue?4d40","webpack:///./src/components/ProjectView.vue?92ed","webpack:///./src/components/TestView.vue","webpack:///./src/components/TextView.vue?e947","webpack:///./src/components/TextView.vue?f2df","webpack:///./src/components/ProjectView.vue?f152","webpack:///./src/components/InfoBoard.vue?caee","webpack:///./src/components/ProjectGraph.vue?04b0","webpack:///./src/App.vue?9a80","webpack:///./src/components/TestView.vue?f541","webpack:///./src/components/ArcView.vue?a4dd","webpack:///./src/components/InfoView.vue?0a57","webpack:///./src/components/ModelConfig.vue?f670","webpack:///./src/components/ModelView.vue?e6cb","webpack:///./src/components/MainView.vue?0901","webpack:///./src/components/ClusterView.vue?fa4b","webpack:///./src/layout/cloud.js"],"names":["webpackJsonp","11","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","afterChangeWords","words","forEach","word","i","color","state","activateText","focusText","deactivateText","data","d3","select","el","style","opacity","weight","baseColor","bound","remove","box","getBBox","parentNode","insert","attr","x","width","y","Object","defineProperty","value","SELECT_SENTENCE_NODE","CLOSE_SENTENCE","DESELECT_WORD","DESELECT_UNIT","SELECT_LAYER","SELECT_WORD","SELECT_UNIT","SentenceRecord","CoClusterProcessor","EVALUATE_SENTENCE","CHANGE_LAYOUT","SELECT_STATE","SELECT_MODEL","bus","undefined","_assign","_assign2","_set","_set2","_promise","_promise2","_vue","_vue2","_dataService","_dataService2","_d","newObj","key","prototype","hasOwnProperty","call","_preprocess","selectedModel","selectedState","selectedLayer","selectedModel2","selectedState2","selectedLayer2","layout","layout2","modelConfigs","coClusters","availableModels","sentenceRecords","statistics","modelsSet","selectedUnits","selectedWords","selectedUnits2","selectedWords2","selectedNode","selectedNode2","compare","scaleOrdinal","schemeCategory10","renderPos","renderPos2","cell2states","GRU","BasicLSTM","BasicRNN","computed","methods","loadModelConfig","modelName","resolve","getModelConfig","response","status","reject","loadAvailableModels","_this","this","console","log","getModels","models","loadCoCluster","arguments","length","stateName","_this2","nCluster","params","top_k","mode","layer","coCluster","coClusterName","identifier","then","has","load","getCoCluster","modelCellType","model","cell_type","availableStates","config","layerNum","cells","layerSize","num_units","evalSentence","sentence","record","push","loadStatistics","stat","StateStatistics","getStatistics","loadPosStatistics","callback","getPosStatistics","created","_this3","$on","newLayout","clusterNum","unitDim","units","slice","splice","text","unit","idx","indexOf","findIndex","d","node","165","BoxArtist","AreaArtist","LineArtist","Chart","_getPrototypeOf","_getPrototypeOf2","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_keys","_keys2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","Artist","chart","handles","drawHooks","drawHook","handle","transition","duration","get","group","scale","defaultColorScheme","svg","height","bggroup","append","bg","marginAll","extents","Infinity","axis","axisHandles","charts","artists","xAxis","yAxis","offset","rotateFlag","marginLeft","marginRight","marginTop","marginBottom","artist","translate","drawTmp","draw","tmpSize","tmpMargin","updateScale","reverse","drawAxis","alpha","top","right","bottom","left","extent","range","timer","Math","round","min","floor","max","ceil","xExtent","yExtent","updateExtentI","xfn","yfn","updateScaleX","updateScaleY","scaleLinear","domain","rangeRound","label","pos","translateStr","axisBottom","axisTop","labelSize","_this4","axisLeft","axisRight","lineArtist","lines","plot","y0fn","y1fn","areas","r1fn","r2fn","boxes","_this5","transform","name","c","_this6","clean","_Artist","_this7","__proto__","_this8","line","datum","_Artist2","_this9","_this10","area","y0","y1","_Artist3","_this11","_this12","xShift","drawBox","map","v","xs","mean","range1","range2","mid","abs","166","selector","SentenceLayout","_sign","_sign2","_from","_from2","_toConsumableArray2","_toConsumableArray3","layoutParams","nodeIntervalScale","schemeCategory20","radiusScale","widthScale","avgValueRange","rulerScale","markerWidthScale","markerHeightScale","wordSize","negColor","posColor","_size","_rectSize","_sentence","_coCluster","_dataList","type","_mouseoverCallback","_","_barMouseoverCallback","func","size","transformStr","nodeWidth","_words","prepareDraw","getWordPos","g","drawWord","gl","drawConnection","nodeInterval","rectSize","brushY","on","event","sourceEvent","selection","target","move","current","labels","preprocess","maxValue","dataList","clst","clstMaxP","currents","updateds","clstMaxN","clstMax","scaleHeight","nodeHeight","stateSize","j","scaleWidth","drawOneWordPie","drawOneWordBar","drawOneWordBar2","drawOneConnection","drawOneConnection2","gSelector","selectAll","g1","enter","accumulate","prev","g2","updated","major","t","paintColor","self","unitWidth","gCurrent","cur","gUpdated1","updated1","gUpdated2","updated2","fontSize","valRange","wordX","each","els","rulerWidth","markerWidth","markerHeight","gs","keptRate","calPoints","arr","Array","mar","radius","arc1","arc","innerRadius","outerRadius","arc2","arc3","updatedRate","arcs","pie","sort","classed","k","len","clustersSize","colClusters","accClustersSize","Float32Array","currentStates","cluster","updatedData","infoPositive","infoNegative","infoCurrent","infoPrevious","concat","h_tij","infoKept","keptPositive","keptNegative","ratio","keptP","keptN","kept","positive","negative","prevPositive","prevNegative","updatedPositive","updatedNegative","kepts","_radius","radius2","_strengthByCluster","167","memorize","fn","cache","join","f","apply","sortBy","rawData","_rowClusters","_colClusters","_colSizes","_rolSizes","_aggregation_info","strength","rowNum","colNum","hasData","_labels","colLabels","rowLabels","a","b","colSizes","rowSizes","Int32Array","_rowSizes","row","col","ids","Boolean","row_cluster_2_col_cluster","Create2DArray","row_single_2_col_cluster","row_cluster_2_col_single","row_single_2_col_single","correlation","strength_list","r_index","s","c_index","strength_filter","_cluster2cluster","_single2cluster","_cluster2single","_single2single","rowClusters","r","l","processor","inputs","tokens","records","getTextEvaluation","_states","_layerNum","states","getStateStatistics","id","word2Id","wordsData","_statesData","m","low1","low2","high1","high2","rank","sort_idx","indices","_word2Id","_this13","_wordsData","low","278","Component","280","281","304","points","meanPoint","sum","kmeans","vectors","maxIter","distance","snapshotFn","kMeans","distances","_stringify","_stringify2","euclidean","v1","v2","total","pow","sqrt","manhattan","centroids","random","point","index","dist","randomCentroids","assignment","clusters","iterations","movement","classify","assigned","filter","p","centroid","newCentroid","JSON","parse","json","305","_elementUi","_elementUi2","_App","_App2","use","render","h","306","_ModelView","_ModelView2","_MainView","_MainView2","_TextView","_TextView2","_InfoView","_InfoView2","_InfoBoard","_InfoBoard2","_eventBus","components","ModelView","MainView","TextView","InfoView","InfoBoard","shared","mainHeight","infoHeight","mounted","window","innerHeight","innerWidth","addEventListener","307","_cloud","fdGraph","wordNum","cluster_data","state_data","word_data","cluster_mode","props","Number","watch","newWidth","update_scale","newHeight","newState","ps","loadStateWordData","loadClusterData","all","values","reset","newWordNum","newClusterNum","svgId","paneId","getProjectionData","getStrengthData","destroy","document","getElementById","ForceDirectedGraph","process_data","insert_element","start_simulation","strengthfn","clientWidth","clientHeight","arcNodes","innerNodes","links","word_clouds","simulation","graph","rScale","defaultAlpha","strength_threshold","normal_opacity_line","high_opacity_line","low_opacity_line","normal_opacity_node","high_opacity_node","low_opacity_node","strength_range","arc_radius","g_links","arc_data","inner_data","label2arc","label2inner","inner_k","arc_k","cluster_strength","inner_item","arc_item","strength_item","link","source","strength_normalize","nodes","strength_extent","cos","angle","sin","g_arc","arc_centroid","fx","fy","w","WordCloud","update","repelForce","forceCollide","init","initialize","forceSimulation","force","forceLink","ticked","curve","curveBundle","beta","line_data","data_center","308","colorHex","colorScheme","LayoutParamsConstructor","unitWidthRatio","unitMarginRatio","clusterMarginRatio","wordCloudArcDegree","wordCloudHightlightRatio","wordCloudPaddingLength","wordCloudChord2ClusterDistance","wordCloudChordLength2ClientHeightRatio","wordCloudChord2stateClusterHeightRatio","wordCloudWidth2HeightRatio","littleTriangleWidth","littleTriangleHeight","strengthThresholdPercent","wordSize2StrengthRatio","dxShrinkFactor","spacePerSentence","sentenceNodeWidth","sentenceInitTranslate","middleLineY","brushTranslationX","sentenceWordThreshold","middleLineOffset","sentenceBrushRectWidth","clusterInterval2HeightRatio","clusterSizes","callTime","maxClusterSize","reduce","totalClusterSize","_unitHeight","wordCloudChordLength","clusterHeight","packNum","unitHeight","cluster2UnitRatio","clusterInterval","computeParams","maxClusterWidth","unitMargin","widthPackNum","clusterWidth","clusterMargin","heightSum","pack","pos2tag","VERB","NOUN","PRON","ADJ","ADV","ADP","CONJ","DET","NUM","PRT","X",".","labelParams","interval","clusterData","painter","changingFlag","posLabel","rootGroup","defautl","strokeControlStrength","linkFilterThreshold","stateClip","maybeReload","_strokeControlStrength","changeStroke","_linkFilterThreshold","_clusterNum","newStateClip","changeStateClip","newMode","newModel","oldModel","render_state","wordsStatistics","statOfWord","_renderPos","posRatio","renderWord","oldWidth","updateWidth","updateHeight","checkLegality","reload","Painter","PosLabel","controlStrength","refreshStroke","p2","evaluate","sentenceRecord","getRecords","addSentence","deleteSentence","SELECT_COLOR","newColor","False","tags","transStr","topGroupClass","topg","hg","wg","dx","dy","clusterSelected","state_elements","loc","wordClouds","unitNormalColor","unitRangeColor","linkWidthRange","linkColor","stateTranslateHis","sentenceTranslateHis","sentences","strokeWidth","sentenceStrokeWidth","colorLegendAxis","trans","draw_link","sentence_info","si","flatten","max_strength","strength_bound","ls","clip","state_info","property","tmp_s","axisScale","tickValues","parseInt","tickFormat","format","precisionFixed","sentence_to_add","translateX","adjustdx","stateClusterWordCloudDX","tmpSentenceInfo","updateSentence","extent_","_record$tokens","scaleFactor","client_height","translateY","sent","actualY","source_init","createLink","highlightSentenceLinkByNodeIndex","highlight","changeCheckStatus","selected","$emit","barHighlightState","state_index","update_ref","state_cluster_info","needTranslate","client_width","translationForEachSentence","translationForState","sg","spg","rectGroup","drawBrushRect","mouseoverCallback","barMouseoverCallback","strengthByCluster","strengths","wordPos","top_left","middle_line_x","middle_line_y","lsg","dataLength","maxHeight","brush","lower","upper","state_loc","state_cluster_loc","computeUnitParams","stateClusters","s_width","s_height","s_top_left","selected_state_cluster_index","baseWordCloudWidth","wordCloudWidth","wordClusters","agg_info","aggregation_info","chordLength","availableLength","wordCloudArcRadius","PI","highlight_clouds","link_info","word_info","wd_height","wd_height_sum","acc","val","wdst","actual_height","actual_width","top_left_y","top_left_x","words_data","tmp_strength","tmp_state","tmp_g","wordCluster","draw_word","calculate_word_info","calculate_link_info","hiddenClusters","isArray","String","selectCluster","redraw_word_link","bgHandle","hGroups","ref","_this14","wclst","active","myWordCloud","_this15","_this16","tmp_path","calculate_state_info","draw_state","newdx","deleteAllSentences","erase_state","erase_link","erase_word","dxOffset","middleLineX","309","start","end","num","_chart","lineLength","wordWidth","labelBoard","unitsStatistics","header","typeStr","repaintWord","repaintState","statesData","dataArray","wordData","getWordStatistics","background","resize","labelLength","margin","sortIdx","ranges","subChartWidth","unitData","xLabel","subWidth","subchart","subChart","ticks","rotate","labelPos","toString","$el","310","type1","type2","SELECT_SENTECE_NODE","311","_ProjectView","_ProjectView2","_TestView","_TestView2","_ArcView","_ArcView2","_ClusterView","_ClusterView2","activeTab","handleClick","tab","ProjectView","TestView","ArcView","ClusterView","312","posSwitch","inputVisible","inputValue","toggle","Function","colorType","LayerNum","maxWidth","_selectedModel","Cell","LayerSize","catch","newLayer","layoutChange","closeSentence","showInput","$nextTick","$refs","saveTagInput","input","focus","handleInputConfirm","colorChange","313","_typeof2","_ModelConfig","_ModelConfig2","ModelConfig","getAvailableModels","setTimeout","modelColor","toggleCompare","states2","314","normalize","calExtent","factor_x","factor_y","factor","coords","mouseover","_target","refreshLinkStyle","refreshWordStyle","mouseout","clickState","opacityHigh","refreshStateStyle","stateNodes","wordNodes","_cluster","defaultConfig","repel","strength_thred","color2","graphData","required","ready","fdGraoh","newReady","buildGraph","insertElements","initSimulation","startSimulation","refreshGraph","refresh","clusterStates","signature","svgEl","invert_x","invert_y","e","state_id","layers","id2states","intensity","_source","forceManyBody","distanceMax","collideForce","g_states","drag","alphaTarget","restart","mouse","_graph","xCenter","yCenter","_x","_y","stateSignature","clusterAssignments","315","_ProjectGraph","_ProjectGraph2","ProjectGraph","oldState","strengthFn","farDistance","cacheTag","p1","strengthData","getStateSignature","errResponse","configWatcher","316","draw2","showNewWords","vis","processed","freqs","indice","vocab","getVocab","word_id","boxData","subchart2","draw_arc","startAngle","endAngle","draw4","brushended","rectWidth","rectInterval","scaleTime","Date","rect_g","brushX","drawRect","draw5","sent_g","draw3","317","activeColorScheme","isInput","selectedDim","oldInputs","displayControl","token","onSubmit","32","_vueResource","_vueResource2","devMainUrl","$http","http","getUrlData","url","parameters","post","n_cluster","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","_vm","_h","$createElement","_c","_self","staticClass","_v","attrs","$$v","expression","_l","span","staticStyle","_e","rows","placeholder","click","backgroundColor","_s","staticRenderFns","714","svg-id","graph-data","change","step","715","716","717","theme","default-active","gutter","718","719","720","721","label-position","label-width","icon","keys","margin-top","on-text","off-text","margin-left","blur","nativeOn","keyup","$event","_k","keyCode","closable","close","padding-bottom","722","723","724","stop-color","728","94","_d3Cloud","_d3Cloud2","bgLayout","stroke","stroke-width","fill","fill-opacity","stroke-opacity","wordLayout","font","fontWeight","padding","radiusX","radiusY","bgshape","cloud","margin_","word2data","boundingSize","param","drawBackground","filterData","exit","fontExtent","scalePow","weightScale","scaleQuantize","words_","spiral","bounds","scaleX","scaleY","centerX","centerY","polygon"],"mappings":"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","file":"static/js/app.8557021d69c3a828d514.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 11:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SELECT_SENTENCE_NODE = exports.CLOSE_SENTENCE = exports.DESELECT_WORD = exports.DESELECT_UNIT = exports.SELECT_LAYER = exports.SELECT_WORD = exports.SELECT_UNIT = exports.SentenceRecord = exports.CoClusterProcessor = exports.EVALUATE_SENTENCE = exports.CHANGE_LAYOUT = exports.SELECT_STATE = exports.SELECT_MODEL = exports.bus = undefined;\n\nvar _assign = __webpack_require__(95);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _set = __webpack_require__(69);\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _promise = __webpack_require__(34);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _vue = __webpack_require__(10);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _dataService = __webpack_require__(32);\n\nvar _dataService2 = _interopRequireDefault(_dataService);\n\nvar _d = __webpack_require__(21);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _preprocess = __webpack_require__(167);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SELECT_MODEL = 'SELECT_MODEL';\nvar SELECT_STATE = 'SELECT_STATE';\nvar CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nvar EVALUATE_SENTENCE = 'EVALUATE_SENTENCE';\nvar SELECT_UNIT = 'SELECT_UNIT';\nvar SELECT_WORD = 'SELECT_WORD';\nvar DESELECT_UNIT = 'DESELECT_UNIT';\nvar DESELECT_WORD = 'DESELECT_WORD';\nvar SELECT_LAYER = 'SELECT_LAYER';\nvar CLOSE_SENTENCE = 'CLOSE_SENTENCE';\nvar SELECT_SENTENCE_NODE = 'SELECT_SENTENCE_NODE';\nvar SELECT_COLOR = 'SELECT_COLOR';\n\nvar state = {\n  selectedModel: null,\n  selectedState: null,\n  selectedLayer: null,\n  selectedModel2: null,\n  selectedState2: null,\n  selectedLayer2: null,\n  layout: {},\n  layout2: {},\n  modelConfigs: {},\n  coClusters: {},\n  availableModels: null,\n  sentenceRecords: {},\n  statistics: {},\n  modelsSet: null,\n  selectedUnits: [],\n  selectedWords: [],\n  selectedUnits2: [],\n  selectedWords2: [],\n  selectedNode: null,\n  selectedNode2: null,\n  compare: false,\n  color: d3.scaleOrdinal(d3.schemeCategory10),\n  renderPos: false,\n  renderPos2: false\n};\n\nvar bus = new _vue2.default({\n  data: {\n    state: state,\n    cell2states: {\n      'GRU': ['state'],\n      'BasicLSTM': ['state_c', 'state_h'],\n      'BasicRNN': ['state']\n    }\n  },\n  computed: {},\n  methods: {\n    loadModelConfig: function loadModelConfig(modelName) {\n      if (!modelName) return _promise2.default.reject(modelName);\n      if (!Object.prototype.hasOwnProperty.call(state.modelConfigs, modelName)) {\n        return _dataService2.default.getModelConfig(modelName, function (response) {\n          if (response.status === 200) {\n            state.modelConfigs[modelName] = response.data;\n          }\n        });\n      }\n      return _promise2.default.resolve(modelName);\n    },\n    loadAvailableModels: function loadAvailableModels() {\n      var _this = this;\n\n      if (this.state.availableModels === null) {\n        console.log(\"Start loading model data\");\n        return _dataService2.default.getModels(function (response) {\n          if (response.status === 200) {\n            var data = response.data;\n            _this.state.availableModels = data.models;\n            _this.state.modelsSet = new _set2.default(_this.state.availableModels);\n          }\n        });\n      }\n      return _promise2.default.resolve('Already Loaded');\n    },\n    loadCoCluster: function loadCoCluster() {\n      var modelName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.selectedModel;\n      var stateName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.selectedState;\n\n      var _this2 = this;\n\n      var nCluster = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : { top_k: 300, mode: 'raw', layer: -1 };\n\n      var coCluster = new _preprocess.CoClusterProcessor(modelName, stateName, nCluster, params);\n      var coClusterName = _preprocess.CoClusterProcessor.identifier(coCluster);\n      if (this.state.coClusters.hasOwnProperty(coClusterName)) return _promise2.default.resolve('Cocluster data already loaded');\n      return this.loadAvailableModels().then(function () {\n        if (_this2.state.modelsSet.has(modelName)) {\n          return coCluster.load();\n        }\n        throw 'No model named ' + modelName;\n      }).then(function () {\n        _this2.state.coClusters[coClusterName] = coCluster;\n        return 'Succeed';\n      });\n    },\n    getCoCluster: function getCoCluster() {\n      var modelName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.selectedModel;\n      var stateName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.selectedState;\n      var nCluster = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : { top_k: 300, mode: 'raw', layer: -1 };\n\n      var coCluster = new _preprocess.CoClusterProcessor(modelName, stateName, nCluster, params);\n      var coClusterName = _preprocess.CoClusterProcessor.identifier(coCluster);\n      if (this.state.coClusters.hasOwnProperty(coClusterName)) return this.state.coClusters[coClusterName];\n      console.log('First call loadCoCluster(...) to load remote Data!');\n      return undefined;\n    },\n    modelCellType: function modelCellType() {\n      var modelName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : state.selectedModel;\n\n      if (state.modelsSet.has(modelName)) {\n        var config = this.state.modelConfigs[modelName];\n        return config.model.cell_type;\n      }\n      return undefined;\n    },\n    availableStates: function availableStates() {\n      var modelName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.selectedModel;\n\n      if (state.modelsSet.has(modelName)) {\n        var config = this.state.modelConfigs[modelName];\n        return this.cell2states[config.model.cell_type];\n      }\n      return undefined;\n    },\n    layerNum: function layerNum() {\n      var modelName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.selectedModel;\n\n      if (state.modelsSet.has(modelName)) {\n        var config = this.state.modelConfigs[modelName];\n        return config.model.cells.length;\n      }\n      return undefined;\n    },\n    layerSize: function layerSize() {\n      var modelName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.selectedModel;\n      var layer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n      if (state.modelsSet.has(modelName)) {\n        if (layer === -1) {\n          layer = this.layerNum(modelName) - 1;\n        }\n        var config = this.state.modelConfigs[modelName];\n        return config.model.cells[layer].num_units;\n      }\n      return undefined;\n    },\n    evalSentence: function evalSentence(sentence) {\n      var modelName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : state.selectedModel;\n\n      if (!state.sentenceRecords.hasOwnProperty(modelName)) {\n        state.sentenceRecords[modelName] = [];\n      }\n      var record = new _preprocess.SentenceRecord(sentence, modelName);\n      state.sentenceRecords[modelName].push(record);\n      return record;\n    },\n    loadStatistics: function loadStatistics() {\n      var modelName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : state.selectedModel;\n      var stateName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : state.selectedState;\n      var layer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n      var top_k = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 300;\n\n      if (!state.modelsSet.has(modelName)) return _promise2.default.reject('No available model ' + modelName);\n      if (!(stateName === 'state' || stateName === 'state_c' || stateName === 'state_h')) return _promise2.default.reject('No available state ' + stateName);\n      if (!state.statistics.hasOwnProperty(modelName)) {\n        state.statistics[modelName] = {};\n      }\n      if (!state.statistics[modelName].hasOwnProperty(stateName)) {\n        state.statistics[modelName][stateName] = [];\n      }\n      if (layer === -1) {\n        layer = this.layerNum(modelName) - 1;\n      }\n      if (state.statistics[modelName][stateName][layer]) {\n        return state.statistics[modelName][stateName][layer].load();\n      }\n      var stat = new _preprocess.StateStatistics(modelName, stateName, layer, top_k);\n      state.statistics[modelName][stateName][layer] = stat;\n      return stat.load();\n    },\n    getStatistics: function getStatistics() {\n      var modelName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : state.selectedModel;\n      var stateName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : state.selectedState;\n      var layer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n      var top_k = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 300;\n\n      if (state.statistics.hasOwnProperty(modelName)) {\n        if (state.statistics[modelName].hasOwnProperty(stateName)) {\n          if (state.statistics[modelName][stateName][layer]) return state.statistics[modelName][stateName][layer];\n        }\n      }\n      console.log('bus > unable to get statistics for ' + modelName + ', ' + stateName + ', ' + layer);\n      return undefined;\n    },\n    loadPosStatistics: function loadPosStatistics() {\n      var modelName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : state.selectedModel;\n      var top_k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\n      var callback = arguments[2];\n\n      if (this.state.modelsSet.has(modelName)) {\n        return _dataService2.default.getPosStatistics(modelName, top_k, callback);\n      }\n      return _promise2.default.reject('No model with name ' + modelName + ' available!');\n    }\n  },\n  created: function created() {\n    var _this3 = this;\n\n    this.$on(SELECT_MODEL, function (modelName, compare) {\n      if (compare) {\n        _this3.state.selectedModel2 = modelName;\n        _this3.state.compare = modelName ? true : false;\n      } else _this3.state.selectedModel = modelName;\n      console.log('bus > current models : ' + state.selectedModel + ', ' + state.selectedModel2);\n    });\n\n    this.$on(SELECT_STATE, function (stateName, compare) {\n      if (compare) _this3.state.selectedState2 = stateName;else _this3.state.selectedState = stateName;\n      console.log('bus > current states : ' + state.selectedState + ', ' + state.selectedState2);\n    });\n\n    this.$on(SELECT_LAYER, function (layer, compare) {\n      if (compare) _this3.state.selectedLayer2 = layer;else _this3.state.selectedLayer = layer;\n    });\n\n    this.$on(CHANGE_LAYOUT, function (newLayout, compare) {\n      if (compare) _this3.state.layout2 = (0, _assign2.default)({}, newLayout);else _this3.state.layout = (0, _assign2.default)({}, newLayout);\n      console.log('bus > ' + (compare ? 'compare' : '') + ' clusterNum: ' + newLayout.clusterNum);\n    });\n\n    this.$on(EVALUATE_SENTENCE, function (sentence, compare) {\n      console.log('bus > evaluating model ' + (compare ? state.selectedModel2 : state.selectedModel) + ' on sentence \"' + sentence + '\"');\n    });\n\n    this.$on(SELECT_UNIT, function (unitDim, compare) {\n      if (compare) {\n        var units = _this3.state.selectedUnits2.slice();\n        units.push(unitDim);\n        if (units.length > 2) units.splice(0, 1);\n        _this3.state.selectedUnits2 = units;\n        _this3.state.selectedWords2 = [];\n        _this3.state.selectedNode2 = null;\n      } else {\n        var _units = _this3.state.selectedUnits.slice();\n        _units.push(unitDim);\n        if (_units.length > 2) _units.splice(0, 1);\n        _this3.state.selectedUnits = _units;\n        if (_this3.state.compare) {\n          _this3.state.selectedWords = [];\n          _this3.state.selectedNode = null;\n        }\n      }\n      console.log('bus > selected unit ' + unitDim);\n    });\n\n    this.$on(SELECT_WORD, function (word, compare) {\n      var maxSelected = 3;\n      var words = void 0;\n      if (compare) {\n        words = _this3.state.selectedWords2.slice();\n        _this3.state.selectedUnits2 = [];\n        _this3.state.selectedNode2 = null;\n      } else {\n        words = _this3.state.selectedWords.slice();\n        if (_this3.state.compare) {\n          _this3.state.selectedUnits = [];\n          _this3.state.selectedNode = null;\n        }\n      }\n      words.push(word);\n      if (words.length > maxSelected) {\n        deactivateText(words[0]);\n        words.splice(0, 1);\n      }\n      afterChangeWords(words);\n      if (compare) _this3.state.selectedWords2 = words;else _this3.state.selectedWords = words;\n      console.log('bus > selected word: ' + word.text);\n    });\n\n    this.$on(DESELECT_UNIT, function (unit, compare) {\n      if (compare) {\n        var idx = _this3.state.selectedUnits2.indexOf(unit);\n        _this3.state.selectedUnits2.splice(idx, 1);\n      } else {\n        var _idx = _this3.state.selectedUnits.indexOf(unit);\n        _this3.state.selectedUnits.splice(_idx, 1);\n      }\n      console.log('bus > deselected unit: ' + unit);\n    });\n\n    this.$on(DESELECT_WORD, function (word, compare) {\n      var words = void 0;\n      if (compare) words = _this3.state.selectedWords2.slice();else words = _this3.state.selectedWords.slice();\n      var idx = words.findIndex(function (d) {\n        return d.text === word.text;\n      });\n      console.log('bus > deleted idx: ' + idx);\n      deactivateText(words[idx]);\n      words.splice(idx, 1);\n      afterChangeWords(words);\n      if (compare) _this3.state.selectedWords2 = words;else _this3.state.selectedWords = words;\n      console.log('bus > deselected word: ' + word.text);\n    });\n\n    this.$on(CLOSE_SENTENCE, function (sentence, compare) {\n      console.log('bus > close sentence: ' + sentence);\n    });\n    this.$on(SELECT_SENTENCE_NODE, function (node, compare) {\n      if (compare) _this3.state.selectedNode2 = node;else _this3.state.selectedNode = node;\n      console.log('bus > sentence node selected: ' + node.word);\n    });\n  }\n});\n\nfunction afterChangeWords(words) {\n  words.forEach(function (word, i) {\n    word.color = state.color(i);\n    activateText(word);\n    focusText(word);\n  });\n}\n\nfunction deactivateText(data) {\n  d3.select(data.el).style('fill-opacity', data.opacity).style('font-weight', data.weight).style('stroke', 'none').style('fill', data.baseColor);\n  if (data.bound) {\n    data.bound.remove();\n    data.bound = null;\n  }\n}\n\nfunction activateText(data) {\n  d3.select(data.el).style('fill-opacity', 1).style('font-weight', data.weight + 300).style('stroke', 'none').style('fill', data.color);\n  if (data.bound) {\n    data.bound.remove();\n    data.bound = null;\n  }\n}\n\nfunction focusText(data) {\n  var box = data.el.getBBox();\n\n  data.bound = d3.select(data.el.parentNode).insert('path').attr('d', 'M ' + (data.x - box.width / 2 - 1.5) + ' ' + (data.y + 2) + ' H ' + (data.x + box.width / 2 + 1.5)).style('stroke', data.color);\n}\n\nexports.default = bus;\nexports.bus = bus;\nexports.SELECT_MODEL = SELECT_MODEL;\nexports.SELECT_STATE = SELECT_STATE;\nexports.CHANGE_LAYOUT = CHANGE_LAYOUT;\nexports.EVALUATE_SENTENCE = EVALUATE_SENTENCE;\nexports.CoClusterProcessor = _preprocess.CoClusterProcessor;\nexports.SentenceRecord = _preprocess.SentenceRecord;\nexports.SELECT_UNIT = SELECT_UNIT;\nexports.SELECT_WORD = SELECT_WORD;\nexports.SELECT_LAYER = SELECT_LAYER;\nexports.DESELECT_UNIT = DESELECT_UNIT;\nexports.DESELECT_WORD = DESELECT_WORD;\nexports.CLOSE_SENTENCE = CLOSE_SENTENCE;\nexports.SELECT_SENTENCE_NODE = SELECT_SENTENCE_NODE;\n\n/***/ }),\n\n/***/ 165:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BoxArtist = exports.AreaArtist = exports.LineArtist = exports.Chart = undefined;\n\nvar _getPrototypeOf = __webpack_require__(321);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _possibleConstructorReturn2 = __webpack_require__(326);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(325);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _keys = __webpack_require__(33);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _classCallCheck2 = __webpack_require__(25);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(26);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _d = __webpack_require__(21);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Artist = function () {\n  function Artist(chart) {\n    (0, _classCallCheck3.default)(this, Artist);\n\n    this.chart = chart;\n\n    this.handles = [];\n    this.drawHooks = [];\n  }\n\n  (0, _createClass3.default)(Artist, [{\n    key: 'draw',\n    value: function draw() {\n      this.drawHooks.forEach(function (drawHook) {\n        return drawHook();\n      });\n    }\n  }, {\n    key: 'clean',\n    value: function clean() {\n      this.handles.forEach(function (handle) {\n        handle.transition().duration(200).style('opacity', 0).remove();\n      });\n      this.handles = [];\n      this.drawHooks = [];\n    }\n  }, {\n    key: 'group',\n    get: function get() {\n      return this.chart.group;\n    }\n  }, {\n    key: 'scale',\n    get: function get() {\n      return this.chart.scale;\n    }\n  }]);\n  return Artist;\n}();\n\nvar defaultColorScheme = d3.scaleOrdinal(d3.schemeCategory10);\n\nfunction drawBox(el, xs, mean, range1, range2) {\n  var box = el.append('g');\n\n  var mid = (xs[0] + xs[1]) / 2;\n  box.append('rect').attr('x', xs[0]).attr('y', Math.min(range1[0], range1[1])).attr('width', xs[1] - xs[0]).attr('height', Math.abs(range1[1] - range1[0]));\n  box.append('line').attr('x1', xs[0]).attr('y1', mean).attr('x2', xs[1]).attr('y2', mean);\n  for (var i = 0; i < 2; i += 1) {\n    box.append('line').attr('x1', mid).attr('y1', range1[i]).attr('x2', mid).attr('y2', range2[i]);\n    box.append('line').attr('x1', xs[0]).attr('y1', range2[i]).attr('x2', xs[1]).attr('y2', range2[i]);\n  }\n  return box;\n}\n\nvar Chart = exports.Chart = function () {\n  function Chart(svg) {\n    var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n    var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n    (0, _classCallCheck3.default)(this, Chart);\n\n    this.bggroup = svg.append('g');\n    this.bg = this.bggroup.append('rect').attr('opacity', 0);\n    this.group = this.bggroup.append('g');\n    this.width = width;\n    this.height = height;\n    this.marginAll = [0, 0, 0, 0];\n    this.scale = { x: null, y: null };\n    this.extents = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    this.axis = { x: null, y: null };\n    this.axisHandles = { x: null, y: null };\n    this.charts = [];\n    this.artists = {};\n    this.drawHooks = { xAxis: null, yAxis: null };\n    this.offset = [];\n    this.rotateFlag = false;\n  }\n\n  (0, _createClass3.default)(Chart, [{\n    key: 'resize',\n    value: function resize(width, height) {\n      this.width = width;\n      this.height = height;\n      return this;\n    }\n  }, {\n    key: 'translate',\n    value: function translate(x, y) {\n      this.offset = [x, y];\n      this.bggroup.attr('transform', 'translate(' + this.offset[0] + ',' + this.offset[1] + ')');\n\n      return this;\n    }\n  }, {\n    key: 'transform',\n    value: function transform() {\n      var _this = this;\n\n      if (this.rotateFlag === true) {\n        var x = this.width - this.marginLeft - this.marginRight;\n        var y = this.height - this.marginTop - this.marginBottom;\n        var rx = y / x;\n        var ry = x / y;\n        (0, _keys2.default)(this.artists).forEach(function (artist) {\n          _this.artists[artist].handles.forEach(function (handle) {\n            var scale = '';\n            var rotate = 'rotate(-90, 0, 0)';\n            var translate = 'translate(' + -(_this.width - _this.marginLeft - _this.marginRight) + ', 0)';\n            handle.attr('transform', rotate + translate + scale);\n          });\n        });\n      }\n    }\n  }, {\n    key: 'rotate',\n    value: function rotate() {\n      var _this2 = this;\n\n      this.rotateFlag = !this.rotateFlag;\n      if (this.rotateFlag) {\n        this.drawTmp = this.draw;\n        var tmpSize = [this.width, this.height];\n        var tmpMargin = this.marginAll;\n        this.draw = function () {\n          _this2.axisHandles.x = _this2.axisHandles.y = 1;\n\n          _this2.width = tmpSize[1];\n          _this2.height = tmpSize[0];\n          _this2.marginAll = [tmpMargin[1], tmpMargin[2], tmpMargin[3], tmpMargin[0]];\n\n          _this2.updateScale();\n          _this2.drawTmp();\n\n          _this2.axisHandles.x = _this2.axisHandles.y = null;\n\n          _this2.width = tmpSize[0];\n          _this2.height = tmpSize[1];\n\n          _this2.marginAll = tmpMargin;\n          _this2.extents.reverse();\n          _this2.updateScale();\n          _this2.drawAxis();\n          _this2.extents.reverse();\n        };\n      } else {\n        this.draw = this.drawTmp;\n      }\n      return this;\n    }\n  }, {\n    key: 'background',\n    value: function background(color, alpha) {\n      this.bg.attr('width', this.width).attr('height', this.height).attr('fill', color).attr('opacity', alpha);\n      return this;\n    }\n  }, {\n    key: 'margin',\n    value: function margin(top) {\n      var right = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : top;\n      var bottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : top;\n      var left = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : right;\n\n      this.marginAll = [top, right, bottom, left];\n      this.group.attr('transform', 'translate(' + this.marginLeft + ', ' + this.marginTop + ')');\n      return this;\n    }\n  }, {\n    key: 'subChart',\n    value: function subChart() {\n      var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      var chart = new Chart(this.group, width, height).translate(this.marginLeft, this.marginTop);\n      this.charts.push(chart);\n      return chart;\n    }\n  }, {\n    key: 'updateExtentI',\n    value: function updateExtentI(extent, i) {\n      var range = extent[1] - extent[0];\n\n      var timer = range === 0 ? 10000 : 10 < range ? 1 : Math.round(10 / range);\n      this.extents[i][0] = Math.min(Math.floor(timer * (extent[0] - range * 0.02)) / timer, this.extents[i][0]);\n      this.extents[i][1] = Math.max(Math.ceil(timer * (extent[1] + range * 0.02)) / timer, this.extents[i][1]);\n\n      return this;\n    }\n  }, {\n    key: 'updateExtent',\n    value: function updateExtent(xExtent, yExtent) {\n      return this.updateExtentI(xExtent, 0).updateExtentI(yExtent, 1);\n    }\n  }, {\n    key: 'updateScale',\n    value: function updateScale(data) {\n      var xfn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (d) {\n        return d[0];\n      };\n      var yfn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (d) {\n        return d[1];\n      };\n\n      return this.updateScaleX(data, xfn).updateScaleY(data, yfn);\n    }\n  }, {\n    key: 'updateScaleX',\n    value: function updateScaleX(data, xfn) {\n      if (data) this.updateExtentI(d3.extent(data, xfn), 0);\n      this.scale.x = d3.scaleLinear().domain(this.extents[0]).rangeRound([0, this.width - this.marginRight - this.marginLeft]);\n      return this;\n    }\n  }, {\n    key: 'updateScaleY',\n    value: function updateScaleY(data, yfn) {\n      if (data) this.updateExtentI(d3.extent(data, yfn), 1);\n      this.scale.y = d3.scaleLinear().domain(this.extents[1]).rangeRound([this.height - this.marginBottom - this.marginTop, 0]);\n      return this;\n    }\n  }, {\n    key: 'drawAxis',\n    value: function drawAxis() {\n      if (!this.axisHandles.x && this.drawHooks.xAxis) {\n        this.drawHooks.xAxis();\n      }\n      if (!this.axisHandles.y && this.drawHooks.yAxis) {\n        this.drawHooks.yAxis();\n      }\n    }\n  }, {\n    key: 'xAxis',\n    value: function xAxis() {\n      var _this3 = this;\n\n      var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'x';\n      var pos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'bottom';\n\n      var translateStr = void 0;\n      if (pos === 'bottom') {\n        translateStr = function translateStr() {\n          return [0, _this3.scale.y(_this3.extents[1][0])];\n        };\n        this.axis.x = d3.axisBottom();\n      } else if (pos === 'top') {\n        translateStr = function translateStr() {\n          return [0, _this3.scale.y(_this3.extents[1][1])];\n        };\n        this.axis.x = d3.axisTop();\n      } else {\n        console.log('Unknown axis position: ' + pos);\n        return this;\n      }\n      this.drawHooks.xAxis = function () {\n        _this3.axis.x.scale(_this3.scale.x);\n        _this3.axisHandles.x = _this3.group.append('g');\n        _this3.axisHandles.x.attr('transform', 'translate(' + translateStr() + ')').call(_this3.axis.x);\n        if (label) {\n          var labelSize = 13;\n          _this3.axisHandles.x.append('text').attr('transform', 'translate(' + [_this3.scale.x(_this3.extents[0][1]), 0] + ')').attr('dx', labelSize / 2).attr('dy', labelSize / 2).attr('text-anchor', 'start').attr('font-size', labelSize).style('fill', '#000').text(label);\n        }\n      };\n      return this;\n    }\n  }, {\n    key: 'yAxis',\n    value: function yAxis() {\n      var _this4 = this;\n\n      var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'y';\n      var pos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'left';\n\n      var translateStr = void 0;\n      if (pos === 'left') {\n        translateStr = function translateStr() {\n          return [_this4.scale.x(_this4.extents[0][0]), 0];\n        };\n        this.axis.y = d3.axisLeft();\n      } else if (pos === 'right') {\n        translateStr = function translateStr() {\n          return [_this4.scale.x(_this4.extents[0][1]), 0];\n        };\n        this.axis.y = d3.axisRight();\n      } else {\n        console.log('Unknown axis position: ' + pos);\n        return this;\n      }\n      this.drawHooks.yAxis = function () {\n        _this4.axis.y.scale(_this4.scale.y);\n        _this4.axisHandles.y = _this4.group.append('g').attr('transform', 'translate(' + translateStr() + ')').call(_this4.axis.y);\n        if (label) {\n          var labelSize = 13;\n          _this4.axisHandles.y.append('text').attr('transform', 'translate(' + [0, _this4.scale.y(_this4.extents[1][1])] + ')').attr('dx', 0).attr('dy', -labelSize / 2).attr('text-anchor', 'middle').attr('font-size', labelSize).style('fill', '#000').text(label);\n        }\n      };\n      return this;\n    }\n  }, {\n    key: 'line',\n    value: function line(data) {\n      var xfn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (d) {\n        return d[0];\n      };\n      var yfn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (d) {\n        return d[1];\n      };\n\n      this.updateScale(data, xfn, yfn);\n      var lineArtist = void 0;\n      if (this.artists.lines) {\n        lineArtist = this.artists.lines;\n      } else {\n        var self = this;\n        lineArtist = new LineArtist(self);\n        this.artists.lines = lineArtist;\n      }\n      var handle = lineArtist.plot(data, xfn, yfn);\n      return handle;\n    }\n  }, {\n    key: 'area',\n    value: function area(data, xfn, y0fn, y1fn, color) {\n      this.updateScaleX(data, xfn).updateScaleY(data, y0fn).updateScaleY(data, y1fn);\n      var artist = void 0;\n      if (this.artists.areas) {\n        artist = this.artists.areas;\n      } else {\n        var self = this;\n        artist = new AreaArtist(self);\n        this.artists.areas = artist;\n      }\n      var handle = artist.plot(data, xfn, y0fn, y1fn, color);\n      return handle;\n    }\n  }, {\n    key: 'box',\n    value: function box(data, width, xfn, y0fn, r1fn, r2fn) {\n      var params = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n\n      this.updateScaleX(data, xfn).updateScaleY(data, function (d, i) {\n        return r2fn(d, i)[0];\n      }).updateScaleY(data, function (d, i) {\n        return r2fn(d, i)[1];\n      });\n      var artist = void 0;\n      if (this.artists.boxes) {\n        artist = this.artists.boxes;\n      } else {\n        var self = this;\n        artist = new BoxArtist(self);\n        this.artists.boxes = artist;\n      }\n      var handle = artist.plot(data, width, xfn, y0fn, r1fn, r2fn, params = {});\n      return handle;\n    }\n  }, {\n    key: 'draw',\n    value: function draw() {\n      var _this5 = this;\n\n      this.transform();\n\n      (0, _keys2.default)(this.artists).forEach(function (name) {\n        return _this5.artists[name].draw();\n      });\n      this.charts.forEach(function (c) {\n        return c.draw();\n      });\n      this.drawAxis();\n    }\n  }, {\n    key: 'clean',\n    value: function clean() {\n      var _this6 = this;\n\n      this.charts.forEach(function (c) {\n        return c.clean();\n      });\n      (0, _keys2.default)(this.artists).forEach(function (name) {\n        return _this6.artists[name].clean();\n      });\n      (0, _keys2.default)(this.axisHandles).forEach(function (name) {\n        if (_this6.axisHandles[name]) {\n          _this6.axisHandles[name].remove();\n          _this6.axisHandles[name] = null;\n        }\n      });\n      this.marginAll = [0, 0, 0, 0];\n      this.rotateFlag = false;\n      this.scale = { x: null, y: null };\n      this.extents = [[Infinity, -Infinity], [Infinity, -Infinity]];\n\n      this.drawHooks = { xAxis: null, yAxis: null };\n      this.charts = [];\n      return this;\n    }\n  }, {\n    key: 'marginTop',\n    get: function get() {\n      return this.marginAll[0];\n    }\n  }, {\n    key: 'marginRight',\n    get: function get() {\n      return this.marginAll[1];\n    }\n  }, {\n    key: 'marginBottom',\n    get: function get() {\n      return this.marginAll[2];\n    }\n  }, {\n    key: 'marginLeft',\n    get: function get() {\n      return this.marginAll[3];\n    }\n  }]);\n  return Chart;\n}();\n\nvar LineArtist = exports.LineArtist = function (_Artist) {\n  (0, _inherits3.default)(LineArtist, _Artist);\n\n  function LineArtist(chart) {\n    (0, _classCallCheck3.default)(this, LineArtist);\n\n    var _this7 = (0, _possibleConstructorReturn3.default)(this, (LineArtist.__proto__ || (0, _getPrototypeOf2.default)(LineArtist)).call(this, chart));\n\n    _this7.data = [];\n    _this7.lines = [];\n    return _this7;\n  }\n\n  (0, _createClass3.default)(LineArtist, [{\n    key: 'plot',\n    value: function plot(data) {\n      var xfn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (d) {\n        return d[0];\n      };\n\n      var _this8 = this;\n\n      var yfn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (d) {\n        return d[1];\n      };\n      var color = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaultColorScheme(this.handles.length);\n\n      var handle = this.group.append('path');\n      var line = d3.line().x(function (d, i) {\n        return _this8.scale.x(xfn(d, i));\n      }).y(function (d, i) {\n        return _this8.scale.y(yfn(d, i));\n      });\n      var drawHook = function drawHook() {\n        handle.datum(data).attr('d', line).attr('fill', 'none').attr('stroke-linejoin', 'round').attr('stroke-linecap', 'round');\n      };\n      this.data.push(data);\n      this.handles.push(handle);\n      this.lines.push(line);\n      this.drawHooks.push(drawHook);\n      return handle;\n    }\n  }]);\n  return LineArtist;\n}(Artist);\n\nvar AreaArtist = exports.AreaArtist = function (_Artist2) {\n  (0, _inherits3.default)(AreaArtist, _Artist2);\n\n  function AreaArtist(chart) {\n    (0, _classCallCheck3.default)(this, AreaArtist);\n\n    var _this9 = (0, _possibleConstructorReturn3.default)(this, (AreaArtist.__proto__ || (0, _getPrototypeOf2.default)(AreaArtist)).call(this, chart));\n\n    _this9.data = [];\n    _this9.areas = [];\n    return _this9;\n  }\n\n  (0, _createClass3.default)(AreaArtist, [{\n    key: 'plot',\n    value: function plot(data, xfn, y0fn, y1fn) {\n      var _this10 = this;\n\n      var color = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : defaultColorScheme(this.handles.length);\n\n      var handle = this.group.append('path');\n      var area = d3.area().x(function (d, i) {\n        return _this10.scale.x(xfn(d, i));\n      }).y0(function (d, i) {\n        return _this10.scale.y(y0fn(d, i));\n      }).y1(function (d, i) {\n        return _this10.scale.y(y1fn(d, i));\n      });\n      var drawHook = function drawHook() {\n        handle.datum(data);\n        handle.attr('d', area);\n      };\n      this.data.push(data);\n      this.handles.push(handle);\n      this.areas.push(area);\n      this.drawHooks.push(drawHook);\n      return handle;\n    }\n  }]);\n  return AreaArtist;\n}(Artist);\n\nvar BoxArtist = exports.BoxArtist = function (_Artist3) {\n  (0, _inherits3.default)(BoxArtist, _Artist3);\n\n  function BoxArtist(chart) {\n    (0, _classCallCheck3.default)(this, BoxArtist);\n\n    var _this11 = (0, _possibleConstructorReturn3.default)(this, (BoxArtist.__proto__ || (0, _getPrototypeOf2.default)(BoxArtist)).call(this, chart));\n\n    _this11.data = [];\n    return _this11;\n  }\n\n  (0, _createClass3.default)(BoxArtist, [{\n    key: 'plot',\n    value: function plot(data, width, xfn, y0fn, r1fn, r2fn, params) {\n      var _this12 = this;\n\n      var handle = this.group.append('g');\n      var drawHook = function drawHook() {\n        data.forEach(function (d, i) {\n          var xShift = _this12.scale.x(xfn(d, i));\n          BoxArtist.drawBox(handle, [xShift - width / 2, xShift + width / 2], _this12.scale.y(y0fn(d, i)), r1fn(d, i).map(function (v) {\n            return _this12.scale.y(v);\n          }), r2fn(d, i).map(function (v) {\n            return _this12.scale.y(v);\n          }));\n        });\n      };\n      this.handles.push(handle);\n      this.drawHooks.push(drawHook);\n      this.data.push(data);\n      return handle;\n    }\n  }], [{\n    key: 'drawBox',\n    value: function drawBox(el, xs, mean, range1, range2) {\n      var box = el.append('g');\n\n      var mid = (xs[0] + xs[1]) / 2;\n      box.append('rect').attr('x', xs[0]).attr('y', Math.min(range1[0], range1[1])).attr('width', xs[1] - xs[0]).attr('height', Math.abs(range1[1] - range1[0]));\n      box.append('line').attr('x1', xs[0]).attr('y1', mean).attr('x2', xs[1]).attr('y2', mean).attr('stroke-width', 0.5);\n      for (var i = 0; i < 2; i += 1) {\n        box.append('line').attr('x1', mid).attr('y1', range1[i]).attr('x2', mid).attr('y2', range2[i]).attr('stroke-width', 0.5);\n        box.append('line').attr('x1', xs[0]).attr('y1', range2[i]).attr('x2', xs[1]).attr('y2', range2[i]).attr('stroke-width', 0.5);\n      }\n      return box;\n    }\n  }]);\n  return BoxArtist;\n}(Artist);\n\nexports.default = {\n  Chart: Chart\n};\n\n/***/ }),\n\n/***/ 166:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sentence = undefined;\n\nvar _sign = __webpack_require__(168);\n\nvar _sign2 = _interopRequireDefault(_sign);\n\nvar _from = __webpack_require__(49);\n\nvar _from2 = _interopRequireDefault(_from);\n\nvar _toConsumableArray2 = __webpack_require__(70);\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _classCallCheck2 = __webpack_require__(25);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(26);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _d = __webpack_require__(21);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _preprocess = __webpack_require__(167);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar layoutParams = {\n  nodeIntervalScale: 1.5,\n  color: d3.scaleOrdinal(d3.schemeCategory20),\n  radiusScale: 1.5,\n  widthScale: 1.5,\n  avgValueRange: [-0.5, 0.5],\n  rulerScale: 0.2,\n  markerWidthScale: 0.6,\n  markerHeightScale: 0.3,\n  wordSize: 12,\n  labelSize: 10,\n  negColor: '#09adff',\n  posColor: '#ff5b09'\n};\n\nvar SentenceLayout = function () {\n  function SentenceLayout(selector) {\n    var compare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : layoutParams;\n    (0, _classCallCheck3.default)(this, SentenceLayout);\n\n    this.group = selector;\n    this._size = [50, 600];\n    this._rectSize = [20, 50];\n    this._sentence;\n    this._coCluster;\n    this.params = params;\n\n    this._dataList = [];\n    this.type = 'bar2';\n    this.compare = compare;\n    this._mouseoverCallback = function (_) {\n      console.log(_);\n    };\n    this._barMouseoverCallback = function (_) {\n      console.log(_);\n    };\n    this.transform();\n  }\n\n  (0, _createClass3.default)(SentenceLayout, [{\n    key: 'mouseoverCallback',\n    value: function mouseoverCallback(func) {\n      return arguments.length ? (this._mouseoverCallback = func, this) : this._mouseoverCallback;\n    }\n  }, {\n    key: 'barMouseoverCallback',\n    value: function barMouseoverCallback(func) {\n      return arguments.length ? (this._barMouseoverCallback = func, this) : this._barMouseoverCallback;\n    }\n  }, {\n    key: 'size',\n    value: function size(_size) {\n      return arguments.length ? (this._size = _size, this) : this._size;\n    }\n  }, {\n    key: 'transform',\n    value: function transform() {\n      var transformStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      if (this.compare) transformStr += 'scale(-1, 1) translate(' + [-this.nodeWidth, 0] + ')';\n      console.log(transformStr);\n      this.group.transition().duration(200).attr('transform', transformStr);\n      return this;\n    }\n  }, {\n    key: 'sentence',\n    value: function sentence(_sentence) {\n      return arguments.length ? (this._sentence = _sentence, this) : this._sentence;\n    }\n  }, {\n    key: 'coCluster',\n    value: function coCluster(_coCluster) {\n      return arguments.length ? (this._coCluster = _coCluster, this) : this._coCluster;\n    }\n  }, {\n    key: 'words',\n    value: function words(_words) {\n      return arguments.length ? (this._words = _words, this) : this._words;\n    }\n  }, {\n    key: 'draw',\n    value: function draw() {\n      var _this = this;\n\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.type;\n\n      this.type = type;\n\n      this.prepareDraw(type);\n\n      if (type === 'pie') {\n        this._dataList.forEach(function (data, i) {\n          var pos = _this.getWordPos(i);\n          var g = _this.group.append('g');\n          _this.drawWord(g, data, i).attr('transform', 'translate(' + pos + ')');\n        });\n      } else {\n        this._dataList.forEach(function (data, i) {\n          var pos = _this.getWordPos(i);\n          if (i > 0) {\n            var gl = _this.group.append('g');\n            _this.drawConnection(gl, data, i).attr('transform', 'translate(' + [pos[0], pos[1] - _this.nodeInterval] + ')');\n          }\n          var g = _this.group.append('g');\n          _this.drawWord(g, data, i).attr('transform', 'translate(' + pos + ')');\n        });\n      }\n\n\n      return this;\n    }\n  }, {\n    key: 'drawWordRect',\n    value: function drawWordRect(g, data, rectSize, func) {\n      data.forEach(function (d, i) {\n        g.append('text').text(d.word).style('text-anchor', 'middle').attr('transform', 'rotate(90)translate(' + [rectSize[1] * i + rectSize[1] / 2, -rectSize[0] / 4] + ')');\n\n        g.append('rect').attr('x', 0).attr('y', i * rectSize[1]).attr('width', rectSize[0]).attr('height', rectSize[1]).attr('fill', 'lightgray').attr('stroke-width', 2).attr('stroke', 'blue').attr('opacity', 0.2);\n      });\n      g.append('g').call(d3.brushY().extent([[0, 0], [rectSize[0], rectSize[1] * data.length]]).on('end', function () {\n        if (!d3.event.sourceEvent) return;\n        if (!d3.event.selection) return;\n        var extent = d3.event.selection;\n        extent[0] = Math.round(extent[0] / rectSize[1]) * rectSize[1];\n        extent[1] = Math.round(extent[1] / rectSize[1]) * rectSize[1];\n        d3.select(this).transition().call(d3.event.target.move, extent);\n        func([Math.round(extent[0] / rectSize[1]), Math.round(extent[1] / rectSize[1])]);\n      }));\n\n      return g;\n    }\n  }, {\n    key: 'prepareDraw',\n    value: function prepareDraw() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.type;\n\n      if (this._dataList.length !== this._sentence.length || this._dataList[0].data[0].current.length != this._coCluster.labels.length) this._dataList = this.preprocess(this._sentence, this._coCluster, this._words);else this.clean();\n\n      var maxValue = 0.1;\n      this.dataList.forEach(function (data) {\n        data.data.forEach(function (clst) {\n          var clstMaxP = clst.currents[0] - Math.min(clst.updateds[0], 0);\n          var clstMaxN = clst.currents[1] - Math.min(clst.updateds[1], 0);\n          var clstMax = Math.max(clstMaxP / clst.size, Math.abs(clstMaxN / clst.size));\n          maxValue = maxValue < clstMax ? clstMax : maxValue;\n        });\n      });\n      maxValue = Math.ceil(maxValue * 11) / 10;\n      this.params.avgValueRange = [-maxValue, maxValue];\n      if (type === 'bar') {\n        this.scaleHeight = d3.scaleLinear().range([-this.nodeHeight / 2, this.nodeHeight / 2]).domain(this.params.avgValueRange);\n        var stateSize = 0;\n        for (var j = 0; j < this._dataList[0].data.length; j++) {\n          stateSize += this._dataList[0].data[j].size;\n        }this.scaleWidth = d3.scaleLinear().range([0, this.nodeWidth]).domain([0, stateSize]);\n      } else if (type === 'bar2') this.scaleHeight = d3.scaleLinear().range([-this.nodeHeight / 2, this.nodeHeight / 2]).domain(this.params.avgValueRange);\n      this.drawWord = type === 'pie' ? this.drawOneWordPie : type === 'bar' ? this.drawOneWordBar : this.drawOneWordBar2;\n      this.drawConnection = type === 'bar' ? this.drawOneConnection : type === 'bar2' ? this.drawOneConnection2 : null;\n    }\n  }, {\n    key: 'clean',\n    value: function clean() {\n      this._dataList.forEach(function (data) {\n        if (data.el) data.el.transition().duration(300).style('opacity', 0).remove();\n      });\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.clean();\n      this._dataList = [];\n    }\n  }, {\n    key: 'getWordPos',\n    value: function getWordPos(i) {\n      return [0, (this.nodeHeight + this.nodeInterval) * i];\n    }\n  }, {\n    key: 'drawOneWordBar',\n    value: function drawOneWordBar(el, data, i) {\n      var height = this.nodeHeight;\n      var width = this.nodeWidth;\n      var color = this.params.color;\n      console.log(data);\n      var scaleHeight = this.scaleHeight;\n      var scaleWidth = this.scaleWidth;\n\n      var bg = el.append('rect').attr('x', 0).attr('y', 0).attr('width', width).attr('height', height).attr('stroke', 'gray').attr('stroke-width', 0.5).attr('fill', 'none');\n\n      var gSelector = el.selectAll('g').data(data.data);\n      var g1 = gSelector.enter().append('g');\n      var cur = g1.append('rect').attr('x', function (d) {\n        return scaleWidth(d.accumulate);\n      }).attr('y', function (d) {\n        return height - scaleHeight(d.prev / d.size);\n      }).attr('width', function (d) {\n        return scaleWidth(d.size);\n      }).attr('height', function (d) {\n        return scaleHeight(d.prev / d.size);\n      }).attr('fill', function (d, j) {\n        return color(j);\n      });\n      g1.style('fill-opacity', 0.4).style('stroke', 'gray').style('stroke-width', 0.5);\n\n      var g2 = gSelector.enter().append('g');\n      var updated = g2.append('rect').attr('x', function (d) {\n        return scaleWidth(d.accumulate);\n      }).attr('y', function (d) {\n        return height - (d.updated * d.major < 0 ? scaleHeight(d.prev / d.size) : scaleHeight((d.prev + d.updated * d.major) / d.size));\n      }).attr('width', function (d) {\n        return scaleWidth(d.size);\n      }).attr('height', function (d) {\n        return scaleHeight(Math.abs(d.updated) / d.size);\n      }).attr('fill', function (d, j) {\n        return d.updated * d.major < 0 ? 'white' : color(j);\n      });\n      g2.style('fill-opacity', 0.8).style('stroke', 'gray').style('stroke-width', 0.5);\n\n      data.el = el;\n      return el;\n    }\n  }, {\n    key: 'drawOneWordBar2',\n    value: function drawOneWordBar2(el, data, t) {\n      var paintColor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      var self = this;\n      var height = this.nodeHeight;\n      var width = this.nodeWidth;\n      var color = this.params.color;\n\n      var scaleHeight = this.scaleHeight;\n      var unitWidth = this.nodeWidth / data.data.length;\n      var posColor = this.params.posColor;\n      var negColor = this.params.negColor;\n\n      el.on('mouseover', function () {\n        self._mouseoverCallback(data, t, true);\n      }).on('mouseleave', function () {\n        self._mouseoverCallback(data, t, false);\n      }).on('click', function () {\n        self._mouseoverCallback(data, t, false, true);\n      });\n\n      var bg = el.append('rect').attr('x', 0).attr('y', 0).attr('width', width).attr('height', height).attr('stroke', 'black').attr('stroke-width', 1.0).attr('stroke-opacity', 0.3).attr('fill', 'white').attr('fill-opacity', 0);\n\n      var gSelector = el.selectAll('g').data(data.data);\n      var gCurrent = gSelector.enter().append('g').on('mouseenter', function (d, i) {\n        self._barMouseoverCallback(i, true);\n      }).on('mouseleave', function (d, i) {\n        self._barMouseoverCallback(i, false);\n      });\n      var cur = gCurrent.append('rect').attr('x', function (d, i) {\n        return unitWidth * i;\n      }).attr('y', function (d) {\n        return height / 2 - scaleHeight(d.currents[0] / d.size);\n      }).attr('width', function (d) {\n        return unitWidth;\n      }).attr('height', function (d) {\n        return scaleHeight((d.currents[0] - d.currents[1]) / d.size);\n      }).attr('fill', function (d, j) {\n        return color(j);\n      });\n      gCurrent.style('fill-opacity', 0.4).attr('stroke', 'black').attr('stroke-width', 1.0).attr('stroke-opacity', 0.5);\n\n      gCurrent.append('path').attr('d', function (d, i) {\n        return 'M ' + unitWidth * i + ' ' + (height / 2 - scaleHeight(d.currents[0] / d.size)) + ' H ' + unitWidth * (i + 1);\n      }).attr('stroke-width', 2);\n\n      gCurrent.append('path').attr('d', function (d, i) {\n        return 'M ' + unitWidth * i + ' ' + (height / 2 - scaleHeight(d.currents[1] / d.size)) + ' H ' + unitWidth * (i + 1);\n      }).attr('stroke-width', 2);\n\n      var gUpdated1 = gSelector.enter().append('g');\n      var updated1 = gUpdated1.append('rect').attr('x', function (d, i) {\n        return unitWidth * i;\n      }).attr('y', function (d) {\n        return height / 2 + scaleHeight(-d.currents[1] / d.size);\n      }).attr('width', function (d) {\n        return unitWidth;\n      }).attr('height', function (d) {\n        return scaleHeight(Math.abs(d.updateds[1]) / d.size);\n      }).attr('transform', function (d) {\n        return d.updateds[1] < 0 ? 'translate(' + [0, -scaleHeight(Math.abs(d.updateds[1]) / d.size)] + ')' : '';\n      }).style('fill-opacity', 0.4);\n      if (paintColor) {\n        updated1.attr('fill', function (d, j) {\n          return d.updateds[1] > 0 ? 'none' : color(j);\n        });\n      } else {\n        updated1.attr('fill', function (d, i) {\n          return d.updateds[1] > 0 ? posColor : negColor;\n        });\n        cur.attr('fill', function (d, j) {\n          return '#bbb';\n        });\n      }\n      gUpdated1.style('stroke-width', 0.5).style('stroke', 'none');\n\n      var gUpdated2 = gSelector.enter().append('g');\n      var updated2 = gUpdated2.append('rect').attr('x', function (d, i) {\n        return unitWidth * i;\n      }).attr('y', function (d) {\n        return height / 2 - scaleHeight(d.currents[0] / d.size);\n      }).attr('width', function (d) {\n        return unitWidth;\n      }).attr('height', function (d) {\n        return scaleHeight(Math.abs(d.updateds[0]) / d.size);\n      }).attr('transform', function (d) {\n        return d.updateds[0] < 0 ? 'translate(' + [0, -scaleHeight(Math.abs(d.updateds[0]) / d.size)] + ')' : '';\n      }).style('stroke-opacity', function (d, j) {\n        return d.updateds[1] < 0 ? 1.0 : 1.0;\n      });\n      if (paintColor) {\n        updated2.attr('fill', function (d, j) {\n          return d.updateds[0] < 0 ? 'none' : color(j);\n        });\n      } else {\n        updated2.attr('fill', function (d, i) {\n          return d.updateds[0] < 0 ? negColor : posColor;\n        });\n      }\n      gUpdated2.style('stroke-width', 0.5).style('stroke', 'none').style('fill-opacity', 0.4);\n\n      el.append('path').attr('d', 'M0 ' + height / 2 + ' H ' + width).style('stroke', 'black').style('stroke-width', 0.5);\n\n      var fontSize = this.params.wordSize;\n      var labelSize = this.params.labelSize;\n      var valRange = [this.params.avgValueRange[1], this.params.avgValueRange[0]];\n      var wordX = this.compare ? 4 + width : -2 - fontSize;\n      el.selectAll('text').data(valRange).enter().append('text').attr('x', this.compare ? width + 2 : -2).attr('y', function (d, i) {\n        return i * (height - 4) + 5;\n      }).attr('text-anchor', this.compare ? 'start' : 'end').attr('font-size', labelSize).text(function (d) {\n        return d;\n      });\n\n      el.append('text').attr('x', wordX).attr('y', height / 2).attr('text-anchor', 'middle').attr('transform', 'rotate(' + [90, wordX, height / 2] + ')').attr('font-size', fontSize).text(data.word);\n\n      cur.each(function (d) {\n        if (d.els) d.els[0] = this;else d.els = [this];\n      });\n      updated1.each(function (d) {\n        d.els[1] = this;\n      });\n      updated2.each(function (d) {\n        d.els[2] = this;\n      });\n      data.els = [cur, updated1, updated2];\n      data.el = el;\n      data.bg = bg;\n      return el;\n    }\n  }, {\n    key: 'drawOneConnection2',\n    value: function drawOneConnection2(el, data, t) {\n      var _this2 = this;\n\n      var paintColor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      var height = this.nodeInterval;\n\n      var color = paintColor ? this.params.color : function (i) {\n        return data.data[i].currents[0] + data.data[i].currents[1] > 0 ? _this2.params.posColor : _this2.params.negColor;\n      };\n\n      var unitWidth = this.nodeWidth / data.data.length;\n      var rulerWidth = this.params.rulerScale * unitWidth;\n      var markerWidth = this.params.markerWidthScale * unitWidth;\n      var markerHeight = this.params.markerHeightScale * unitWidth;\n      var gs = el.selectAll('g').data(data.data).enter().append('g');\n      var rulers1 = gs.append('rect').attr('x', function (d, i) {\n        return unitWidth * (i + 0.5) - rulerWidth / 2;\n      }).attr('y', 0).attr('width', rulerWidth).attr('height', function (d) {\n        return (height - markerHeight) * d.keptRate;\n      }).style('stroke', 'none').style('fill', function (d, i) {\n        return color(i);\n      }).style('fill-opacity', 0.5);\n\n      var rulers2 = gs.append('rect').attr('x', function (d, i) {\n        return unitWidth * (i + 0.5) - rulerWidth / 2;\n      }).attr('y', function (d) {\n        return (height - markerHeight) * d.keptRate;\n      }).attr('width', rulerWidth).attr('height', function (d) {\n        return height - (height - markerHeight) * d.keptRate;\n      }).style('stroke', 'none').style('fill', 'gray').style('fill-opacity', 0.5);\n\n      var markers = gs.append('path').attr('d', function (d, i) {\n        return 'M' + (unitWidth * (i + 0.5) - markerWidth / 2) + ' ' + (height - markerHeight) * d.keptRate + ' ' + 'H' + ' ' + (unitWidth * (i + 0.5) + markerWidth / 2) + ' ' + 'L' + ' ' + unitWidth * (i + 0.5) + ' ' + ((height - markerHeight) * d.keptRate + markerHeight);\n      });\n\n      return el;\n    }\n  }, {\n    key: 'drawOneConnection',\n    value: function drawOneConnection(el, data, i) {\n      var height = this.nodeInterval;\n      var width = this.nodeWidth;\n      var color = this.params.color;\n      console.log(data);\n\n      var scaleWidth = this.scaleWidth;\n      var calPoints = function calPoints(clst) {\n        var arr = new Array(4);\n        var mar = (1 - clst.keptRate) * clst.size / 2;\n        arr[0] = [scaleWidth(clst.accumulate), 0];\n        arr[1] = [scaleWidth(clst.accumulate + clst.size), 0];\n        arr[2] = [scaleWidth(clst.accumulate + clst.size - mar), height];\n        arr[3] = [scaleWidth(clst.accumulate + mar), height];\n        return arr[0] + ' ' + arr[1] + ' ' + arr[2] + ' ' + arr[3];\n      };\n      el.selectAll('polygon').data(data.data).enter().append('polygon').attr('points', function (d) {\n        return calPoints(d);\n      }).attr('fill', function (d, j) {\n        return color(j);\n      }).attr('fill-opacity', 0.6);\n      return el;\n    }\n  }, {\n    key: 'drawOneWordPie',\n    value: function drawOneWordPie(el, data, i) {\n      var radius = this.radius;\n      var color = this.params.color;\n      console.log(data);\n      var arc1 = d3.arc().innerRadius(1).outerRadius(function (d) {\n        return radius * d.data.keptRate;\n      });\n\n      var arc2 = d3.arc().innerRadius(function (d) {\n        return radius * d.data.keptRate;\n      }).outerRadius(radius);\n\n      var arc3 = d3.arc().innerRadius(function (d) {\n        return radius * (d.data.updatedRate < 0 ? 1 + d.data.updatedRate : 1);\n      }).outerRadius(function (d) {\n        return radius * (d.data.updatedRate < 0 ? 1 : 1 + d.data.updatedRate);\n      });\n\n      var arcs = [arc1, arc3, arc2];\n      var pie = d3.pie().sort(null).value(function (d) {\n        return d.prev ? d.prev : d.current;\n      });\n\n      var gs = new Array(3);\n      var handles = new Array(3);\n\n      var _loop = function _loop(j) {\n        gs[j] = el.append('g');\n        if (i === 0 && j === 0) return 'continue';\n        handles[j] = gs[j].selectAll(\".arc\").append('g').classed('arc', true).data(pie(data.data)).enter().append(\"path\").attr(\"d\", arcs[j]).attr('stroke', 'gray').attr('stroke-width', 0.3).attr('fill', function (d, k) {\n          return j === 2 ? 'gray' : color(k);\n        });\n      };\n\n      for (var j = 0; j < 3; j++) {\n        var _ret = _loop(j);\n\n        if (_ret === 'continue') continue;\n      };\n      handles[1].attr('fill-opacity', function (d, k) {\n        return data.data[k].updatedRate < 0 ? 0.3 : 0.7;\n      });\n      gs[0].attr('fill-opacity', 0.7);\n\n      gs[2].attr('fill-opacity', 0.0);\n\n      data.els = gs;\n      data.handles = handles;\n      data.el = el;\n      return el;\n    }\n  }, {\n    key: 'preprocess',\n    value: function preprocess(sentence, coCluster, words) {\n      var len = sentence.length;\n      var clusterNum = coCluster.labels.length;\n      var stateNum = sentence[0].length;\n      var clustersSize = coCluster.colClusters.map(function (clst) {\n        return clst.length;\n      });\n      var accClustersSize = new Float32Array(clustersSize.length);\n      for (var i = 1; i < accClustersSize.length; i++) {\n        accClustersSize[i] += accClustersSize[i - 1] + clustersSize[i - 1];\n      }\n      var currentStates = sentence.map(function (word) {\n        return coCluster.colClusters.map(function (cluster) {\n          return cluster.map(function (idx) {\n            return word[idx];\n          });\n        });\n      });\n\n      var updatedData = sentence.map(function (word, t) {\n        if (t === 0) return word;\n        return word.map(function (v, j) {\n          return v - sentence[t - 1][j];\n        });\n      });\n\n      var infoPositive = new Array(len);\n      var infoNegative = new Array(len);\n      var infoCurrent = new Array(len);\n      for (var t = 0; t < len; t++) {\n        infoPositive[t] = new Float32Array(clusterNum);\n        infoNegative[t] = new Float32Array(clusterNum);\n        infoCurrent[t] = new Float32Array(clusterNum);\n        for (var _i = 0; _i < clusterNum; _i++) {\n          for (var j = 0; j < clustersSize[_i]; j++) {\n            if (currentStates[t][_i][j] > 0) {\n              infoPositive[t][_i] += currentStates[t][_i][j];\n            } else {\n              infoNegative[t][_i] += currentStates[t][_i][j];\n            }\n            infoCurrent[t][_i] += Math.abs(currentStates[t][_i][j]);\n          }\n        }\n      }\n\n      var infoPrevious = [new Float32Array(clusterNum)].concat((0, _toConsumableArray3.default)(infoCurrent.slice(0, len - 1)));\n      var h_tij = [currentStates[0].map(function (clst) {\n        return new Float32Array(clst.length);\n      })].concat((0, _toConsumableArray3.default)(currentStates));\n\n      var infoKept = new Array(len);\n      var keptPositive = new Array(len);\n      var keptNegative = new Array(len);\n      for (var _t = 0; _t < len; _t++) {\n        infoKept[_t] = new Float32Array(clusterNum);\n        keptPositive[_t] = new Float32Array(clusterNum);\n        keptNegative[_t] = new Float32Array(clusterNum);\n        for (var _i2 = 0; _i2 < clusterNum; _i2++) {\n          for (var _j = 0; _j < clustersSize[_i2]; _j++) {\n            var prev = h_tij[_t][_i2][_j];\n            var cur = h_tij[_t + 1][_i2][_j];\n            var ratio = cur / prev;\n            infoKept[_t][_i2] += Math.abs(prev) * (ratio < 0 ? 0 : 1 < ratio ? 1 : ratio);\n            keptPositive[_t][_i2] += prev > 0 ? cur > 0 ? cur > prev ? prev : cur : 0 : 0;\n            keptNegative[_t][_i2] += prev < 0 ? cur < 0 ? cur < prev ? prev : cur : 0 : 0;\n          }\n        }\n      }\n\n      var dataList = words.map(function (word, t) {\n        var data = (0, _from2.default)(infoCurrent[t], function (current, i) {\n          var prev = infoPrevious[t][i];\n\n          var keptP = keptPositive[t][i];\n          var keptN = keptNegative[t][i];\n          var kept = keptP - keptN;\n          var positive = infoPositive[t][i];\n          var negative = infoNegative[t][i];\n          var prevPositive = t > 0 ? infoPositive[t - 1][i] : 0;\n          var prevNegative = t > 0 ? infoNegative[t - 1][i] : 0;\n          var updatedPositive = positive - prevPositive;\n          var updatedNegative = negative - prevNegative;\n          var updated = updatedPositive + updatedNegative;\n          var size = clustersSize[i];\n          return {\n            currents: [positive, negative],\n            current: current,\n            prev: prev,\n            updatedRate: prev === 0 ? 0 : updated / prev,\n            keptRate: prev === 0 ? 0 : kept / prev,\n            updated: updated,\n            updateds: [updatedPositive, updatedNegative],\n            kepts: [keptP, keptN],\n            kept: kept,\n            size: clustersSize[i],\n            accumulate: accClustersSize[i],\n            major: (0, _sign2.default)(positive + negative)\n          };\n        });\n        return {\n          word: word,\n          data: data,\n          response: updatedData[t]\n        };\n      });\n      return dataList;\n    }\n  }, {\n    key: 'radius',\n    get: function get() {\n      if (!this._radius) {\n        var radius = this._size[0] / (this.params.widthScale * 2);\n        if (this._sentence && !this._radius) {\n          var radius2 = this._size[1] / (this.params.nodeIntervalScale * (this._sentence.length - 1) + this.params.radiusScale * 2 * this._sentence.length);\n\n          this._radius = radius < radius2 ? radius : radius2;\n        } else {\n          return radius;\n        }\n      }\n      return this._radius;\n    }\n  }, {\n    key: 'nodeHeight',\n    get: function get() {\n      return this.params.radiusScale * 2 * this.radius;\n    }\n  }, {\n    key: 'nodeWidth',\n    get: function get() {\n      return this.params.widthScale * 2 * this.radius;\n    }\n  }, {\n    key: 'nodeInterval',\n    get: function get() {\n      return this.params.nodeIntervalScale * this.radius;\n    }\n  }, {\n    key: 'dataList',\n    get: function get() {\n      return this._dataList;\n    }\n  }, {\n    key: 'strengthByCluster',\n    get: function get() {\n      if (!this._sentence || !this._coCluster) return undefined;\n      if (this._dataList.length !== this._sentence.length || this._dataList[0].data[0].current.length != this._coCluster.labels.length) this._dataList = this.preprocess(this._sentence, this._coCluster, this._words);\n      if (!this._strengthByCluster) {\n        this._strengthByCluster = this._dataList.map(function (word, i) {\n          return word.data.map(function (clst, j) {\n            return clst.size === 0 ? 0 : clst.updated / clst.size;\n          });\n        });\n      }\n      return this._strengthByCluster;\n    }\n  }]);\n  return SentenceLayout;\n}();\n\n;\n\nfunction sentence(selector) {\n  var compare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  return new SentenceLayout(selector, compare);\n};\n\nexports.sentence = sentence;\n\n/***/ }),\n\n/***/ 167:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateStatistics = exports.SentenceRecord = exports.CoClusterProcessor = undefined;\n\nvar _promise = __webpack_require__(34);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _keys = __webpack_require__(33);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _set = __webpack_require__(69);\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _toConsumableArray2 = __webpack_require__(70);\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _from = __webpack_require__(49);\n\nvar _from2 = _interopRequireDefault(_from);\n\nvar _classCallCheck2 = __webpack_require__(25);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(26);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _dataService = __webpack_require__(32);\n\nvar _dataService2 = _interopRequireDefault(_dataService);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CoClusterProcessor = exports.CoClusterProcessor = function () {\n  function CoClusterProcessor(modelName, stateName) {\n    var nCluster = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n    var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : { top_k: 300, mode: 'raw', layer: -1 };\n    var sortBy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'col';\n    (0, _classCallCheck3.default)(this, CoClusterProcessor);\n\n    this.rawData;\n    this._rowClusters;\n    this._colClusters;\n    this._colSizes;\n    this._rolSizes;\n    this._aggregation_info = null;\n    this.modelName = modelName;\n    this.stateName = stateName;\n    this.nCluster = nCluster;\n    this.params = params;\n    this.sortBy = sortBy;\n  }\n\n  (0, _createClass3.default)(CoClusterProcessor, [{\n    key: 'load',\n    value: function load() {\n      var _this = this;\n\n      return _dataService2.default.getCoCluster(this.modelName, this.stateName, this.nCluster, this.params, function (response) {\n        if (response.status === 200) {\n          _this.rawData = response.data;\n          console.log(_this);\n        } else {\n          throw response;\n        }\n      });\n    }\n  }, {\n    key: 'strength_filter',\n    value: function strength_filter(strength) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.params.mode;\n\n      switch (mode) {\n        case 'positive':\n          return strength > 0 ? strength : 0;\n          break;\n        case 'negative':\n          return strength < 0 ? Math.abs(strength) : 0;\n          break;\n        case 'abs':\n          return Math.abs(strength);\n          break;\n        case 'raw':\n          return strength;\n          break;\n      }\n    }\n  }, {\n    key: 'Create2DArray',\n    value: function Create2DArray(rowNum, colNum) {\n      return (0, _from2.default)({ length: rowNum }, function (v, i) {\n        return new Float32Array(colNum);\n      });\n    }\n  }, {\n    key: 'correlation',\n    get: function get() {\n      return this.hasData ? this.rawData.data : undefined;\n    }\n  }, {\n    key: 'labels',\n    get: function get() {\n      var _this2 = this;\n\n      if (this.hasData && !this._labels) {\n        this._labels = [].concat((0, _toConsumableArray3.default)(new _set2.default([].concat((0, _toConsumableArray3.default)(this.colLabels), (0, _toConsumableArray3.default)(this.rowLabels)))));\n        if (this.sortBy === 'col') this._labels.sort(function (a, b) {\n          return _this2.colSizes[a] - _this2.colSizes[b];\n        });else if (this.sortBy === 'row') this._labels.sort(function (a, b) {\n          return _this2.rowSizes[a] - _this2.rowSizes[b];\n        });\n      }\n      return this._labels;\n    }\n  }, {\n    key: 'colSizes',\n    get: function get() {\n      if (this.hasData && !this._colSizes) {\n        var colSizes = new Int32Array(this.labels.length);\n        this.colLabels.forEach(function (label, i) {\n          colSizes[label] += 1;\n        });\n        this._colSizes = colSizes;\n      }\n      return this._colSizes;\n    }\n  }, {\n    key: 'rowSizes',\n    get: function get() {\n      if (this.hasData && !this._rowSizes) {\n        var rowSizes = new Int32Array(this.labels.length);\n        this.rowLabels.forEach(function (label, i) {\n          rowSizes[label] += 1;\n        });\n        this._rowSizes = rowSizes;\n      }\n      return this._rowSizes;\n    }\n  }, {\n    key: 'rowLabels',\n    get: function get() {\n      return this.hasData ? this.rawData.row : undefined;\n    }\n  }, {\n    key: 'colLabels',\n    get: function get() {\n      return this.hasData ? this.rawData.col : undefined;\n    }\n  }, {\n    key: 'ids',\n    get: function get() {\n      return this.hasData ? this.rawData.ids : undefined;\n    }\n  }, {\n    key: 'words',\n    get: function get() {\n      return this.hasData ? this.rawData.words : undefined;\n    }\n  }, {\n    key: 'hasData',\n    get: function get() {\n      return Boolean(this.rawData);\n    }\n  }, {\n    key: 'aggregation_info',\n    get: function get() {\n      var _this3 = this;\n\n      if (this.hasData && !this._aggregation_info) {\n        var row_cluster_2_col_cluster = this.Create2DArray(this.nCluster, this.nCluster);\n        var _row_single_2_col_cluster = this.Create2DArray(this.rawData.row.length, this.nCluster);\n        var row_cluster_2_col_single = this.Create2DArray(this.nCluster, this.rawData.col.length);\n        var _row_single_2_col_single = this.Create2DArray(this.rawData.row.length, this.rawData.col.length);\n        var cluster = [];\n\n        this.correlation.forEach(function (strength_list, r_index) {\n          strength_list.forEach(function (s, c_index) {\n            var strength = _this3.strength_filter(s);\n            row_cluster_2_col_cluster[_this3.rawData.row[r_index]][_this3.rawData.col[c_index]] += strength / (_this3.rowSizes[_this3.rowLabels[r_index]] * _this3.colSizes[_this3.colLabels[c_index]]);\n            row_cluster_2_col_single[_this3.rawData.row[r_index]][c_index] += strength / _this3.rowSizes[_this3.rowLabels[r_index]];\n            _row_single_2_col_cluster[r_index][_this3.rawData.col[c_index]] += strength / _this3.colSizes[_this3.colLabels[c_index]];\n            _row_single_2_col_single[r_index][c_index] += strength;\n          });\n        });\n\n        this._aggregation_info = {\n          row_cluster_2_col_cluster: row_cluster_2_col_cluster,\n          row_single_2_col_cluster: _row_single_2_col_cluster,\n          row_cluster_2_col_single: row_cluster_2_col_single,\n          row_single_2_col_single: _row_single_2_col_single\n        };\n      }\n      return this._aggregation_info;\n    }\n  }, {\n    key: 'cluster2cluster',\n    get: function get() {\n      var _this4 = this;\n\n      if (this.hasData && !this._cluster2cluster) {\n        var row_cluster_2_col_cluster = this.Create2DArray(this.nCluster, this.nCluster);\n        this.correlation.forEach(function (strength_list, r_index) {\n          strength_list.forEach(function (s, c_index) {\n            var strength = _this4.strength_filter(s);\n            row_cluster_2_col_cluster[_this4.rawData.row[r_index]][_this4.rawData.col[c_index]] += strength;\n          });\n        });\n        this._cluster2cluster = row_cluster_2_col_cluster;\n      }\n      return this._cluster2cluster;\n    }\n  }, {\n    key: 'single2cluster',\n    get: function get() {\n      var _this5 = this;\n\n      if (this.hasData && !this._single2cluster) {\n        var _row_single_2_col_cluster2 = this.Create2DArray(this.rawData.row.length, this.nCluster);\n        this.correlation.forEach(function (strength_list, r_index) {\n          strength_list.forEach(function (s, c_index) {\n            var strength = _this5.strength_filter(s);\n            _row_single_2_col_cluster2[r_index][_this5.rawData.col[c_index]] += strength;\n          });\n        });\n        this._single2cluster = _row_single_2_col_cluster2;\n      }\n      return this._cluster2cluster;\n    }\n  }, {\n    key: 'cluster2single',\n    get: function get() {\n      var _this6 = this;\n\n      if (this.hasData && !this._cluster2single) {\n        var row_cluster_2_col_single = this.Create2DArray(this.nCluster, this.rawData.col.length);\n        this.correlation.forEach(function (strength_list, r_index) {\n          strength_list.forEach(function (s, c_index) {\n            var strength = _this6.strength_filter(s);\n            row_single_2_col_single[r_index][c_index] += strength;\n          });\n        });\n        this._cluster2single = row_cluster_2_col_single;\n      }\n      return this._cluster2single;\n    }\n  }, {\n    key: 'single2single',\n    get: function get() {\n      var _this7 = this;\n\n      if (this.hasData && !this._single2single) {\n        var _row_single_2_col_single2 = this.Create2DArray(this.rawData.row.length, this.rawData.col.length);\n        this.correlation.forEach(function (strength_list, r_index) {\n          strength_list.forEach(function (s, c_index) {\n            var strength = _this7.strength_filter(s);\n            row_single_2_col_cluster[r_index][_this7.rawData.col[c_index]] += strength;\n          });\n        });\n        this._single2cluster = row_single_2_col_cluster;\n      }\n      return this._cluster2cluster;\n    }\n  }, {\n    key: 'rowClusters',\n    get: function get() {\n      var _this8 = this;\n\n      if (this.hasData && !this._rowClusters) {\n        var rowClusters = (0, _from2.default)({ length: this.labels.length }, function (v, i) {\n          return [];\n        });\n        this.rawData.row.forEach(function (r, i) {\n          rowClusters[r].push(i);\n        });\n        this._rowClusters = new Array(this.labels.length);\n        this.labels.forEach(function (l, i) {\n          return _this8._rowClusters[i] = rowClusters[l];\n        });\n      }\n      return this._rowClusters;\n    }\n  }, {\n    key: 'colClusters',\n    get: function get() {\n      var _this9 = this;\n\n      if (this.hasData && !this._colClusters) {\n        var colClusters = (0, _from2.default)({ length: this.labels.length }, function (v, i) {\n          return [];\n        });\n        this.rawData.col.forEach(function (c, i) {\n          if (colClusters[c] === undefined) {\n            colClusters[c] = [];\n          }\n          colClusters[c].push(i);\n        });\n        this._colClusters = new Array(this.labels.length);\n        this.labels.forEach(function (l, i) {\n          return _this9._colClusters[i] = colClusters[l];\n        });\n      }\n      return this._colClusters;\n    }\n  }], [{\n    key: 'identifier',\n    value: function identifier(processor) {\n      return '' + processor.modelName + processor.stateName + processor.nCluster + (processor.params.layer + 1);\n    }\n  }]);\n  return CoClusterProcessor;\n}();\n\nvar SentenceRecord = exports.SentenceRecord = function () {\n  function SentenceRecord(inputs, modelName) {\n    (0, _classCallCheck3.default)(this, SentenceRecord);\n\n    this.inputs = inputs;\n    this.tokens;\n    this.records;\n    this.modelName = modelName;\n  }\n\n  (0, _createClass3.default)(SentenceRecord, [{\n    key: 'evaluate',\n    value: function evaluate() {\n      var _this10 = this;\n\n      var modelName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.modelName;\n\n      return _dataService2.default.getTextEvaluation(modelName, this.inputs, function (response) {\n        if (response.status === 200) {\n          var data = response.data;\n          _this10.tokens = data.tokens[0];\n          _this10.records = data.records[0];\n        } else {\n          throw response;\n        }\n      });\n    }\n  }, {\n    key: 'getRecords',\n    value: function getRecords(stateName) {\n      var layer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n      if (this.records) {\n        layer = layer === -1 ? this.layerNum - 1 : layer;\n        console.log(layer);\n        return this.records.map(function (word) {\n          return word[stateName][layer];\n        });\n      }\n      return undefined;\n    }\n  }, {\n    key: 'states',\n    get: function get() {\n      if (this.records && !this._states) {\n        this._states = (0, _keys2.default)(this.records[0]);\n      }\n      return this._states;\n    }\n  }, {\n    key: 'layerNum',\n    get: function get() {\n      if (this.records && !this._layerNum) {\n        this._layerNum = this.records[0][this.states[0]].length;\n      }\n      return this._layerNum;\n    }\n  }]);\n  return SentenceRecord;\n}();\n\nvar StateStatistics = exports.StateStatistics = function () {\n  function StateStatistics(modelName, stateName) {\n    var layer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    var top_k = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 600;\n    (0, _classCallCheck3.default)(this, StateStatistics);\n\n    this.modelName = modelName;\n    this.stateName = stateName;\n    this.layer = layer;\n    this.top_k = top_k;\n    this.data;\n  }\n\n  (0, _createClass3.default)(StateStatistics, [{\n    key: 'load',\n    value: function load() {\n      var _this11 = this;\n\n      if (this.data) return _promise2.default.resolve(\"Already loaded\");\n      return _dataService2.default.getStateStatistics(this.modelName, this.stateName, this.layer, this.top_k, function (response) {\n        _this11.data = response.data;\n      });\n    }\n  }, {\n    key: 'statOfWord',\n    value: function statOfWord(word) {\n      if (this.data) {\n        var id = this.word2Id[word];\n        return this.wordsData[id];\n      }\n      return undefined;\n    }\n  }, {\n    key: 'stateNum',\n    get: function get() {\n      return this.data ? this.data.mean[0].length : undefined;\n    }\n  }, {\n    key: 'statesData',\n    get: function get() {\n      var _this12 = this;\n\n      if (this.data && !this._statesData) {\n        this._statesData = this.data.mean[0].map(function (_, j) {\n          var data = {\n            words: _this12.data.words,\n\n            mean: _this12.data.mean.map(function (m) {\n              return m[j];\n            }),\n            low1: _this12.data.low1.map(function (m) {\n              return m[j];\n            }),\n            low2: _this12.data.low2.map(function (m) {\n              return m[j];\n            }),\n            high1: _this12.data.high1.map(function (m) {\n              return m[j];\n            }),\n            high2: _this12.data.high2.map(function (m) {\n              return m[j];\n            }),\n            rank: _this12.data.sort_idx.map(function (indices) {\n              return indices.findIndex(function (idx) {\n                return idx === j;\n              });\n            })\n          };\n          return data;\n        });\n      }\n      return this._statesData;\n    }\n  }, {\n    key: 'word2Id',\n    get: function get() {\n      if (this.data && !this._word2Id) {\n        var word2Id = {};\n        this.data.words.forEach(function (word, i) {\n          word2Id[word] = i;\n        });\n        this._word2Id = word2Id;\n      }\n      return this._word2Id;\n    }\n  }, {\n    key: 'wordsData',\n    get: function get() {\n      var _this13 = this;\n\n      if (this.data && !this._wordsData) {\n        this._wordsData = this.data.mean.map(function (mean, i) {\n          var data = {\n            mean: mean,\n            range1: _this13.data.low1[i].map(function (low, j) {\n              return [low, _this13.data.high1[i][j]];\n            }),\n            range2: _this13.data.low2[i].map(function (low, j) {\n              return [low, _this13.data.high2[i][j]];\n            }),\n            word: _this13.data.words[i],\n            sort_idx: _this13.data.sort_idx[i]\n          };\n          return data;\n        });\n      }\n      return this._wordsData;\n    }\n  }]);\n  return StateStatistics;\n}();\n\nfunction memorize(fn) {\n  var cache = {};\n  return function () {\n    var key = arguments.length + Array.prototype.join.call(arguments, \",\");\n    if (key in cache) {\n      return cache[key];\n    } else {\n      return cache[key] = f.apply(this, arguments);\n    }\n  };\n}\n\nexports.default = {\n  CoClusterProcessor: CoClusterProcessor,\n  SentenceRecord: SentenceRecord,\n  StateStatistics: StateStatistics,\n  memorize: memorize\n};\n\n/***/ }),\n\n/***/ 278:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(693)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(309),\n  /* template */\n  __webpack_require__(715),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 280:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 281:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(695)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(306),\n  /* template */\n  __webpack_require__(717),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 304:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.kMeans = exports.distances = undefined;\n\nvar _stringify = __webpack_require__(318);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _classCallCheck2 = __webpack_require__(25);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(26);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nexports.kmeans = kmeans;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar distances = exports.distances = {\n  euclidean: function euclidean(v1, v2) {\n    var total = 0;\n    for (var i = 0; i < v1.length; i++) {\n      total += Math.pow(v2[i] - v1[i], 2);\n    }\n    return Math.sqrt(total);\n  },\n  manhattan: function manhattan(v1, v2) {\n    var total = 0;\n    for (var i = 0; i < v1.length; i++) {\n      total += Math.abs(v2[i] - v1[i]);\n    }\n    return total;\n  },\n  max: function max(v1, v2) {\n    var max = 0;\n    for (var i = 0; i < v1.length; i++) {\n      max = Math.max(max, Math.abs(v2[i] - v1[i]));\n    }\n    return max;\n  }\n};\n\nfunction mean(points) {\n  var meanPoint = new Float32Array(points[0].length);\n  for (var i = 0; i < meanPoint.length; i++) {\n    var sum = 0;\n    for (var j = 0; j < points.length; j++) {\n      sum += points[j][i];\n    }\n    meanPoint[i] = sum / points.length;\n  }\n  return meanPoint;\n}\n\nvar kMeans = exports.kMeans = function () {\n  function kMeans(centroids) {\n    var distance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"euclidean\";\n    (0, _classCallCheck3.default)(this, kMeans);\n\n    this.centroids = centroids || [];\n    this.distance = distance;\n    if (typeof this.distance == \"string\") {\n      this.distance = distances[this.distance];\n    }\n  }\n\n  (0, _createClass3.default)(kMeans, [{\n    key: \"randomCentroids\",\n    value: function randomCentroids(points, k) {\n      var centroids = points.slice(0);\n      centroids.sort(function () {\n        return Math.round(Math.random()) - 0.5;\n      });\n      return centroids.slice(0, k);\n    }\n  }, {\n    key: \"classify\",\n    value: function classify(point) {\n      var min = Infinity,\n          index = 0;\n\n      for (var i = 0; i < this.centroids.length; i++) {\n        var dist = this.distance(point, this.centroids[i]);\n        if (dist < min) {\n          min = dist;\n          index = i;\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"cluster\",\n    value: function cluster(points, k, maxIter, snapshotFn) {\n      var _this = this;\n\n      k = k || Math.max(2, Math.ceil(Math.sqrt(points.length / 2)));\n      maxIter = maxIter || 100;\n      this.centroids = this.randomCentroids(points, k);\n\n      var assignment = new Int32Array(points.length);\n      var clusters = new Array(k);\n\n      var iterations = 0;\n      var movement = true;\n\n      while (movement && iterations < maxIter) {\n        for (var i = 0; i < points.length; i++) {\n          assignment[i] = this.classify(points[i]);\n        }\n\n        movement = false;\n\n        var _loop = function _loop(j) {\n          var assigned = points.filter(function (p, i) {\n            return assignment[i] == j;\n          });\n\n          if (!assigned.length) {\n            return \"continue\";\n          }\n\n          var centroid = _this.centroids[j];\n          var newCentroid = new mean(assigned);\n\n          for (var g = 0; g < centroid.length; g++) {\n            if (newCentroid[g] != centroid[g]) {\n              movement = true;\n            }\n          }\n\n          _this.centroids[j] = newCentroid;\n          clusters[j] = assigned;\n        };\n\n        for (var j = 0; j < k; j++) {\n          var _ret = _loop(j);\n\n          if (_ret === \"continue\") continue;\n        }\n        iterations++;\n        if (snapshotFn) {\n          snapshotFn(clusters, iterations);\n        }\n      }\n      if (iterations >= maxIter) {\n        console.log(\"Clustering algorithm early stopped.\");\n      }\n\n      return assignment;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return (0, _stringify2.default)(this.centroids);\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON() {\n      this.centroids = JSON.parse(json);\n      return this;\n    }\n  }]);\n  return kMeans;\n}();\n\nfunction kmeans(vectors, k) {\n  var maxIter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n  var distance = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"euclidean\";\n  var snapshotFn = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n  return new kMeans(distance).cluster(vectors, k, maxIter, snapshotFn);\n}\n\n/***/ }),\n\n/***/ 305:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _vue = __webpack_require__(10);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _elementUi = __webpack_require__(279);\n\nvar _elementUi2 = _interopRequireDefault(_elementUi);\n\n__webpack_require__(280);\n\nvar _App = __webpack_require__(281);\n\nvar _App2 = _interopRequireDefault(_App);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_vue2.default.use(_elementUi2.default);\n\nnew _vue2.default({\n  el: '#app',\n\n  render: function render(h) {\n    return h(_App2.default);\n  }\n});\n\n/***/ }),\n\n/***/ 306:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ModelView = __webpack_require__(708);\n\nvar _ModelView2 = _interopRequireDefault(_ModelView);\n\nvar _MainView = __webpack_require__(706);\n\nvar _MainView2 = _interopRequireDefault(_MainView);\n\nvar _TextView = __webpack_require__(712);\n\nvar _TextView2 = _interopRequireDefault(_TextView);\n\nvar _InfoView = __webpack_require__(705);\n\nvar _InfoView2 = _interopRequireDefault(_InfoView);\n\nvar _InfoBoard = __webpack_require__(278);\n\nvar _InfoBoard2 = _interopRequireDefault(_InfoBoard);\n\nvar _eventBus = __webpack_require__(11);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'app',\n  components: { ModelView: _ModelView2.default, MainView: _MainView2.default, TextView: _TextView2.default, InfoView: _InfoView2.default, InfoBoard: _InfoBoard2.default },\n  data: function data() {\n    return {\n      height: 800,\n      width: 1000,\n      shared: _eventBus.bus.state\n    };\n  },\n\n  computed: {\n    mainHeight: function mainHeight() {\n      return this.compare ? this.height * 0.6 : this.height * 0.9;\n    },\n    infoHeight: function infoHeight() {\n      return this.height * 0.2;\n    },\n    compare: function compare() {\n      return this.shared.compare;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.height = window.innerHeight;\n    this.width = window.innerWidth;\n    window.addEventListener(\"resize\", function () {\n      _this.height = window.innerHeight;\n      _this.width = window.innerWidth;\n    });\n  }\n};\n\n/***/ }),\n\n/***/ 307:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = __webpack_require__(33);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _classCallCheck2 = __webpack_require__(25);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(26);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _promise = __webpack_require__(34);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _d = __webpack_require__(21);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _dataService = __webpack_require__(32);\n\nvar _dataService2 = _interopRequireDefault(_dataService);\n\nvar _eventBus = __webpack_require__(11);\n\nvar _cloud = __webpack_require__(94);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cell2states = {\n  'GRU': ['state'],\n  'BasicLSTM': ['state_c', 'state_h'],\n  'BasicRNN': ['state']\n};\n\nexports.default = {\n  name: 'ArcView',\n  data: function data() {\n    return {\n      states: '',\n      fdGraph: null,\n      selectedState: '',\n      model: '',\n      wordNum: 200,\n      clusterNum: 5,\n      cluster_data: {},\n      state_data: null,\n      word_data: null,\n      cluster_mode: 'positive'\n    };\n  },\n\n  props: {\n    width: {\n      type: Number,\n      default: 800\n    },\n    height: {\n      type: Number,\n      default: 600\n    }\n  },\n  watch: {\n    width: function width(newWidth) {\n      this.fdGraph.update_scale();\n    },\n    height: function height(newHeight) {\n      this.fdGraph.update_scale();\n    },\n    selectedState: function selectedState(newState) {\n      var _this = this;\n\n      if (newState === 'state' || newState === 'state_c' || newState === 'state_h') {\n        if (this.word_data === null || this.state_data === null) {\n          var ps = this.loadStateWordData();\n          var p = this.loadClusterData();\n          ps.push(p);\n          _promise2.default.all(ps).then(function (values) {\n            _this.reset();\n          });\n        }\n      }\n    },\n    wordNum: function wordNum(newWordNum) {\n      console.log('wordNum has changed');\n    },\n\n    clusterNum: function clusterNum(newClusterNum) {\n      var _this2 = this;\n\n      if (newClusterNum > 1) {\n        this.loadClusterData().then(function (values) {\n          _this2.reset();\n        });\n      }\n    }\n  },\n  computed: {\n    svgId: function svgId() {\n      return this.paneId(this.model, this.selectedState);\n    }\n  },\n  methods: {\n    paneId: function paneId(model, state) {\n      return 'arc-' + model + '-' + state + '-svg';\n    },\n    loadStateWordData: function loadStateWordData() {\n      var _this3 = this;\n\n      var p1 = _dataService2.default.getProjectionData(this.model, this.selectedState, {}, function (response) {\n        _this3.state_data = response.data;\n        console.log('state data loaded');\n      });\n      var p2 = _dataService2.default.getStrengthData(this.model, this.selectedState, { top_k: this.wordNum }, function (response) {\n        _this3.word_data = response.data;\n        console.log('word data loaded');\n      });\n      return [p1, p2];\n    },\n    loadClusterData: function loadClusterData() {\n      var _this4 = this;\n\n      return _eventBus.bus.loadCoCluster(this.model, this.selectedState, this.clusterNum, { top_k: this.wordNum, mode: this.cluster_mode }).then(function () {\n        _this4.cluster_data = _eventBus.bus.getCoCluster(_this4.model, _this4.selectedState, _this4.clusterNum, { top_k: _this4.wordNum, mode: _this4.cluster_mode });\n        console.log('co_cluster_data ' + _this4.clusterNum + ' loaded');\n      });\n    },\n    reset: function reset() {\n      if (this.fdGraph) {\n        this.fdGraph.destroy();\n      }\n      var svg = document.getElementById(this.paneId(this.model, this.selectedState));\n      this.fdGraph = new ForceDirectedGraph(svg);\n      this.fdGraph.process_data(this.state_data, this.word_data, this.cluster_data, this.cluster_mode);\n      this.fdGraph.insert_element();\n      this.fdGraph.start_simulation();\n    }\n  },\n  mounted: function mounted() {\n    var _this5 = this;\n\n    _eventBus.bus.$on(_eventBus.SELECT_MODEL, function (modelName, compare) {\n      if (compare) return;\n      console.log('Selected model in ArcView: ' + modelName);\n      _this5.model = modelName;\n      _eventBus.bus.loadModelConfig(modelName).then(function () {\n        _this5.states = _eventBus.bus.availableStates(modelName);\n      });\n    });\n  }\n};\n\nvar ForceDirectedGraph = function () {\n  function ForceDirectedGraph(svg, strengthfn) {\n    (0, _classCallCheck3.default)(this, ForceDirectedGraph);\n\n    var self = this;\n    this.svg = d3.select('#' + svg.id);\n    this.width = svg.clientWidth;\n    this.height = svg.clientHeight;\n    this.arcNodes = null;\n    this.innerNodes = null;\n    this.links = null;\n    this.word_clouds = [];\n    this.simulation = null;\n    this.strengthfn = strengthfn || function (v) {\n      return v;\n    };\n    this.graph = null;\n    this.rScale = 0.1;\n    this.radius = 1.5;\n    this.defaultAlpha = 0.3;\n    this.scale = {\n      x: null,\n      y: null\n    };\n    this.color = d3.scaleOrdinal(d3.schemeCategory20);\n    this.strength_threshold = 0.5;\n    this.normal_opacity_line = 0.1;\n    this.high_opacity_line = 0.1;\n    this.low_opacity_line = 0.01;\n    this.normal_opacity_node = 0.5;\n    this.high_opacity_node = 1;\n    this.low_opacity_node = 0.01;\n    this.strength_range = [0.1, 5];\n    this.arc_radius = 0.9 * Math.min(self.width / 2, self.height / 2);\n    this.cluster_data = [];\n    this.g_links = null;\n  }\n\n  (0, _createClass3.default)(ForceDirectedGraph, [{\n    key: 'process_data',\n    value: function process_data(arc_data, inner_data, cluster_data, cluster_mode) {\n      var self = this;\n      var label2arc = [];\n      var label2inner = [];\n      var circle_radius = 0.9 * Math.min(self.width / 2, self.height / 2);\n      this.cluster_data = cluster_data;\n\n      label2arc = cluster_data.colClusters.map(function (cluster, i) {\n        return { data: cluster.map(function (col) {\n            return { index: col, label: i };\n          }) };\n      });\n      label2inner = cluster_data.rowClusters.map(function (cluster, i) {\n        return { data: cluster.map(function (row) {\n            return { index: row, label: i, word: cluster_data.words[row] };\n          }) };\n      });\n\n      var links = [];\n      console.log(cluster_data);\n      (0, _keys2.default)(label2inner).forEach(function (inner_k) {\n        label2inner[inner_k]['type'] = 'inner';\n        (0, _keys2.default)(label2arc).forEach(function (arc_k) {\n          label2arc[arc_k]['type'] = 'arc';\n\n          var cluster_strength = 0;\n          label2inner[inner_k]['data'].forEach(function (inner_item) {\n            label2arc[arc_k]['data'].forEach(function (arc_item) {\n              var strength_item = cluster_data.correlation[inner_item.index][arc_item.index];\n              switch (cluster_mode) {\n                case 'positive':\n                  cluster_strength += strength_item > 0 ? strength_item : 0;\n                  break;\n                case 'negative':\n                  cluster_strength += strength_item < 0 ? Math.abs(strength_item) : 0;\n                  break;\n                case 'abs':\n                  cluster_strength += Math.abs(strength_item);\n                  break;\n                case 'raw':\n                  cluster_strength += strength_item;\n                  break;\n              }\n            });\n          });\n          var link = {\n            source: label2arc[arc_k],\n            target: label2inner[inner_k],\n            strength: cluster_strength\n          };\n          links.push(link);\n        });\n      });\n\n      links = self.strength_normalize(links, self.strength_range);\n\n      console.log(\"finished preparing data\");\n      this.graph = {\n        links: links,\n        label2arc: label2arc,\n        label2inner: label2inner,\n        arc_data: arc_data,\n        inner_data: inner_data,\n        nodes: label2arc.concat(label2inner)\n      };\n    }\n  }, {\n    key: 'strength_normalize',\n    value: function strength_normalize(links, range) {\n      var strength_extent = d3.extent(links.map(function (l) {\n        return l.strength;\n      }));\n      console.log(strength_extent);\n\n      var scale = d3.scaleLinear().domain(strength_extent).range(range);\n      links.forEach(function (l) {\n        l.strength = scale(l.strength);\n      });\n      return links;\n    }\n  }, {\n    key: 'draw_states',\n    value: function draw_states() {\n      var self = this;\n      var width = this.width,\n          height = this.height;\n      var radius = 0.9 * Math.min(width / 2, height / 2);\n      this.svg.append('g').selectAll('circle').data(this.graph.states).enter().append('circle').attr('r', 3).attr('cx', function (d) {\n        return width / 2 + radius * Math.cos(d.angle);\n      }).attr('cy', function (d) {\n        return height / 2 + radius * Math.sin(d.angle);\n      }).style('fill', function (d) {\n        return self.color(d.label);\n      });\n    }\n  }, {\n    key: 'insert_element',\n    value: function insert_element() {\n      var _this6 = this;\n\n      var self = this;\n\n      var g_arc = self.svg.append('g').attr('transform', 'translate(' + self.width / 2 + ',' + self.height / 2 + ')');\n\n      var arc = d3.arc().innerRadius(self.arc_radius - 10).outerRadius(self.arc_radius);\n\n      var arc_data = d3.pie()(self.graph.label2arc.map(function (d) {\n        return d.data.length;\n      }));\n\n      self.graph.label2arc.forEach(function (d, i) {\n        g_arc.append('path').datum(arc_data[i]).style('fill', self.color(i)).attr('d', arc);\n        var arc_centroid = arc.centroid(arc_data[i]);\n        d.fx = arc_centroid[0] + self.width / 2;\n        d.fy = arc_centroid[1] + self.height / 2;\n      });\n\n      var words_list = [];\n      self.graph.label2inner.forEach(function (d) {\n        var words = d.data.map(function (w) {\n          return { text: w.word, size: (300 - w.index) / 15 };\n        });\n        var radius = Math.sqrt(words.length) * 10 + 1;\n        console.log(words);\n        d['el_wc'] = _this6.svg.append('g');\n        var myWordCloud = new _cloud.WordCloud(d['el_wc'], radius);\n        myWordCloud.update(words);\n        self.word_clouds.push(d['el_wc']);\n      });\n    }\n  }, {\n    key: 'start_simulation',\n    value: function start_simulation() {\n      var self = this;\n      var repelForce = d3.forceCollide(20).radius(function (d) {\n        return Math.sqrt(d.data.length) * 10 + 10;\n      });\n      var init = repelForce.initialize;\n      repelForce.initialize = function (nodes) {\n        init(nodes.filter(function (d) {\n          return d.type === 'inner';\n        }));\n      };\n      this.simulation = d3.forceSimulation().alpha(this.defaultAlpha).force('link', d3.forceLink().distance(function (d) {\n        return d.strength > 0 ? 50 / d.strength : 300;\n      }).strength(function (d) {\n        return 1;\n      })).force('repel', repelForce);\n      this.simulation.nodes(self.graph.nodes).on('tick', function () {\n        return self.ticked();\n      });\n\n      this.simulation.force('link').links(self.graph.links);\n    }\n  }, {\n    key: 'ticked',\n    value: function ticked() {\n      var self = this;\n\n\n      self.graph.label2inner.forEach(function (d) {\n        d['el_wc'].attr('transform', 'translate(' + d.x + ',' + d.y + ')');\n      });\n\n      var line = d3.line().curve(d3.curveBundle.beta(1)).x(function (d) {\n        return d.x;\n      }).y(function (d) {\n        return d.y;\n      });\n\n      var line_data = [];\n      var data_center = [];\n      self.graph.label2arc.forEach(function (d, i) {\n        self.graph.label2inner.forEach(function (w) {\n          if (data_center[i] === undefined) {\n            data_center[i] = { x: 0, y: 0 };\n          }\n          data_center[i].x = data_center[i].x + w.x / self.graph.label2inner.length;\n          data_center[i].y = data_center[i].y + w.y / self.graph.label2inner.length;\n        });\n      });\n\n      self.graph.label2arc.forEach(function (d, i) {\n        self.graph.label2inner.forEach(function (w) {\n          line_data.push([d, data_center[i], w]);\n        });\n      });\n\n      if (self.g_links) {\n        self.g_links.remove();\n      }\n      self.g_links = this.svg.append('g');\n      self.g_links.selectAll('path').data(line_data).enter().append('path').attr('class', 'links').attr('d', line).attr('stroke', self.color(0));\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      console.log('Destroying Graph');\n      this.simulation.nodes([]);\n      this.simulation.force(\"link\").links([]);\n\n      this.g_links.remove();\n\n      this.word_clouds.forEach(function (d) {\n        d.remove();\n      });\n    }\n  }]);\n  return ForceDirectedGraph;\n}();\n\n;\n\n/***/ }),\n\n/***/ 308:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _set = __webpack_require__(69);\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _toConsumableArray2 = __webpack_require__(70);\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _promise = __webpack_require__(34);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _keys = __webpack_require__(33);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _classCallCheck2 = __webpack_require__(25);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(26);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _d = __webpack_require__(21);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _eventBus = __webpack_require__(11);\n\nvar _cloud = __webpack_require__(94);\n\nvar _sentence = __webpack_require__(166);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar colorHex = ['#33a02c', '#1f78b4', '#b15928', '#fb9a99', '#e31a1c', '#6a3d9a', '#ff7f00', '#cab2d6', '#ffff99', '#a6cee3', '#b2df8a', '#fdbf6f'];\nvar colorScheme = function colorScheme(i) {\n  return colorHex[i];\n};\nvar positiveColor = '#ff5b09';\nvar negativeColor = '#09adff';\n\nvar LayoutParamsConstructor = function () {\n  function LayoutParamsConstructor() {\n    var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 800;\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 800;\n    (0, _classCallCheck3.default)(this, LayoutParamsConstructor);\n\n    this.unitWidthRatio = 1.0;\n    this.unitMarginRatio = 0.5;\n    this.clusterMarginRatio = 0.7;\n    this.wordCloudArcDegree = 110;\n    this.wordCloudHightlightRatio = 1.5;\n    this.wordCloudPaddingLength = 5;\n    this.wordCloudChord2ClusterDistance = 50;\n    this.wordCloudChordLength2ClientHeightRatio = 0.8;\n    this.wordCloudChord2stateClusterHeightRatio = 1.1;\n    this.wordCloudWidth2HeightRatio = 1 / 0.5;\n    this.littleTriangleWidth = 5;\n    this.littleTriangleHeight = 5;\n    this.strengthThresholdPercent = [0.2, 1];\n    this.wordSize2StrengthRatio = 3;\n\n    this.dxShrinkFactor = 0.04;\n    this.spacePerSentence = 2 / 20;\n    this.sentenceNodeWidth = 100;\n    this.sentenceInitTranslate = [50, 10];\n\n    this.middleLineY = 50;\n\n    this.brushTranslationX = -100;\n    this.sentenceWordThreshold = 0.5;\n    this.posColor = colorScheme;\n    this.middleLineOffset = 0;\n    this.width = width;\n    this.height = height;\n    this.sentenceBrushRectWidth = 10;\n    this.mode = 'width';\n  }\n\n  (0, _createClass3.default)(LayoutParamsConstructor, [{\n    key: 'updateWidth',\n    value: function updateWidth(width) {\n      if (typeof width === 'number') this.width = Math.min(Math.max(500, width), 1400);\n    }\n  }, {\n    key: 'updateHeight',\n    value: function updateHeight(height) {\n      if (typeof height === 'number') this.height = Math.min(Math.max(200, height), 1000);\n    }\n  }, {\n    key: 'computeUnitParams',\n    value: function computeUnitParams() {}\n  }, {\n    key: 'computeParams',\n    value: function computeParams(clusterNum, clusterInterval2HeightRatio, clusterSizes) {\n      var _this = this;\n\n      var callTime = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n      if (callTime > 10) return;\n      var maxClusterSize = clusterSizes.reduce(function (a, b) {\n        return Math.max(a, b);\n      }, 0);\n      var totalClusterSize = clusterSizes.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n\n      this._unitHeight = 3 + this.width / totalClusterSize / 3;\n      this.wordCloudChordLength = this.height * this.wordCloudChordLength2ClientHeightRatio;\n      this.clusterHeight = this.wordCloudChordLength / (clusterNum + clusterNum * clusterInterval2HeightRatio - clusterInterval2HeightRatio);\n      this.packNum = ~~((this.clusterHeight / this.unitHeight + this.unitMarginRatio - 2 * this.clusterMarginRatio) / (1 + this.unitMarginRatio));\n      this.clusterHeight = this.unitHeight * this.cluster2UnitRatio;\n      this.clusterInterval = this.clusterHeight * clusterInterval2HeightRatio;\n\n      if (this.middleLineY < 0) {\n        this.computeParams(clusterNum, clusterInterval2HeightRatio - 0.2, clusterSizes, callTime + 1);\n      }\n      var maxClusterWidth = Math.ceil(maxClusterSize / this.packNum) * (this.unitWidth + this.unitMargin);\n      if (maxClusterWidth < 0.8 * this.maxClusterWidth) {\n        clusterInterval2HeightRatio += 0.2;\n        this.computeParams(clusterNum, clusterInterval2HeightRatio, clusterSizes, callTime + 1);\n      }\n      if (maxClusterWidth > this.maxClusterWidth) {\n        clusterInterval2HeightRatio -= 0.2;\n        this.computeParams(clusterNum, clusterInterval2HeightRatio, clusterSizes, callTime + 1);\n      }\n      if (callTime > 0) return;\n      if (this.mode === 'height') this.middleLineY = (this.height - this.clusterHeight * clusterNum - this.clusterInterval * (clusterNum - 1)) / 2;else {\n        this.widthPackNum = ~~(this.width / 5.5 / (this.unitWidth + this.unitMargin));\n        this.clusterWidth = this.widthPackNum * (this.unitWidth + this.unitMargin) - this.unitMargin + 2 * this.clusterMargin;\n        var heightSum = 0;\n        var heights = clusterSizes.forEach(function (size, i) {\n\n          var pack = Math.ceil(size / _this.widthPackNum);\n          heightSum += pack * (_this.unitHeight + _this.unitMargin) - _this.unitMargin + 2 * _this.clusterMargin;\n        });\n\n        this.clusterInterval = Math.floor((this.height - heightSum) / (clusterNum + 2));\n\n        this.middleLineY = (this.height - heightSum - clusterNum * this.clusterInterval) / 2;\n      }\n    }\n  }, {\n    key: 'wordCloudWidth',\n    get: function get() {\n      return this.width * 0.18;\n    }\n  }, {\n    key: 'unitHeight',\n    get: function get() {\n      return this._unitHeight ? this._unitHeight : Math.max(3, Math.min(~~((this.width - 500) / 500) + 4, 7));\n    }\n  }, {\n    key: 'unitWidth',\n    get: function get() {\n      return this.unitHeight * this.unitWidthRatio;\n    }\n  }, {\n    key: 'unitMargin',\n    get: function get() {\n      return this.unitHeight * this.unitMarginRatio;\n    }\n  }, {\n    key: 'clusterMargin',\n    get: function get() {\n      return this.unitHeight * this.clusterMarginRatio;\n    }\n  }, {\n    key: 'maxClusterWidth',\n    get: function get() {\n      return Math.min(this.width / 3.5, 400);\n    }\n  }, {\n    key: 'middleLineX',\n    get: function get() {\n      return this.width * 0.25 + this.middleLineOffset;\n    }\n  }, {\n    key: 'cluster2UnitRatio',\n    get: function get() {\n      return this.packNum + (this.packNum - 1) * this.unitMarginRatio + 2 * this.clusterMarginRatio;\n    }\n  }]);\n  return LayoutParamsConstructor;\n}();\n\nvar pos2tag = {\n  \"VERB\": 0,\n  \"NOUN\": 1,\n  \"PRON\": 2,\n  \"ADJ\": 3,\n  \"ADV\": 4,\n  \"ADP\": 5,\n  \"CONJ\": 6,\n  \"DET\": 7,\n  \"NUM\": 8,\n  \"PRT\": 9,\n  \"X\": 10,\n  \".\": 11\n};\n\nvar labelParams = {\n  colorScheme: colorScheme,\n  radius: 4,\n  fontSize: 11,\n  interval: 8\n};\n\nexports.default = {\n  name: 'ClusterView',\n  data: function data() {\n    return {\n      params: new LayoutParamsConstructor(this.width, this.height),\n\n      clusterData: null,\n\n      painter: null,\n\n      shared: _eventBus.bus.state,\n\n      changingFlag: false,\n      posLabel: null,\n      rootGroup: null\n    };\n  },\n\n  props: {\n    compare: {\n      type: Boolean,\n      defautl: false\n    },\n    width: {\n      type: Number,\n      default: 800\n    },\n    height: {\n      type: Number,\n      default: 800\n    }\n  },\n  computed: {\n    svgId: function svgId() {\n      return this.compare ? 'cluster-svg2' : 'cluster-svg';\n    },\n    selectedState: function selectedState() {\n      return this.compare ? this.shared.selectedState2 : this.shared.selectedState;\n    },\n    selectedModel: function selectedModel() {\n      return this.compare ? this.shared.selectedModel2 : this.shared.selectedModel;\n    },\n    selectedLayer: function selectedLayer() {\n      return this.compare ? this.shared.selectedLayer2 : this.shared.selectedLayer;\n    },\n    layout: function layout() {\n      return this.compare ? this.shared.layout2 : this.shared.layout;\n    },\n    clusterNum: function clusterNum() {\n      return this.layout.clusterNum;\n    },\n    strokeControlStrength: function strokeControlStrength() {\n      return this.layout.strokeControlStrength;\n    },\n    linkFilterThreshold: function linkFilterThreshold() {\n      return this.layout.linkFilterThreshold;\n    },\n    stateClip: function stateClip() {\n      return this.layout.stateClip;\n    },\n    selectedWords: function selectedWords() {\n      return this.compare ? this.shared.selectedWords2 : this.shared.selectedWords;\n    },\n    selectedUnits: function selectedUnits() {\n      return this.compare ? this.shared.selectedUnits2 : this.shared.selectedUnits;\n    },\n    renderPos: function renderPos() {\n      return this.compare ? this.shared.renderPos2 : this.shared.renderPos;\n    },\n    mode: function mode() {\n      return this.layout.mode;\n    }\n  },\n  watch: {\n    selectedState: function selectedState(state) {\n      console.log(this.svgId + ' > state changed to ' + this.selectedState);\n      this.maybeReload();\n    },\n    selectedLayer: function selectedLayer(layer) {\n      console.log(this.svgId + ' > layer changed to ' + this.selectedLayer);\n      this.maybeReload();\n    },\n    strokeControlStrength: function strokeControlStrength(_strokeControlStrength) {\n      this.changeStroke(this.strokeControlStrength, this.linkFilterThreshold);\n    },\n    linkFilterThreshold: function linkFilterThreshold(_linkFilterThreshold) {\n      this.changeStroke(this.strokeControlStrength, this.linkFilterThreshold);\n    },\n    clusterNum: function clusterNum(_clusterNum) {\n      console.log(this.svgId + ' > layout changed. clusterNum: ' + this.layout.clusterNum);\n      this.maybeReload();\n    },\n    stateClip: function stateClip(newStateClip) {\n      console.log('state clip changed');\n      this.painter.changeStateClip(newStateClip);\n    },\n    mode: function mode(newMode) {\n      this.params.mode = newMode;\n      this.maybeReload();\n    },\n    selectedModel: function selectedModel(newModel, oldModel) {\n      console.log(this.svgId + ' > model changed to ' + this.selectedModel);\n      this.maybeReload();\n    },\n    selectedWords: function selectedWords(words) {\n      var _this2 = this;\n\n      if (words.length === 0) {\n        this.painter.render_state([]);\n        return;\n      }\n\n      var model = this.selectedModel,\n          state = this.selectedState,\n          layer = this.selectedLayer;\n      var p = _eventBus.bus.loadStatistics(model, state, layer).then(function () {\n        var statistics = _eventBus.bus.getStatistics(model, state, layer);\n        var wordsStatistics = statistics.statOfWord(_this2.selectedWords[_this2.selectedWords.length - 1].text).mean;\n\n        _this2.painter.render_state(wordsStatistics);\n      });\n    },\n    renderPos: function renderPos(_renderPos) {\n      var _this3 = this;\n\n      var data = {};\n      if (_renderPos) {\n        _eventBus.bus.loadPosStatistics(this.selectedModel, undefined, function (response) {\n          if (response.status === 200) {\n            var posStatistics = response.data;\n            posStatistics.forEach(function (word, i) {\n              var posRatio = (0, _keys2.default)(word.ratio).map(function (key, i) {\n                return { index: i, pos: key, value: word.ratio[key] };\n              });\n              posRatio.sort(function (a, b) {\n                return b.value - a.value;\n              });\n              data[word.word] = pos2tag[posRatio[0].pos];\n            });\n\n            _this3.posLabel.draw(pos2tag).transform('translate(' + [_this3.width - 40, 10] + ')');\n          }\n          _this3.painter.renderWord(data);\n        });\n      } else {\n        this.painter.renderWord(data);\n        this.posLabel.clean();\n      }\n    },\n    width: function width(newWidth, oldWidth) {\n      this.params.updateWidth(newWidth);\n      this.maybeReload();\n    },\n    height: function height(newHeight) {\n      this.params.updateHeight(newHeight);\n      this.maybeReload();\n    }\n  },\n  methods: {\n    checkLegality: function checkLegality() {\n      var state = this.selectedState;\n\n      return (state === 'state' || state === 'state_c' || state === 'state_h') && typeof this.selectedLayer === 'number' && this.layout && this.painter && typeof this.width === 'number' && typeof this.height === 'number';\n    },\n    maybeReload: function maybeReload() {\n      var _this4 = this;\n\n      if (!this.changingFlag) {\n        this.changingFlag = true;\n        if (this.checkLegality()) {\n          console.log(this.svgId + ' > reloading...');\n          this.reload(this.selectedModel, this.selectedState, this.selectedLayer, this.clusterNum).then(function () {\n            _this4.changingFlag = false;\n          });\n        } else {\n          this.changingFlag = false;\n        }\n      }\n    },\n    init: function init() {\n      this.params.updateWidth(this.width);\n      this.rootGroup = d3.select('#' + this.svgId).append('g');\n      this.painter = new Painter(this.rootGroup, this.params, this.compare);\n      this.posLabel = new PosLabel(this.rootGroup.append('g'), labelParams, this.compare);\n    },\n    reload: function reload(model, state, layer, clusterNum) {\n      var _this5 = this;\n\n      var params = {\n        top_k: 300,\n        mode: 'raw',\n        layer: layer\n      };\n      if (this.renderPos) {\n        this.posLabel.clean();\n        this.posLabel.draw(pos2tag).transform('translate(' + [this.width - 40, 10] + ')');\n      }\n      return _eventBus.bus.loadCoCluster(model, state, clusterNum, params).then(function () {\n        _this5.clusterData = _eventBus.bus.getCoCluster(model, state, clusterNum, params);\n        console.log(_this5.clusterData.colClusters.length);\n        _this5.rootGroup.attr('transform', _this5.compare ? 'scale(-1,1)translate(' + [-_this5.width, 0] + ')' : '');\n        _this5.painter.destroy();\n        _this5.painter.draw(_this5.clusterData);\n      });\n    },\n    changeStroke: function changeStroke(controlStrength, linkFilterThreshold) {\n      this.painter.refreshStroke(controlStrength, linkFilterThreshold);\n    }\n  },\n  mounted: function mounted() {\n    var _this6 = this;\n\n    this.init();\n\n    _eventBus.bus.$on(_eventBus.EVALUATE_SENTENCE, function (value, compare) {\n      if (compare !== _this6.compare) return;\n      var record = _eventBus.bus.evalSentence(value, _this6.selectedModel);\n      var p2 = record.evaluate();\n      _promise2.default.all([p2]).then(function (values) {\n        var sentenceRecord = record.getRecords(_this6.selectedState, -1);\n\n        _this6.painter.addSentence(value, record, sentenceRecord);\n      });\n    });\n\n    _eventBus.bus.$on(_eventBus.CLOSE_SENTENCE, function (sentence, compare) {\n      if (compare !== _this6.compare) return;\n      _this6.painter.deleteSentence(sentence);\n    });\n\n    _eventBus.bus.$on(_eventBus.SELECT_COLOR, function (newColor) {\n      console.log('color has changed to ' + newColor);\n      d3.select('#' + _this6.svgId).selectAll('.link.positive').style('stroke', newColor[1]);\n      d3.select('#' + _this6.svgId).selectAll('.link.negative').style('stroke', newColor[0]);\n    });\n  }\n};\n\nvar PosLabel = function () {\n  function PosLabel(selector, params) {\n    var compare = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : False;\n    (0, _classCallCheck3.default)(this, PosLabel);\n\n    this.g = selector;\n    this.params = params;\n    this.compare = compare;\n  }\n\n  (0, _createClass3.default)(PosLabel, [{\n    key: 'draw',\n    value: function draw(tags) {\n      var params = this.params;\n      var color = params.colorScheme;\n      var fontSize = params.fontSize;\n      var radius = params.radius;\n      var interval = params.interval;\n      var labels = [];\n      (0, _keys2.default)(tags).forEach(function (key) {\n        labels[tags[key]] = key;\n      });\n      var gs = this.g.selectAll('g').data(labels).enter().append('g');\n      gs.append('circle').attr('cx', 0).attr('cy', function (d, i) {\n        return i * (interval + 2 * radius);\n      }).attr('r', radius).style('fill', function (d, i) {\n        return color(i);\n      });\n      gs.append('text').attr('x', radius * 2).attr('y', function (d, i) {\n        return i * (interval + 2 * radius) + fontSize / 2;\n      }).attr('text-anchor', 'start').style('font-size', fontSize).text(function (d) {\n        return d;\n      });\n      return this;\n    }\n  }, {\n    key: 'transform',\n    value: function transform(transStr) {\n      if (this.compare) transStr = transStr + 'scale(-1, 1)';\n      this.g.attr('transform', transStr);\n      return this;\n    }\n  }, {\n    key: 'clean',\n    value: function clean() {\n      this.g.selectAll('g').remove();\n    }\n  }]);\n  return PosLabel;\n}();\n\nvar Painter = function () {\n  function Painter(selector, params) {\n    var compare = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    (0, _classCallCheck3.default)(this, Painter);\n\n    this.svg = selector;\n    this.params = params;\n\n    this.topGroupClass = 'topGroup';\n    this.topg = this.svg.append('g').attr('class', this.topGroupClass);\n    this.hg = this.topg.append('g');\n    this.wg = this.topg.append('g');\n    this.sentenceWordThreshold = params.sentenceWordThreshold;\n    this.strengthThresholdPercent = params.strengthThresholdPercent;\n\n    this.dx = 0, this.dy = 0;\n    this.graph = null;\n    this.clusterSelected = [];\n\n    this.state_elements = [];\n    this.loc = null;\n    this.wordClouds = [];\n\n    this.unitNormalColor = '#ff5b09';\n    this.unitRangeColor = ['#09adff', '#ff5b09'];\n    this.linkWidthRange = [1, 5];\n    this.linkColor = ['#09adff', '#ff5b09'];\n    this.compare = compare;\n    this.stateTranslateHis = [];\n    this.sentenceTranslateHis = [this.params.sentenceInitTranslate[0]];\n    this.sentences = [];\n    this.stateClip = 2;\n\n    this.strokeWidth = function (t) {\n      return Math.abs(t) * 8;\n    };\n    this.sentenceStrokeWidth = function (t) {\n      return Math.abs(t) * 24;\n    };\n    this.colorLegendAxis = null;\n  }\n\n  (0, _createClass3.default)(Painter, [{\n    key: 'transform',\n    value: function transform(trans) {\n      this.svg.attr('transform', trans);\n    }\n  }, {\n    key: 'refreshStroke',\n    value: function refreshStroke(controlStrength, linkFilterThreshold) {\n      var _this7 = this;\n\n      this.strokeWidth = function (t) {\n        return Math.abs(t) * controlStrength;\n      };\n      this.sentenceStrokeWidth = function (t) {\n        return Math.abs(t) * controlStrength / 3;\n      };\n      this.strengthThresholdPercent = linkFilterThreshold;\n      if (this.graph) {\n        this.draw_link(this.hg, this.graph);\n\n        this.graph.sentence_info.forEach(function (si) {\n          var strength_extent = d3.extent(_this7.flatten(si.links).map(function (l) {\n            return l.strength;\n          }));\n          var max_strength = Math.max(Math.abs(strength_extent[0]), Math.abs(strength_extent[1]));\n          var strength_bound = _this7.strengthThresholdPercent.map(function (t) {\n            return t * max_strength;\n          });\n          si.links.forEach(function (ls) {\n            ls.forEach(function (l) {\n              l['el'].attr('display', Math.abs(l.strength) < strength_bound[0] || Math.abs(l.strength) > strength_bound[1] ? 'none' : '').attr('stroke-width', _this7.sentenceStrokeWidth(l.strength));\n            });\n          });\n        });\n      }\n    }\n  }, {\n    key: 'changeStateClip',\n    value: function changeStateClip(clip) {\n      if (!this.graph) {\n        return;\n      }\n      this.stateClip = clip;\n      var scale = d3.scaleLinear().domain([-this.stateClip, 0, this.stateClip]).range([1, 0, 1]);\n      if (d3.select(this.graph.state_info.state_info[0]['el']).property('colored')) {\n        this.graph.state_info.state_info.forEach(function (s, i) {\n          var tmp_s = d3.select(s['el']);\n          tmp_s.transition().attr('fill', tmp_s.property('strength') > 0 ? positiveColor : negativeColor).attr('fill-opacity', scale(Math.abs(tmp_s.property('strength'))));\n        });\n        this.axisScale.domain([-this.stateClip, this.stateClip]);\n        this.colorLegendAxis = d3.axisBottom().tickValues([parseInt(-this.stateClip), 0, parseInt(this.stateClip)]).tickFormat(d3.format('.' + d3.precisionFixed(1) + 'f')).scale(this.axisScale);\n\n        this.hg.select('#color-legend').select('g').call(this.colorLegendAxis);\n      }\n    }\n  }, {\n    key: 'deleteSentence',\n    value: function deleteSentence(value) {\n      var _this8 = this;\n\n      var sentence_to_add = this.sentences.filter(function (s) {\n        return s !== value;\n      });\n      this.sentences = [];\n      this.translateX(-d3.sum(this.stateTranslateHis));\n      this.adjustdx(this.stateClusterWordCloudDX);\n      this.stateTranslateHis = [];\n      this.sentenceTranslateHis = [this.params.sentenceInitTranslate[0]];\n\n      var tmpSentenceInfo = {};\n      this.graph.sentence_info.forEach(function (s) {\n        tmpSentenceInfo[s.value] = s;\n        s['group'].remove();\n      });\n      this.graph.sentence_info = [];\n      sentence_to_add.forEach(function (s) {\n        _this8.addSentence(s, tmpSentenceInfo[s].record, tmpSentenceInfo[s].sentenceRecord);\n      });\n    }\n  }, {\n    key: 'deleteAllSentences',\n    value: function deleteAllSentences() {\n      this.sentences = [];\n      this.translateX(-d3.sum(this.stateTranslateHis));\n      this.adjustdx(this.stateClusterWordCloudDX);\n      this.stateTranslateHis = [];\n      this.sentenceTranslateHis = [this.params.sentenceInitTranslate[0]];\n\n      var tmpSentenceInfo = {};\n      this.graph.sentence_info.forEach(function (s) {\n        tmpSentenceInfo[s.value] = s;\n        s['group'].remove();\n      });\n      this.graph.sentence_info = [];\n    }\n  }, {\n    key: 'addSentence',\n    value: function addSentence(value, record, sentenceRecord) {\n      var _this9 = this;\n\n      var self = this;\n      var needTranslate = (this.params.spacePerSentence + this.params.dxShrinkFactor) * this.client_width;\n      var translationForEachSentence = needTranslate;\n      var translationForState = needTranslate * 0.5;\n      var sentenceInitTranslate = this.params.sentenceInitTranslate;\n      this.stateTranslateHis.push(translationForState);\n      if (this.sentences.length) {\n        this.sentenceTranslateHis.push(translationForEachSentence);\n      }\n\n      var sg = this.svg.append('g').attr('transform', 'translate(' + sentenceInitTranslate[0] + ', ' + sentenceInitTranslate[1] + ')');\n      this.sentences.push(value);\n      var spg = sg.append('g');\n      var sentenceTranslate = [50, 10];\n      this.translateX(d3.sum(this.stateTranslateHis));\n      this.adjustdx(this.stateClusterWordCloudDX);\n\n      this.graph.sentence_info.forEach(function (s, k) {\n        s.group.transition().attr('transform', 'translate(' + [d3.sum(_this9.sentenceTranslateHis), sentenceInitTranslate[1]] + ')');\n      });\n\n      var rectGroup = sg.append('g').attr('transform', 'translate(' + [-this.params.sentenceNodeWidth / 2, this.client_height / 4] + ')');\n      this.drawBrushRect(rectGroup, sentenceRecord.length, updateSentence);\n\n      var sent = (0, _sentence.sentence)(spg, this.compare).size([this.params.sentenceNodeWidth, this.params.sentenceNodeWidth * sentenceRecord.length]).sentence(sentenceRecord).coCluster(this.graph.coCluster).words(record.tokens).mouseoverCallback(highlightSentenceLinkByNodeIndex).barMouseoverCallback(barHighlightState).draw();\n\n      var links = [];\n      var strength = sent.strengthByCluster;\n      sent.strengthByCluster.forEach(function (strengths, i) {\n        links[i] = [];\n        var wordPos = sent.getWordPos(i);\n        _this9.graph.coCluster.colClusters.forEach(function (clst, j) {\n          var strength = strengths[j];\n          var s = _this9.graph.state_info.state_cluster_info[j];\n          links[i][j] = {\n            source: { x: wordPos[0] + sent.nodeWidth, y: wordPos[1] + sent.nodeHeight / 2 },\n            source_init: { x: wordPos[0] + sent.nodeWidth, y: wordPos[1] + sent.nodeHeight / 2 },\n\n            target: { x: s.top_left[0] + _this9.middle_line_x - sentenceInitTranslate[0], y: s.top_left[1] + _this9.middle_line_y + s.height / 2 - sentenceInitTranslate[1] },\n            strength: strength\n          };\n        });\n      });\n\n\n      var strength_extent = d3.extent(this.flatten(links).map(function (l) {\n        return l.strength;\n      }));\n      var max_strength = Math.max(Math.abs(strength_extent[0]), Math.abs(strength_extent[1]));\n      var strength_bound = this.strengthThresholdPercent.map(function (t) {\n        return t * max_strength;\n      });\n\n      var lsg = sg.append('g');\n      links.forEach(function (ls) {\n        ls.forEach(function (l) {\n          l['el'] = lsg.append('path').classed('active', false).classed('link', true).classed(l.strength > 0 ? 'positive' : 'negative', true).attr('d', self.createLink(l)).attr('stroke-width', self.sentenceStrokeWidth(l.strength)).attr('opacity', 0.2).attr('fill', 'none').attr('display', Math.abs(l.strength) < strength_bound[0] || Math.abs(l.strength) > strength_bound[1] ? 'none' : '').attr('hold', 'false');\n        });\n      });\n      self.graph.sentence_info.push({ sentence: sent, links: links, value: value, group: sg, record: record, sentenceRecord: sentenceRecord });\n      if (this.sentences.length > 1) {\n        self.graph.sentence_info.forEach(function (si) {\n          si.links.forEach(function (ls) {\n            ls.forEach(function (l) {\n              l['el'].attr('display', 'none');\n            });\n          });\n        });\n      }\n\n      function updateSentence(extent_) {\n        var _record$tokens;\n\n        var words = (_record$tokens = record.tokens).slice.apply(_record$tokens, (0, _toConsumableArray3.default)(extent_));\n\n        var scaleFactor = self.client_height / words.length / self.params.sentenceNodeWidth / 1.05;\n\n        scaleFactor = Math.min(scaleFactor, 1.5);\n        var newHeight = scaleFactor * self.client_height;\n        var translateY = (sent.getWordPos(extent_[0])[1] + sent.getWordPos(extent_[1])[1]) / 2;\n\n        sent.transform('scale(' + scaleFactor + ')translate(' + [0, -translateY + self.client_height / 2 / scaleFactor] + ')');\n\n        links.forEach(function (ls) {\n          ls.forEach(function (l) {\n            var actualY = (l.source_init.y - translateY) * scaleFactor + self.client_height / 2;\n            console.log('client height is ' + self.client_height);\n            console.log('actualY is ' + actualY);\n\n            l.source.x = l.source_init.x * scaleFactor;\n            l.source.y = actualY;\n            l['el'].transition().attr('d', actualY > 0 && actualY < self.client_height ? self.createLink(l) : '');\n          });\n        });\n      }\n\n      function highlightSentenceLinkByNodeIndex(data, t, highlight) {\n        var changeCheckStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        links[t].forEach(function (l) {\n          if (changeCheckStatus) {\n            l['el'].attr('hold', l['el'].attr('hold') === 'false' ? 'true' : 'false');\n          }\n          if (l['el'].attr('hold') !== 'true') {\n            l['el'].classed('active', highlight).attr('display', highlight || self.sentences.length < 2 && l['el'].attr('display') !== 'none' ? '' : 'none');\n          } else {\n            l['el'].classed('active', true).attr('display', '');\n          }\n        });\n        if (changeCheckStatus) {\n          data.selected = !data.selected;\n          _eventBus.bus.$emit(_eventBus.SELECT_SENTENCE_NODE, data, self.compare);\n        }\n        data.bg.classed('active', data.selected ? true : highlight);\n      }\n\n      function barHighlightState(state_index, highlight) {\n        console.log('state ' + state_index + ' is hover on or out');\n        self.update_ref(d3.select(self.graph.state_info.state_cluster_info[state_index]['el']).select('rect').node(), highlight ? 'plus' : 'minus');\n      }\n    }\n  }, {\n    key: 'drawBrushRect',\n    value: function drawBrushRect(g, dataLength, func) {\n      var self = this;\n\n      var maxHeight = this.params.height / 2;\n      var unitHeight = Math.min(maxHeight / dataLength, 50);\n      console.log('unitHeight is ' + unitHeight);\n      var rectSize = [self.params.sentenceBrushRectWidth, unitHeight];\n      console.log('rect size is ' + rectSize);\n      var minBrushLength = 3;\n      g.selectAll('.wordRect').data(d3.range(dataLength)).enter().append('rect').attr('x', 0).attr('y', function (d) {\n        return d * rectSize[1];\n      }).attr('width', rectSize[0]).attr('height', rectSize[1]).attr('fill', 'black').attr('stroke-width', 1).attr('stroke', 'blue').attr('opacity', 0.2);\n      var brush = d3.brushY().extent([[0, 0], [rectSize[0], rectSize[1] * dataLength]]).on('end', function () {\n        if (!d3.event.sourceEvent) return;\n        if (!d3.event.selection) return;\n        var extent = d3.event.selection;\n        var lower = Math.round(extent[0] / rectSize[1]);\n        var upper = Math.round(extent[1] / rectSize[1]);\n        extent[0] = lower * rectSize[1];\n        extent[1] = upper * rectSize[1];\n        d3.select(this).transition().call(d3.event.target.move, extent);\n        console.log(d3.event.selection);\n        func([lower, upper]);\n      });\n      g.append('g').call(brush).call(brush.move, [0, rectSize[1] * dataLength]);\n    }\n  }, {\n    key: 'calculate_state_info',\n    value: function calculate_state_info(coCluster) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'height';\n\n      var state_loc = [];\n      var state_cluster_loc = [];\n\n\n      var clusterHeight = this.params.clusterHeight;\n      var packNum = this.params.packNum;\n      this.params.computeUnitParams();\n      var unitHeight = this.params.unitHeight;\n      var unitWidth = this.params.unitWidth;\n      var unitMargin = this.params.unitMargin;\n      var clusterMargin = this.params.clusterMargin;\n      var clusterInterval = this.params.clusterInterval;\n\n      var stateClusters = coCluster.colClusters;\n\n      if (mode === 'height') {\n        stateClusters.forEach(function (clst, i) {\n          var width = Math.ceil(clst.length / packNum) * (unitWidth + unitMargin) - unitMargin + 2 * clusterMargin;\n          var height = clusterHeight;\n          var top_left = [-width / 2, i * (height + clusterInterval)];\n\n          state_cluster_loc[i] = { top_left: top_left, width: width, height: height };\n\n          clst.forEach(function (c, j) {\n            var s_width = unitWidth;\n            var s_height = unitHeight;\n            var s_top_left = [~~(j / packNum) * (unitMargin + unitWidth) + clusterMargin, j % packNum * (unitHeight + unitMargin) + clusterMargin];\n            state_loc[c] = { top_left: s_top_left, width: s_width, height: s_height };\n          });\n        });\n      } else if (mode === 'width') {\n        var width = this.params.clusterWidth;\n        var widthPackNum = this.params.widthPackNum;\n        var offset = 0;\n        stateClusters.forEach(function (clst, i) {\n          var height = Math.ceil(clst.length / widthPackNum) * (unitHeight + unitMargin) - unitMargin + 2 * clusterMargin;\n          var top_left = [-width / 2, offset];\n          offset += height + clusterInterval;\n\n          state_cluster_loc[i] = { top_left: top_left, width: width, height: height };\n\n          clst.forEach(function (c, j) {\n            var s_width = unitWidth;\n            var s_height = unitHeight;\n            var s_top_left = [j % widthPackNum * (unitMargin + unitWidth) + clusterMargin, ~~(j / widthPackNum) * (unitHeight + unitMargin) + clusterMargin];\n            state_loc[c] = { top_left: s_top_left, width: s_width, height: s_height };\n          });\n        });\n      }\n      return { state_cluster_info: state_cluster_loc, state_info: state_loc };\n    }\n  }, {\n    key: 'calculate_word_info',\n    value: function calculate_word_info(coCluster) {\n      var _this10 = this;\n\n      var selected_state_cluster_index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n      var self = this;\n      var wordCloudPaddingLength = this.params.wordCloudPaddingLength;\n      var wordSize2StrengthRatio = this.params.wordSize2StrengthRatio;\n\n      var baseWordCloudWidth = this.params.wordCloudWidth;\n      var wordClusters = coCluster.rowClusters;\n      var words = coCluster.words;\n      var nCluster = coCluster.labels.length;\n      var agg_info = coCluster.aggregation_info;\n\n      var chordLength = this.params.wordCloudChordLength;\n      var availableLength = chordLength - nCluster * wordCloudPaddingLength;\n\n      var wordCloudArcRadius = chordLength / 2 / Math.sin(this.params.wordCloudArcDegree / 2 * Math.PI / 180);\n      this.params.wordCloudArcRadius = wordCloudArcRadius;\n\n\n      var highlight_clouds = [];\n      if (selected_state_cluster_index >= 0) {\n        self.graph.link_info[selected_state_cluster_index].forEach(function (d, j) {\n          if (d3.select(d['el']).attr('display') !== 'none') {\n            highlight_clouds.push(j);\n          }\n        });\n      }\n\n      highlight_clouds = new _set2.default(highlight_clouds);\n      var word_info = [];\n      var wd_height = wordClusters.map(function (d, i) {\n        if (highlight_clouds.size === 0) {\n          return Math.sqrt(d.length);\n        } else if (!highlight_clouds.has(i)) {\n          return Math.sqrt(d.length);\n        } else {\n          return Math.sqrt(d.length) * _this10.params.wordCloudHightlightRatio;\n        }\n      });\n\n      var wd_height_sum = wd_height.reduce(function (acc, val) {\n        return acc + val;\n      }, 0);\n      var max_height = wd_height.reduce(function (a, b) {\n        return Math.max(a, b);\n      }, 0);\n\n      var offset = -chordLength / 2;\n      wordClusters.forEach(function (wdst, i) {\n        var actual_height = wd_height[i] / wd_height_sum * availableLength;\n        var actual_width = baseWordCloudWidth;\n        var top_left_y = offset;\n        var top_left_x = Math.sqrt(Math.pow(wordCloudArcRadius, 2) - Math.pow(top_left_y, 2));\n        offset += actual_height + wordCloudPaddingLength;\n\n        if (self.graph && self.graph.word_info) {\n          self.graph.word_info[i].top_left = [top_left_x, top_left_y];\n          self.graph.word_info[i].width = actual_width;\n          self.graph.word_info[i].height = actual_height;\n          word_info[i] = self.graph.word_info[i];\n        } else {\n          var words_data = wdst.map(function (d) {\n            return { text: words[d], size: agg_info.row_single_2_col_cluster[d][i] * wordSize2StrengthRatio };\n          });\n          word_info[i] = { top_left: [top_left_x, top_left_y], width: actual_width,\n            height: actual_height, words_data: words_data };\n        }\n      });\n\n      return word_info;\n    }\n  }, {\n    key: 'calculate_link_info',\n    value: function calculate_link_info(state_info, word_info, coCluster, dx, dy) {\n      var _this11 = this;\n\n      var self = this;\n      var links = [];\n      var row_cluster_2_col_cluster = coCluster.aggregation_info.row_cluster_2_col_cluster;\n      var colClusters = coCluster.colClusters;\n      var rowClusters = coCluster.rowClusters;\n      var labels = coCluster.labels;\n\n      state_info.state_cluster_info.forEach(function (s, i) {\n        var max_strength = 0;\n\n        word_info.forEach(function (w, j) {\n          if (links[i] === undefined) {\n            links[i] = [];\n          }\n\n          if (_this11.graph && _this11.graph.link_info) {\n            links[i][j] = { source: { x: s.top_left[0] + s.width,\n                y: s.top_left[1] + s.height / 2 },\n              target: { x: w.top_left[0] + dx, y: w.top_left[1] + w.height / 2 + dy },\n              strength: self.graph.link_info[i][j].strength,\n              el: self.graph.link_info[i][j].el\n            };\n          } else {\n            var tmp_strength = row_cluster_2_col_cluster[labels[j]][labels[i]];\n\n            links[i][j] = { source: { x: s.top_left[0] + s.width,\n                y: s.top_left[1] + s.height / 2 },\n              target: { x: w.top_left[0] + dx, y: w.top_left[1] + w.height / 2 + dy },\n              strength: tmp_strength\n            };\n          }\n        });\n      });\n\n      return links;\n    }\n  }, {\n    key: 'ArcLength2Angle',\n    value: function ArcLength2Angle(length, radius) {\n      return length / radius * 180 / Math.PI;\n    }\n  }, {\n    key: 'render_state',\n    value: function render_state(data) {\n      var _this12 = this;\n\n      if (data.length) {\n        if (!this.hg.select('#color-legend').node()) {\n          var tmp_state = this.graph.state_info.state_cluster_info[this.graph.state_info.state_cluster_info.length - 1];\n          var tmp_g = this.hg.append('g').attr('id', 'color-legend').attr('transform', 'translate(' + [0, tmp_state.top_left[1] + tmp_state.height + 0.6 * this.params.clusterInterval] + ')' + (this.compare ? 'scale(-1, 1)' : ''));\n          var width = tmp_state.width;\n\n          var height = 3.8 * 2;\n\n          tmp_g.append('rect').attr('transform', 'translate(' + [-width / 2, 0] + ')').transition().attr('x', 0).attr('y', 0).attr('width', width).attr('height', height).style('fill', 'url(#state-legend)');\n\n          this.axisScale = d3.scaleLinear().range([0, width]).domain([-this.stateClip, this.stateClip]);\n          this.colorLegendAxis = d3.axisBottom().tickValues([parseInt(-this.stateClip), 0, parseInt(this.stateClip)]).tickFormat(d3.format('.' + d3.precisionFixed(1) + 'f')).scale(this.axisScale);\n          tmp_g.append('g').classed('axis', true).attr('transform', 'translate(' + [-width / 2, 0] + ')').call(this.colorLegendAxis);\n        }\n\n        var scale = d3.scaleLinear().domain([-this.stateClip, 0, this.stateClip]).range([1, 0, 1]);\n\n        this.graph.state_info.state_info.forEach(function (s, i) {\n          d3.select(s['el']).property('colored', true).property('strength', data[i]).transition().duration(300).attr('fill', data[i] > 0 ? positiveColor : negativeColor).attr('fill-opacity', scale(Math.abs(data[i])));\n        });\n      } else {\n        this.hg.select('#color-legend').remove();\n        this.graph.state_info.state_info.forEach(function (s, i) {\n          d3.select(s['el']).property('colored', false).transition().duration(400).attr('fill', _this12.unitNormalColor).attr('fill-opacity', 0.3);\n        });\n      }\n    }\n  }, {\n    key: 'renderWord',\n    value: function renderWord() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.graph.word_info.forEach(function (wordCluster, i) {\n        wordCluster.words_data.forEach(function (word, j) {\n          word.type = data[word.text];\n        });\n      });\n\n      this.draw_word(this.wg, this.graph);\n    }\n  }, {\n    key: 'redraw_word_link',\n    value: function redraw_word_link() {\n      var selected_state_cluster_index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n\n      this.graph.word_info = this.calculate_word_info(this.graph.coCluster, selected_state_cluster_index);\n      this.graph.link_info = this.calculate_link_info(this.graph.state_info, this.graph.word_info, this.graph.coCluster, this.stateClusterWordCloudDX, this.dy);\n      this.draw_word(this.wg, this.graph);\n      this.draw_link(this.hg, this.graph);\n    }\n  }, {\n    key: 'update_ref',\n    value: function update_ref(el, mode) {\n      if (mode === \"plus\") {\n        d3.select(el).property('ref', parseInt(d3.select(el).property('ref')) + 1);\n        d3.select(el).classed('active', true);\n      } else if (mode === \"minus\") {\n        d3.select(el).property('ref', parseInt(d3.select(el).property('ref')) - 1);\n        if (parseInt(d3.select(el).property('ref')) === 0) {\n          d3.select(el).classed('active', false);\n        }\n      }\n    }\n  }, {\n    key: 'draw_state',\n    value: function draw_state(g, graph) {\n      var _this13 = this;\n\n      var self = this;\n      var coCluster = graph.coCluster;\n      var state_info = graph.state_info;\n      var clusterHeight = this.params.clusterHeight;\n      var packNum = this.params.packNum;\n      var unitHeight = this.params.unitHeight;\n      var unitWidth = this.params.unitWidth;\n      var unitMargin = this.params.unitMargin;\n      var clusterInterval = this.params.clusterInterval;\n      var littleTriangleWidth = this.params.littleTriangleWidth;\n      var littleTriangleHeight = this.params.littleTriangleHeight;\n\n      if (this.clusterSelected.length !== coCluster.colClusters.length) {\n        this.clusterSelected = coCluster.colClusters.map(function (d, i) {\n          return 0;\n        });\n      }\n      var clusterSelected = this.clusterSelected;\n      g.append('line').attr('id', 'middle_line').attr('x1', 0).attr('y1', -1000).attr('x2', 0).attr('y2', 1000).attr('display', 'none');\n\n      var hiddenClusters = g.selectAll('g rect').data(coCluster.colClusters, function (clst, i) {\n        return Array.isArray(clst) ? String(clst.length) + String(i) : _this13.id;\n      });\n\n      var selectCluster = function selectCluster(clst, i) {\n        if (!clusterSelected[i]) {\n          clusterSelected[i] = 1;\n          self.redraw_word_link(i);\n          self.update_ref(d3.select(this).select('rect').node(), \"plus\");\n          self.graph.link_info[i].forEach(function (l, j) {\n            self.update_ref(l['el'], \"plus\");\n            if (d3.select(l['el']).attr('display') !== 'none') {\n              self.update_ref(self.graph.word_info[j]['wordCloud'].bgHandle.node(), \"plus\");\n            }\n          });\n        } else {\n          clusterSelected[i] = 0;\n          self.redraw_word_link(-1);\n          self.update_ref(d3.select(this).select('rect').node(), \"minus\");\n          self.graph.link_info[i].forEach(function (l, j) {\n            self.update_ref(l['el'], \"minus\");\n            if (d3.select(l['el']).attr('display') !== 'none') {\n              self.update_ref(self.graph.word_info[j]['wordCloud'].bgHandle.node(), \"minus\");\n            }\n          });\n        }\n      };\n\n      var hGroups = hiddenClusters.enter().append('g');\n      hGroups.on('mouseenter', function (clst, i) {\n        self.update_ref(d3.select(this).select('rect').node(), \"plus\");\n        self.graph.link_info[i].forEach(function (l, j) {\n          self.update_ref(l['el'], \"plus\");\n          if (d3.select(l['el']).attr('display') !== 'none') {\n            self.update_ref(self.graph.word_info[j]['wordCloud'].bgHandle.node(), \"plus\");\n            var ref = self.graph.word_info[j]['wordCloud'].bgHandle.property('ref');\n            console.log('word ' + j + '\\'s ref is ' + ref);\n          }\n        });\n      }).on('mouseleave', function (clst, i) {\n        console.log('mouse leave');\n        self.update_ref(d3.select(this).select('rect').node(), \"minus\");\n        console.log(d3.select(this).select('rect').property('ref'));\n        self.graph.link_info[i].forEach(function (l, j) {\n          self.update_ref(l['el'], \"minus\");\n          if (d3.select(l['el']).attr('display') !== 'none') {\n            self.update_ref(self.graph.word_info[j]['wordCloud'].bgHandle.node(), \"minus\");\n            var ref = self.graph.word_info[j]['wordCloud'].bgHandle.property('ref');\n            console.log('word ' + j + '\\'s ref is ' + ref);\n          }\n        });\n      }).on('click', selectCluster);\n      hGroups.attr('transform', 'translate(0,0)').attr('id', function (clst, i) {\n        return String(clst.length) + String(i);\n      }).transition().duration(300).attr('transform', function (d, i) {\n        return 'translate(' + [state_info.state_cluster_info[i].top_left[0], state_info.state_cluster_info[i].top_left[1]] + ')';\n      });\n\n      hGroups.each(function (d, i) {\n        graph.state_info.state_cluster_info[i]['el'] = this;\n      });\n\n      var clusterRect = hGroups.append('rect').classed('hidden-cluster', true).classed('active', false).property('ref', 0).transition().duration(400).attr('width', function (clst, i) {\n        return state_info.state_cluster_info[i].width;\n      }).attr('height', function (clst, i) {\n        return state_info.state_cluster_info[i].height;\n      }).attr('x', 0).attr('y', 0);\n\n      var units = hGroups.append('g').selectAll('rect').data(function (d) {\n        return d;\n      });\n\n      var tmp_units = units.enter().append('rect').on('mouseover', function (d, i) {\n        if (state_info.state_info[d].selected) return;\n        d3.select(this).classed('unit-active', true);\n      }).on('mouseleave', function (d, i) {\n        if (state_info.state_info[d].selected) return;\n        d3.select(this).classed('unit-active', false);\n      }).on('click', function (d, i) {\n        if (!state_info.state_info[d].selected) {\n          state_info.state_info[d].selected = true;\n          d3.select(this).classed('unit-active', true);\n          _eventBus.bus.$emit(_eventBus.SELECT_UNIT, d, self.compare);\n        } else {\n          state_info.state_info[d].selected = false;\n          d3.select(this).classed('unit-active', false);\n          _eventBus.bus.$emit(_eventBus.DESELECT_UNIT, d, self.compare);\n        }\n      }).transition().duration(400).attr('width', function (i) {\n        return state_info.state_info[i].width;\n      }).attr('height', function (i) {\n        return state_info.state_info[i].height;\n      }).attr('x', function (i) {\n        return state_info.state_info[i].top_left[0];\n      }).attr('y', function (i) {\n        return state_info.state_info[i].top_left[1];\n      }).attr('fill', self.unitNormalColor).attr('fill-opacity', 0.3);\n\n      tmp_units.each(function (d) {\n        graph.state_info.state_info[d]['el'] = this;\n      });\n    }\n  }, {\n    key: 'sum',\n    value: function sum(arr) {\n      return arr.reduce(function (acc, val) {\n        return acc + val;\n      }, 0);\n    }\n  }, {\n    key: 'draw_word',\n    value: function draw_word(g, graph) {\n      var _this14 = this;\n\n      var self = this;\n      var word_info = graph.word_info;\n      word_info.forEach(function (wclst, i) {\n        if (wclst['wordCloud']) {\n          var ref = parseInt(wclst['wordCloud'].bgHandle.property('ref'));\n          var selected = wclst['wordCloud'].bgHandle.property('selected');\n          var active = wclst['wordCloud'].bgHandle.classed('active');\n          wclst['wordCloud'].draw([wclst.width / 2, wclst.height / 2]).transform('translate(' + [wclst.top_left[0] + wclst.width / 2, wclst.top_left[1] + wclst.height / 2] + ')');\n          wclst['wordCloud'].bgHandle.property('ref', ref).property('selected', selected).classed('wordcloud', true).classed('active', active);\n        } else {\n          var tmp_g = g.append('g').on('mouseenter', function () {\n            self.graph.link_info.forEach(function (ls, j) {\n              self.update_ref(ls[i]['el'], 'plus');\n              if (d3.select(ls[i]['el']).attr('display') !== 'none') {\n                self.update_ref(d3.select(self.graph.state_info.state_cluster_info[j]['el']).select('rect').node(), 'plus');\n              }\n            });\n            self.update_ref(wclst['wordCloud'].bgHandle.node(), 'plus');\n          }).on('mouseleave', function () {\n            self.graph.link_info.forEach(function (ls, j) {\n              self.update_ref(ls[i]['el'], 'minus');\n              if (d3.select(ls[i]['el']).attr('display') !== 'none') {\n                self.update_ref(d3.select(self.graph.state_info.state_cluster_info[j]['el']).select('rect').node(), 'minus');\n              }\n            });\n            self.update_ref(wclst['wordCloud'].bgHandle.node(), 'minus');\n          }).on('click', function () {\n            wclst['wordCloud'].bgHandle.property('selected', ~wclst['wordCloud'].bgHandle.property('selected'));\n            self.graph.link_info.forEach(function (ls, j) {\n              self.update_ref(ls[i]['el'], wclst['wordCloud'].bgHandle.property('selected') ? 'plus' : 'minus');\n              if (d3.select(ls[i]['el']).attr('display') !== 'none') {\n                self.update_ref(d3.select(self.graph.state_info.state_cluster_info[j]['el']).select('rect').node(), wclst['wordCloud'].bgHandle.property('selected') ? 'plus' : 'minus');\n              }\n            });\n            self.update_ref(wclst['wordCloud'].bgHandle.node(), wclst['wordCloud'].bgHandle.property('selected') ? 'plus' : 'minus');\n          });\n          var myWordCloud = new _cloud.WordCloud(tmp_g, wclst.width / 2, wclst.height / 2, 'rect', _this14.compare).transform('translate(' + [wclst.top_left[0] + wclst.width / 2, wclst.top_left[1] + wclst.height / 2] + ')').color(_this14.params.posColor);\n          myWordCloud.update(word_info[i].words_data);\n          myWordCloud.bgHandle.property('ref', 0).property('selected', false).classed('wordcloud', true);\n          wclst['wordCloud'] = myWordCloud;\n        }\n      });\n    }\n  }, {\n    key: 'erase_link',\n    value: function erase_link() {\n      this.graph.link_info.forEach(function (ls) {\n        ls.forEach(function (l) {\n          d3.select(l['el']).transition().duration(500).style('opacity', 0).remove();\n        });\n      });\n    }\n  }, {\n    key: 'erase_word',\n    value: function erase_word() {\n      this.graph.word_info.forEach(function (w) {\n        w['wordCloud'].destroy();\n      });\n    }\n  }, {\n    key: 'erase_state',\n    value: function erase_state() {\n      this.graph.state_info.state_cluster_info.forEach(function (s) {\n        d3.select(s['el']).transition().duration(500).style('fill-opacity', 1e-6).style('opacity', 1e-6).remove();\n      });\n    }\n  }, {\n    key: 'createLink',\n    value: function createLink(d) {\n      return \"M\" + d.source.x + \",\" + d.source.y + \"C\" + (d.source.x + d.target.x) / 2 + \",\" + d.source.y + \" \" + (d.source.x + d.target.x) / 2 + \",\" + d.target.y + \" \" + d.target.x + \",\" + d.target.y;\n    }\n  }, {\n    key: 'flatten',\n    value: function flatten(arr) {\n      var _this15 = this;\n\n      return arr.reduce(function (acc, val) {\n        return acc.concat(Array.isArray(val) ? _this15.flatten(val) : val);\n      }, []);\n    }\n  }, {\n    key: 'draw_link',\n    value: function draw_link(g, graph) {\n      var _this16 = this;\n\n      var link_info = graph.link_info;\n\n      var strength_extent = d3.extent(this.flatten(link_info).map(function (l) {\n        return l.strength;\n      }));\n      var max_strength = Math.max(Math.abs(strength_extent[0]), Math.abs(strength_extent[1]));\n      var strength_bound = this.strengthThresholdPercent.map(function (t) {\n        return t * max_strength;\n      });\n\n      link_info.forEach(function (ls, i) {\n        ls.forEach(function (l, j) {\n          if (l['el']) {\n            d3.select(l['el']).attr('display', Math.abs(l.strength) < strength_bound[0] || Math.abs(l.strength) > strength_bound[1] ? 'none' : '').transition().duration(300).attr('stroke-width', _this16.strokeWidth(l.strength)).attr('d', _this16.createLink(l));\n          } else {\n            var tmp_path = g.append('path').classed('link', true).classed('active', false).classed(l.strength > 0 ? 'positive' : 'negative', true).property('ref', 0).attr('d', _this16.createLink(l)).attr('stroke-width', _this16.strokeWidth(l.strength)).attr('opacity', 0.15).attr('display', Math.abs(l.strength) < strength_bound[0] || Math.abs(l.strength) > strength_bound[1] ? 'none' : '');\n\n            l['el'] = tmp_path.node();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'draw',\n    value: function draw(coCluster) {\n      var self = this;\n\n      var maxClusterSize = coCluster.colSizes.reduce(function (a, b) {\n        return Math.max(a, b);\n      });\n      var nCluster = coCluster.labels.length;\n      var clusterInterval2HeightRatio = 1.0;\n\n      this.params.computeParams(coCluster.labels.length, clusterInterval2HeightRatio, coCluster.colSizes);\n\n      this.dx = this.stateClusterWordCloudDX;\n      this.dy = this.params.wordCloudChordLength / 2.0 - this.middle_line_y / 2;\n\n      console.log('dx is ' + this.dx + ', dy is ' + this.dy);\n\n      var coClusterAggregation = coCluster.aggregation_info;\n      var state_info = this.calculate_state_info(coCluster, this.params.mode);\n\n      self.graph = {\n        state_info: state_info,\n        coCluster: coCluster,\n        sentence_info: []\n      };\n      this.draw_state(this.hg, self.graph);\n\n      this.redraw_word_link();\n\n      this.translateX(0);\n    }\n  }, {\n    key: 'translateX',\n    value: function translateX(x) {\n      this.params.middleLineOffset += x;\n      this.hg.attr('transform', 'translate(' + [this.middle_line_x, this.middle_line_y] + ')');\n      this.wg.attr('transform', 'translate(' + [this.middle_line_x + this.dx, this.middle_line_y + this.dy] + ')');\n    }\n  }, {\n    key: 'adjustdx',\n    value: function adjustdx(newdx) {\n      this.dx = newdx;\n      this.wg.attr('transform', 'translate(' + [this.middle_line_x + this.dx, this.middle_line_y + this.dy] + ')');\n      this.redraw_word_link();\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (!this.graph) {\n        return;\n      }\n      this.deleteAllSentences();\n      this.erase_state();\n      this.erase_link();\n      this.erase_word();\n      this.topg.transition().duration(300).attr('transform', 'scale(0.01, 0.01)').style('opacity', 1e-6).remove();\n      this.topg = this.svg.append('g');\n      this.hg = this.topg.append('g');\n      this.wg = this.topg.append('g');\n    }\n  }, {\n    key: 'dxOffset',\n    get: function get() {\n      var adaptive = (this.client_width - this.client_height) / 4;\n\n      return 0;\n    }\n  }, {\n    key: 'stateClusterWordCloudDX',\n    get: function get() {\n      return this.client_width * (-this.params.dxShrinkFactor * this.sentences.length) + this.dxOffset;\n    }\n  }, {\n    key: 'client_width',\n    get: function get() {\n      return this.params.width;\n    }\n  }, {\n    key: 'client_height',\n    get: function get() {\n      return this.params.height;\n    }\n  }, {\n    key: 'middle_line_x',\n    get: function get() {\n      return this.params.middleLineX;\n    }\n  }, {\n    key: 'middle_line_y',\n    get: function get() {\n      return this.params.middleLineY;\n    }\n  }, {\n    key: 'nSentence',\n    get: function get() {\n      return this.sentences.length;\n    }\n  }]);\n  return Painter;\n}();\n\n/***/ }),\n\n/***/ 309:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _from = __webpack_require__(49);\n\nvar _from2 = _interopRequireDefault(_from);\n\nvar _d = __webpack_require__(21);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _chart = __webpack_require__(165);\n\nvar _eventBus = __webpack_require__(11);\n\nvar _dataService = __webpack_require__(32);\n\nvar _dataService2 = _interopRequireDefault(_dataService);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar layoutParams = {\n  lineLength: 30,\n  wordWidth: 50,\n  interval: 20,\n  color: d3.scaleOrdinal(d3.schemeCategory10)\n};\n\nexports.default = {\n  name: 'InfoBoard',\n  data: function data() {\n    return {\n      chart: null,\n      labelBoard: null,\n      shared: _eventBus.bus.state,\n      statistics: null,\n      layoutParams: layoutParams,\n      wordsStatistics: null,\n      unitsStatistics: null,\n      top_k: 4\n    };\n  },\n\n  props: {\n    height: {\n      type: Number,\n      default: 600\n    },\n    id: {\n      type: String,\n      default: 'info-board'\n    },\n    type: {\n      type: String,\n      default: 'state'\n    },\n    compare: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    header: function header() {\n      var typeStr = this.type === 'state' ? 'Hidden State' : 'Word';\n      return 'Info: ' + (this.shared.compare ? '[' + this.selectedModel + '] ' + typeStr : typeStr);\n    },\n    svgId: function svgId() {\n      return this.id + '-svg';\n    },\n    selectedLayer: function selectedLayer() {\n      return this.compare ? this.shared.selectedLayer2 : this.shared.selectedLayer;\n    },\n    selectedModel: function selectedModel() {\n      return this.compare ? this.shared.selectedModel2 : this.shared.selectedModel;\n    },\n    selectedState: function selectedState() {\n      return this.compare ? this.shared.selectedState2 : this.shared.selectedState;\n    },\n    selectedUnits: function selectedUnits() {\n      return this.type === 'state' ? this.compare ? this.shared.selectedUnits2 : this.shared.selectedUnits : 0;\n    },\n    selectedWords: function selectedWords() {\n      return this.type === 'word' ? this.compare ? this.shared.selectedWords2 : this.shared.selectedWords : 0;\n    },\n    selectedNode: function selectedNode() {\n      return this.type === 'word' ? this.compare ? this.shared.selectedNode2 : this.shared.selectedNode : 0;\n    }\n  },\n  watch: {\n    width: function width() {\n      if (this.selectedLayer && this.selectedModel && this.selectedState) {\n        if (this.type === 'word' && this.wordsStatistics) this.repaintWord();else if (this.type === 'state' && this.unitsStatistics) this.repaintState();\n      }\n    },\n    selectedUnits: function selectedUnits() {\n      var _this = this;\n\n      if (this.selectedUnits) {\n        var model = this.selectedModel,\n            state = this.selectedState,\n            layer = this.selectedLayer;\n        var p = _eventBus.bus.loadStatistics(model, state, layer).then(function () {\n          _this.statistics = _eventBus.bus.getStatistics(model, state, layer);\n          _this.unitsStatistics = _this.selectedUnits.map(function (unit, i) {\n            var data = _this.statistics.statesData[unit];\n            var dataArray = data.mean.map(function (_, j) {\n              return {\n                mean: data.mean[j],\n                range1: [data.low1[j], data.high1[j]],\n                range2: [data.low2[j], data.high2[j]],\n                word: data.words[j]\n              };\n            });\n            dataArray.sort(function (a, b) {\n              return a.mean - b.mean;\n            });\n            dataArray.splice(_this.top_k, dataArray.length - 2 * _this.top_k);\n            return dataArray;\n          });\n          _this.repaintState();\n        });\n      }\n    },\n    selectedWords: function selectedWords() {\n      var _this2 = this;\n\n      if (this.selectedWords) {\n        var model = this.selectedModel,\n            state = this.selectedState,\n            layer = this.selectedLayer;\n        var p = _eventBus.bus.loadStatistics(model, state, layer).then(function () {\n          _this2.statistics = _eventBus.bus.getStatistics(model, state, layer);\n          _this2.wordsStatistics = _this2.selectedWords.map(function (word, i) {\n            var wordData = _this2.statistics.statOfWord(word.text);\n            wordData.color = _this2.selectedWords[i].color;\n            return wordData;\n          });\n\n          _this2.repaintWord();\n        });\n      }\n    },\n    selectedNode: function selectedNode() {\n      var _this3 = this;\n\n      if (this.selectedNode) {\n        var model = this.selectedModel,\n            state = this.selectedState,\n            layer = this.selectedLayer;\n        var p = _dataService2.default.getWordStatistics(model, state, layer, this.selectedNode.word, function (response) {\n          if (response.status === 200) {\n            var data = response.data;\n            data.word = data.words;\n            data.range1 = data.low1.map(function (low1, i) {\n              return [low1, data.high1[i]];\n            });\n            data.range2 = data.low2.map(function (low2, i) {\n              return [low2, data.high2[i]];\n            });\n            data.color = _this3.layoutParams.color(0);\n            var line = { mean: _this3.selectedNode.response, color: _this3.layoutParams.color(1), word: data.word + '(sentence)' };\n            _this3.wordsStatistics = [data, line];\n            console.log(_this3.selectedNode);\n            _this3.repaintWord();\n          }\n        });\n      }\n    },\n    compare: function compare() {\n      this.init();\n    },\n    type: function type() {\n      this.init();\n    }\n  },\n  methods: {\n    init: function init() {\n      if (this.chart) {\n        this.chart.clean();\n      }\n      if (this.labelBoard) {\n        this.labelBoard.selectAll('rect, text, path').remove();\n      }\n      this.chart = new _chart.Chart(d3.select('#' + this.svgId), this.width, this.height).background('lightgray', 0.0);\n      this.labelBoard = d3.select('#' + this.svgId + '2');\n    },\n    repaintWord: function repaintWord() {\n      var _this4 = this;\n\n      this.chart.clean().resize(this.width, this.height);\n      this.labelBoard.selectAll('rect, text, path').remove();\n      if (!this.wordsStatistics.length) {\n        console.log('Painting no words');\n        return;\n      }\n      var layout = this.layoutParams;\n      var color = layout.color;\n      var labelLength = layout.lineLength + layout.wordWidth + layout.interval;\n\n      this.chart.margin(20, 30, 20, 30).xAxis('dim').yAxis('response');\n      var sortIdx = this.wordsStatistics[0].sort_idx;\n      var interval = ~~(sortIdx.length / 200) + 1;\n      var ranges = range(0, sortIdx.length, interval);\n      sortIdx = ranges.map(function (i) {\n        return sortIdx[i];\n      });\n\n      this.chart.line([[0, 0], [this.wordsStatistics[0].mean.length, 0]]).attr('stroke', '#000');\n\n      this.wordsStatistics.forEach(function (wordData, i) {\n        _this4.chart.line(sortIdx.map(function (i) {\n          return wordData.mean[i];\n        }), function (d, i) {\n          return i * interval;\n        }, function (d) {\n          return d;\n        }).attr('stroke-width', 1).attr('stroke', wordData.color).attr('stroke-opacity', 0.6);\n        if (wordData.range1) {\n          _this4.chart.area(sortIdx.map(function (i) {\n            return wordData.range1[i];\n          }), function (d, i) {\n            return i * interval;\n          }, function (d) {\n            return d[0];\n          }, function (d) {\n            return d[1];\n          }).attr('fill', wordData.color).attr('fill-opacity', 0.15).attr('stroke', wordData.color).attr('stroke-opacity', 0.1);\n        }\n        if (wordData.range2) {\n          _this4.chart.area(sortIdx.map(function (i) {\n            return wordData.range2[i];\n          }), function (d, i) {\n            return i * interval;\n          }, function (d) {\n            return d[0];\n          }, function (d) {\n            return d[1];\n          }).attr('fill', wordData.color).attr('fill-opacity', 0.15).attr('stroke', wordData.color).attr('stroke-opacity', 0.05);\n        }\n\n        _this4.labelBoard.append('rect').attr('x', labelLength * i + 20).attr('y', 10).attr('width', layout.lineLength).attr('height', 1).attr('fill', wordData.color);\n        _this4.labelBoard.append('text').attr('x', labelLength * i + 30 + layout.lineLength).attr('y', 15).text(wordData.word).style('font-size', 12);\n        if (i === 0) {\n          _this4.labelBoard.append('path').attr('d', 'M' + (30 + layout.lineLength) + ' 20 ' + 'H ' + (wordData.word.length * 7 + 30 + layout.lineLength)).style('stroke', wordData.color);\n        }\n      });\n      this.chart.draw();\n    },\n    repaintState: function repaintState() {\n      var _this5 = this;\n\n      this.chart.clean().resize(this.width, this.height);\n      this.labelBoard.selectAll('path, text').remove();\n      if (!this.selectedUnits.length) {\n        console.log('Painting no states');\n        return;\n      }\n      var xLabelWidth = 20;\n      var subChartWidth = (this.width - xLabelWidth) / this.unitsStatistics.length;\n      var top_k = this.top_k;\n\n      this.unitsStatistics.forEach(function (unitData, i) {\n        var xLabel = i === _this5.unitsStatistics.length - 1 ? 'r' : ' ';\n        var marginRight = i === _this5.unitsStatistics.length - 1 ? xLabelWidth : 0;\n        var subWidth = i === _this5.unitsStatistics.length - 1 ? subChartWidth + xLabelWidth : subChartWidth;\n        var subchart = _this5.chart.subChart(subWidth, _this5.height).xAxis(xLabel).yAxis('words');\n        subchart.axis.y.tickFormat(function (j) {\n          if (-1 < j && j < top_k * 2) return unitData[j].word;\n        }).tickValues(range(0, top_k * 2, 1));\n        subchart.axis.x.ticks(6);\n        subchart.margin(20, marginRight, 20, 55).translate(subChartWidth * i, 0).rotate();\n        subchart.box(unitData, 6, function (d, j) {\n          return j;\n        }, function (d) {\n          return d.mean;\n        }, function (d) {\n          return d.range1;\n        }, function (d) {\n          return d.range2;\n        }).attr('fill', 'steelblue').attr('stroke', 'black').attr('stroke-width', 0).attr('fill-opacity', 0.5);\n\n        subchart.line([[top_k - 0.5, subchart.extents[1][0]], [top_k - 0.5, subchart.extents[1][1]]]).style('stroke', '#333').style('stroke-dasharray', '5 5').style('stroke-opacity', 0.6);\n        var labelPos = subChartWidth * i + subChartWidth / 2 - 6;\n        _this5.labelBoard.append('text').attr('x', labelPos).attr('y', 15).text('Dim: ' + _this5.selectedUnits[i]).style('font-size', 12);\n        if (i === 0) {\n          _this5.labelBoard.append('path').attr('d', 'M' + labelPos + ' 20 ' + 'H ' + (_this5.selectedUnits[0].toString().length * 6 + 30 + labelPos)).style('stroke', '#a36');\n        }\n      });\n      this.chart.draw();\n    }\n  },\n  mounted: function mounted() {\n    this.width = this.$el.clientWidth - 10;\n    this.init();\n  }\n};\n\n\nfunction getSortedStatesData(words) {}\n\nfunction range(start, end) {\n  var interval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var num = ~~((end - start - 1) / interval) + 1;\n  return (0, _from2.default)({ length: num }, function (v, i) {\n    return start + i * interval;\n  });\n}\n\n/***/ }),\n\n/***/ 310:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eventBus = __webpack_require__(11);\n\nvar _InfoBoard = __webpack_require__(278);\n\nvar _InfoBoard2 = _interopRequireDefault(_InfoBoard);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'InfoView',\n  components: { InfoBoard: _InfoBoard2.default },\n  data: function data() {\n    return {\n      shared: _eventBus.bus.state,\n      type1: 'state',\n      type2: 'word'\n    };\n  },\n\n  props: {\n    height: {\n      type: Number,\n      default: 300\n    }\n  },\n  computed: {\n    compare: function compare() {\n      return this.shared.compare;\n    }\n  },\n  methods: {},\n  mounted: function mounted() {\n    var _this = this;\n\n    _eventBus.bus.$on(_eventBus.SELECT_UNIT, function (unit, compare) {\n      if (!_this.compare) return;\n      if (compare) {\n        _this.type1 = 'state';\n      } else {\n        _this.type2 = 'state';\n      }\n    });\n    _eventBus.bus.$on(_eventBus.SELECT_WORD, function (word, compare) {\n      if (!_this.compare) return;\n      if (compare) {\n        _this.type1 = 'word';\n      } else {\n        _this.type2 = 'word';\n      }\n    });\n    _eventBus.bus.$on(_eventBus.SELECT_SENTECE_NODE, function (node, compare) {\n      if (!_this.compare) return;\n      if (compare) {\n        _this.type1 = 'word';\n      } else {\n        _this.type2 = 'word';\n      }\n    });\n  }\n};\n\n/***/ }),\n\n/***/ 311:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ProjectView = __webpack_require__(710);\n\nvar _ProjectView2 = _interopRequireDefault(_ProjectView);\n\nvar _TestView = __webpack_require__(711);\n\nvar _TestView2 = _interopRequireDefault(_TestView);\n\nvar _ArcView = __webpack_require__(703);\n\nvar _ArcView2 = _interopRequireDefault(_ArcView);\n\nvar _ClusterView = __webpack_require__(704);\n\nvar _ClusterView2 = _interopRequireDefault(_ClusterView);\n\nvar _eventBus = __webpack_require__(11);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: \"MainView\",\n  data: function data() {\n    return {\n      activeTab: 'project',\n      shared: _eventBus.bus.state,\n      width: 800\n    };\n  },\n\n  props: {\n    height: {\n      type: Number,\n      default: 700\n    }\n  },\n  methods: {\n    handleClick: function handleClick(tab, event) {\n      return;\n    }\n  },\n  computed: {\n    compare: function compare() {\n      return this.shared.compare;\n    }\n  },\n  components: {\n    ProjectView: _ProjectView2.default,\n    TestView: _TestView2.default,\n    ArcView: _ArcView2.default,\n    ClusterView: _ClusterView2.default\n  },\n  mounted: function mounted() {\n    this.width = this.$el.clientWidth;\n  }\n};\n\n/***/ }),\n\n/***/ 312:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _assign = __webpack_require__(95);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _eventBus = __webpack_require__(11);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'ModelConfig',\n  data: function data() {\n    return {\n      shared: _eventBus.bus.state,\n      states: [],\n      selectedState: null,\n      selectedModel: null,\n      selectedLayer: null,\n      posSwitch: false,\n      config: null,\n      layout: {\n        clusterNum: 2,\n        strokeControlStrength: 100,\n\n        linkFilterThreshold: [0, 1],\n\n        stateClip: 1,\n        mode: 'width'\n      },\n      sentences: [],\n      inputVisible: false,\n      inputValue: '',\n      mode: false,\n      color: ['#09adff', '#ff5b09']\n    };\n  },\n\n  props: {\n    toggle: {\n      type: Function,\n      default: function _default() {\n        return;\n      }\n    },\n    compare: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    availableModels: function availableModels() {\n      return this.shared.availableModels;\n    },\n    colorType: function colorType() {\n      return this.compare ? 'gray' : '';\n    },\n    layerNum: function layerNum() {\n      if (this.config) return this.config.LayerNum;\n      return 0;\n    },\n    maxWidth: function maxWidth() {\n      return 20;\n    }\n  },\n  watch: {\n    selectedModel: function selectedModel(_selectedModel) {\n      var _this = this;\n\n      if (!_selectedModel) return;\n      _eventBus.bus.loadModelConfig(_selectedModel).then(function () {\n        var states = _eventBus.bus.availableStates(_selectedModel);\n        if (states) {\n          _this.states = states;\n          _this.selectedState = _this.states[0];\n          var config = _eventBus.bus.state.modelConfigs[_selectedModel];\n          _this.config = {\n            Cell: config.model.cell_type,\n            LayerNum: config.model.cells.length,\n            LayerSize: config.model.cells[0].num_units\n          };\n          _this.posSwitch = false;\n          _this.selectedLayer = _this.config.LayerNum - 1;\n          _this.sentences = [];\n          _eventBus.bus.$emit(_eventBus.SELECT_MODEL, _this.selectedModel, _this.compare);\n          _eventBus.bus.$emit(_eventBus.CHANGE_LAYOUT, _this.layout, _this.compare);\n        }\n      }).catch(function (v) {\n        return console.log(v);\n      });\n    },\n    selectedState: function selectedState(newState) {\n      if (newState === 'state' || newState === 'state_c' || newState === 'state_h') {\n        _eventBus.bus.$emit(_eventBus.SELECT_STATE, this.selectedState, this.compare);\n      }\n    },\n    selectedLayer: function selectedLayer(newLayer) {\n      _eventBus.bus.$emit(_eventBus.SELECT_LAYER, newLayer, this.compare);\n    },\n    posSwitch: function posSwitch(pos) {\n      if (this.compare) this.shared.renderPos2 = pos;else this.shared.renderPos = pos;\n    }\n  },\n  methods: {\n    stateName: function stateName(state) {\n      switch (state) {\n        case 'state_c':\n          return 'cell state';\n        case 'state_h':\n          return 'hidden state';\n        case 'state':\n          return 'hidden state';\n        default:\n          return 'Unknown';\n      }\n    },\n    layoutChange: function layoutChange() {\n      console.log(\"Layout changed\");\n\n      this.layout.mode = this.mode ? 'width' : 'height';\n      var layout = (0, _assign2.default)({}, this.layout);\n      _eventBus.bus.$emit(_eventBus.CHANGE_LAYOUT, layout, this.compare);\n    },\n    closeSentence: function closeSentence(sentence) {\n      var idx = this.sentences.indexOf(sentence);\n      if (idx !== -1) {\n        _eventBus.bus.$emit(_eventBus.CLOSE_SENTENCE, sentence, this.compare);\n        this.sentences.splice(idx, 1);\n      }\n    },\n    showInput: function showInput() {\n      var _this2 = this;\n\n      this.inputVisible = true;\n      this.$nextTick(function (_) {\n        _this2.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n    handleInputConfirm: function handleInputConfirm() {\n      var inputValue = this.inputValue;\n      if (inputValue) {\n        _eventBus.bus.$emit(_eventBus.EVALUATE_SENTENCE, inputValue, this.compare);\n        this.sentences.push(inputValue);\n      }\n      this.inputVisible = false;\n      this.inputValue = '';\n    },\n    colorChange: function colorChange(color) {\n      _eventBus.bus.$emit(_eventBus.SELECT_COLOR, this.color);\n    }\n  },\n  mounted: function mounted() {}\n};\n\n/***/ }),\n\n/***/ 313:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = __webpack_require__(96);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _keys = __webpack_require__(33);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _eventBus = __webpack_require__(11);\n\nvar _ModelConfig = __webpack_require__(707);\n\nvar _ModelConfig2 = _interopRequireDefault(_ModelConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'ModelView',\n  components: { ModelConfig: _ModelConfig2.default },\n  data: function data() {\n    return {\n      compare: false,\n      shared: _eventBus.bus.state\n    };\n  },\n  mounted: function mounted() {\n    this.getAvailableModels();\n  },\n\n  computed: {},\n  methods: {\n    getAvailableModels: function getAvailableModels() {\n      var _this = this;\n\n      console.log(\"getting available models...\");\n      _eventBus.bus.loadAvailableModels();\n      if (this.shared.availableModels) return;\n      setTimeout(function () {\n        _this.getAvailableModels();\n      }, 2000);\n    },\n    modelColor: function modelColor(i) {\n      return i === 1 ? 'primary' : 'success';\n    },\n    toggleCompare: function toggleCompare() {\n      this.compare = !this.compare;\n      if (!this.compare) {\n        this.selectedModel2 = null;\n        this.selectedState2 = null;\n        this.states2 = [];\n        _eventBus.bus.$emit(_eventBus.SELECT_MODEL, null, true);\n        _eventBus.bus.$emit(_eventBus.SELECT_STATE, null, true);\n      }\n    },\n    stateName: function stateName(state) {\n      switch (state) {\n        case 'state_c':\n          return 'c_state';\n        case 'state_h':\n          return 'h_state';\n        case 'state':\n          return 'h_state';\n        default:\n          return 'Unknown';\n      }\n    }\n  },\n  watch: {}\n};\n\n\nfunction json2tree(json) {\n  var data = { label: '', children: [] };\n  if (isObject(json)) {\n    (0, _keys2.default)(json).map(function (key) {\n      var child = json2tree(json[key]);\n      child.label = key + child.label;\n      if (Array.isArray(json)) {\n        child.label = child.children[0].label;\n      }\n      data.children.push(child);\n    });\n  } else {\n    data.label = \": \" + json;\n    delete data.children;\n  }\n  return data;\n}\n\nfunction isObject(thing) {\n  return (typeof thing === 'undefined' ? 'undefined' : (0, _typeof3.default)(thing)) === \"object\" && thing !== null;\n}\n\n/***/ }),\n\n/***/ 314:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _sign = __webpack_require__(168);\n\nvar _sign2 = _interopRequireDefault(_sign);\n\nvar _set = __webpack_require__(69);\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _from = __webpack_require__(49);\n\nvar _from2 = _interopRequireDefault(_from);\n\nvar _classCallCheck2 = __webpack_require__(25);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(26);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _d = __webpack_require__(21);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _eventBus = __webpack_require__(11);\n\nvar _cluster = __webpack_require__(304);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultConfig = {\n  rScale: 0.3,\n  radius: 3.0,\n  opacity: 0.4,\n  opacityHigh: 1.0,\n  defaultAlpha: 0.35,\n  repel: -5,\n  strength_thred: 0.6,\n  color: d3.scaleOrdinal(d3.schemeCategory10),\n  color2: d3.scaleOrdinal(d3.schemeCategory20),\n  clusterNum: 0\n};\n\nexports.default = {\n  name: 'ProjectGraph',\n  defaultConfig: defaultConfig,\n  data: function data() {\n    return {\n      fdGraph: null\n    };\n  },\n\n  props: {\n    width: {\n      type: Number,\n      default: 800\n    },\n    height: {\n      type: Number,\n      default: 800\n    },\n    graphData: {\n      type: Object,\n      required: true\n    },\n    svgId: {\n      type: String,\n      required: true\n    },\n    config: {\n      type: Object,\n      default: null\n    },\n    ready: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    width: function width(newWidth) {\n      this.fdGraoh.updateScale();\n    },\n    height: function height(newWidth) {\n      this.fdGraph.updateScale();\n    },\n    ready: function ready(newReady) {\n      if (newReady) {\n        this.reset();\n      }\n    }\n  },\n  methods: {\n    reset: function reset() {\n      if (this.fdGraph) {\n        this.fdGraph.destroy();\n      }\n      var svg = document.getElementById(this.svgId);\n      this.fdGraph = new ForceDirectedGraph(svg, this.config);\n      normalize(this.graphData.states);\n      var extents = calExtent(this.graphData.states);\n      this.fdGraph.updateScale(extents);\n      this.fdGraph.buildGraph(this.graphData.strength, this.graphData.states);\n      this.fdGraph.insertElements();\n      this.fdGraph.initSimulation();\n      this.fdGraph.startSimulation();\n    },\n    refreshGraph: function refreshGraph(ready) {\n      if (ready) {\n        this.fdGraph.refresh();\n        this.fdGraph.clusterStates(this.graphData.signature);\n      }\n    }\n  },\n  mounted: function mounted() {\n    _eventBus.bus.$on('REFRESH_PROJECT_GRAPH', this.refreshGraph);\n  }\n};\n\n\nfunction normalize(points) {\n  var extents = calExtent(points);\n  var factor_x = 100 / (extents[0][1] - extents[0][0]);\n  var factor_y = 100 / (extents[1][1] - extents[1][0]);\n  var factor = Math.max(factor_x, factor_y);\n  for (var i = 0; i < points.length; i++) {\n    points[i].coords[0] *= factor;\n    points[i].coords[1] *= factor;\n  }\n}\n\nvar ForceDirectedGraph = function () {\n  function ForceDirectedGraph(svg, params, strengthfn) {\n    (0, _classCallCheck3.default)(this, ForceDirectedGraph);\n\n    var self = this;\n    this.svg = d3.select('#' + svg.id);\n    this.svgEl = svg;\n    this.graph = null;\n    this.simulation = null;\n    this.stateNodes = null;\n    this.wordNodes = null;\n    this.links = null;\n    this.scale = { x: null, y: null, invert_x: null, invert_y: null };\n    this.extents = null;\n    this.strengthfn = strengthfn || function (v) {\n      return Math.pow(v / 2, 3);\n    };\n    this.params = params;\n  }\n\n  (0, _createClass3.default)(ForceDirectedGraph, [{\n    key: 'buildGraph',\n    value: function buildGraph(words, states) {\n      var self = this;\n\n      states.forEach(function (e) {\n        e.id = \"\" + e.layer + \"-\" + e.state_id;\n        e.fx = e.coords[0];\n        e.fy = e.coords[1];\n        e.links = [];\n      });\n\n      words.forEach(function (e) {\n        e.id = e.word;\n        e.links = [];\n      });\n\n\n      var layers = (0, _from2.default)(new _set2.default(states.map(function (d) {\n        return d.layer;\n      }))).sort();\n\n      var links = [];\n      var id2states = {};\n      states.forEach(function (d) {\n        id2states[d.id] = d;\n      });\n      words.forEach(function (node) {\n        var i = 0;\n        node.strength.forEach(function (strengths) {\n          var j = 0;\n          strengths.forEach(function (f) {\n            var intensity = f;\n            if (Math.abs(intensity) > self.params.strength_thred) {\n              var link = {\n                source: \"\" + layers[i] + \"-\" + j,\n                target: node.id,\n                strength: self.strengthfn(Math.abs(intensity)),\n                type: (0, _sign2.default)(f) };\n              link._source = id2states[link.source];\n              link._target = node;\n\n              links.push(link);\n\n              id2states[link.source].links.push(link);\n              node.links.push(link);\n            }\n            j++;\n          });\n          i++;\n        });\n      });\n      console.log(\"done building graph\");\n      this.graph = {\n        nodes: words.concat(states),\n        links: links,\n        id2states: id2states,\n        wordNodes: words,\n        stateNodes: states\n      };\n    }\n  }, {\n    key: 'initSimulation',\n    value: function initSimulation() {\n      var repelForce = d3.forceManyBody().strength(-30).distanceMax(4);\n      var init = repelForce.initialize;\n      repelForce.initialize = function (nodes) {\n        init(nodes.filter(function (d) {\n          d.hasOwnProperty(\"word\");\n        }));\n      };\n\n      var collideForce = d3.forceCollide().strength(0.5).radius(1);\n      this.simulation = d3.forceSimulation().alpha(this.params.defaultAlpha).force(\"link\", d3.forceLink().id(function (d) {\n        return d.id;\n      }).distance(function (l) {\n        return l.type < 0 ? 50 : 5;\n      }).strength(function (d) {\n        return d.strength;\n      })).force(\"collide\", collideForce).force(\"charge\", repelForce);\n    }\n  }, {\n    key: 'insertElements',\n    value: function insertElements() {\n      var self = this;\n      var g_states = this.svg.append('g').attr('class', 'states');\n      this.stateNodes = g_states.selectAll('circle').data(this.graph.stateNodes).enter().append(\"circle\").attr(\"r\", function (d) {\n        if (d.links.length > 0) return d.links.length * self.params.rScale + self.params.radius;\n        return 0;\n      }).style(\"fill\", function (d, i) {\n        return self.params.color(d.label);\n      }).classed(\"active\", false).on(\"mouseover\", function (d) {\n        return mouseover(d, self);\n      }).on(\"mouseout\", function (d) {\n        return mouseout(d, self);\n      }).on(\"click\", function (d) {\n        return clickState(d, self);\n      });\n\n      this.stateNodes.append(\"title\").text(function (d) {\n        return d.id;\n      });\n\n      this.links = this.svg.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(this.graph.links).enter().append(\"line\").classed(\"active\", false);\n\n      this.wordNodes = this.svg.append(\"g\").attr(\"class\", \"words\").selectAll(\"text\").data(this.graph.wordNodes).enter().append(\"text\").classed(\"active\", false).call(d3.drag().on(\"start\", function (d) {\n        if (!d3.event.active) self.simulation.alphaTarget(self.params.defaultAlpha).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n\n        d.links.forEach(function (d) {\n          d.active = true;\n        });\n        refreshLinkStyle(self);\n      }).on(\"drag\", function (d) {\n        d.fx = self.scale.invert_x(d3.mouse(self.svgEl)[0]);\n        d.fy = self.scale.invert_y(d3.mouse(self.svgEl)[1]);\n      }).on(\"end\", function (d) {\n        if (!d3.event.active) self.simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n        d.links.forEach(function (d) {\n          d.active = false;\n        });\n        refreshLinkStyle(self);\n      })).text(function (d) {\n        return d.id;\n      });\n\n\n      refreshLinkStyle(self);\n      refreshWordStyle(self);\n      refreshStateStyle(self);\n    }\n  }, {\n    key: 'startSimulation',\n    value: function startSimulation() {\n      var self = this;\n      self.simulation.nodes(self.graph.nodes).on(\"tick\", function () {\n        return self.ticked(self.links, self.wordNodes, self.stateNodes);\n      });\n\n      self.simulation.force(\"link\").links(self.graph.links);\n    }\n  }, {\n    key: 'ticked',\n    value: function ticked(links, wordNodes, stateNodes) {\n      var _graph = this;\n      links.attr(\"x1\", function (d) {\n        return _graph.scale.x(d.source.x);\n      }).attr(\"y1\", function (d) {\n        return _graph.scale.y(d.source.y);\n      }).attr(\"x2\", function (d) {\n        return _graph.scale.x(d.target.x);\n      }).attr(\"y2\", function (d) {\n        return _graph.scale.y(d.target.y);\n      });\n\n      wordNodes.attr(\"x\", function (d) {\n        return _graph.scale.x(d.x);\n      }).attr(\"y\", function (d) {\n        return _graph.scale.y(d.y);\n      });\n\n      stateNodes.attr(\"cx\", function (d) {\n        return _graph.scale.x(d.x);\n      }).attr(\"cy\", function (d) {\n        return _graph.scale.y(d.y);\n      });\n    }\n  }, {\n    key: 'updateScale',\n    value: function updateScale(extents) {\n      if (extents) {\n        this.extents = extents;\n      }\n      var width = this.width,\n          height = this.height;\n      var xExtent = this.extents[0],\n          yExtent = this.extents[1];\n      var xCenter = (xExtent[0] + xExtent[1]) / 2,\n          yCenter = (yExtent[0] + yExtent[1]) / 2;\n      var scaleFactor = 0.9 * Math.min(width / (xExtent[1] - xExtent[0]), height / (yExtent[1] - yExtent[0]));\n      this.scale.x = function (_x) {\n        return (_x - xCenter) * scaleFactor + width / 2;\n      };\n      this.scale.y = function (_y) {\n        return (yCenter - _y) * scaleFactor + height / 2;\n      };\n      this.scale.invert_x = function (_x) {\n        return (_x - width / 2) / scaleFactor + xCenter;\n      };\n      this.scale.invert_y = function (_y) {\n        return yCenter - (_y - height / 2) / scaleFactor;\n      };\n    }\n  }, {\n    key: 'clusterStates',\n    value: function clusterStates(stateSignature) {\n      var _this = this;\n\n      var clusterNum = this.params.clusterNum;\n      if (clusterNum < 2) return;\n      var clusterAssignments = (0, _cluster.kmeans)(stateSignature, clusterNum, 1000);\n      this.graph.stateNodes.forEach(function (node, i) {\n        node.cluster = clusterAssignments[i];\n      });\n      this.stateNodes.style('fill', function (d, i) {\n        if (clusterNum < 11) return _this.params.color(d.cluster);\n        return _this.params.color2(d.cluster);\n      });\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      console.log('Destroying Graph ' + this.svgEl.id);\n      this.simulation.nodes([]);\n      this.simulation.force(\"link\").links([]);\n      this.links.remove();\n      this.stateNodes.remove();\n      this.wordNodes.remove();\n    }\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      refreshLinkStyle(this);\n      refreshStateStyle(this);\n      refreshWordStyle(this);\n    }\n  }, {\n    key: 'width',\n    get: function get() {\n      return this.svgEl.clientWidth;\n    }\n  }, {\n    key: 'height',\n    get: function get() {\n      return this.svgEl.clientHeight;\n    }\n  }]);\n  return ForceDirectedGraph;\n}();\n\n;\n\nfunction calExtent(points) {\n  var xExtent = d3.extent(points, function (d) {\n    return d.coords[0];\n  }),\n      yExtent = d3.extent(points, function (d) {\n    return d.coords[1];\n  });\n  return [xExtent, yExtent];\n}\n\nfunction mouseover(d, g) {\n  if (d.active) return;\n  d3.select(this).classed(\"active\", true);\n  d.links.forEach(function (l) {\n    l.active = true;\n    l._target.active = true;\n  });\n  refreshLinkStyle(g);\n  refreshWordStyle(g);\n}\n\nfunction mouseout(d, g) {\n  if (d.active) return;\n  d3.select(this).classed(\"active\", false);\n  d.links.forEach(function (l) {\n    l.active = false;\n    l._target.active = false;\n  });\n  refreshLinkStyle(g);\n  refreshWordStyle(g);\n}\n\nfunction clickState(d, g) {\n  var isActive = d.active;\n  if (isActive) {\n    d.active = false;\n    mouseout(d, g);\n  } else {\n    mouseover(d, g);\n    d.active = true;\n  }\n  refreshLinkStyle(g);\n  refreshWordStyle(g);\n  d3.select(this).classed(\"active\", d.active);\n}\n\nfunction refreshLinkStyle(g) {\n  g.links.classed(\"active\", function (d) {\n    return d.active;\n  }).style(\"opacity\", function (d) {\n    return d.strength * (d.active ? g.params.opacityHigh : g.params.opacity);\n  }).style(\"stroke\", function (d) {\n    if (d.active) return \"#6b7\";\n    if (d.type < 0) return \"#68b\";\n    return \"#c66\";\n  });\n}\n\nfunction refreshStateStyle(g) {\n  g.stateNodes.classed(\"active\", function (d) {\n    return d.active;\n  });\n}\n\nfunction refreshWordStyle(g) {\n  g.wordNodes.classed(\"active\", function (d) {\n    return d.active;\n  });\n}\n\n/***/ }),\n\n/***/ 315:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = __webpack_require__(34);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _assign = __webpack_require__(95);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _d = __webpack_require__(21);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _dataService = __webpack_require__(32);\n\nvar _dataService2 = _interopRequireDefault(_dataService);\n\nvar _eventBus = __webpack_require__(11);\n\nvar _ProjectGraph = __webpack_require__(709);\n\nvar _ProjectGraph2 = _interopRequireDefault(_ProjectGraph);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'ProjectView',\n  props: {\n    width: {\n      type: Number,\n      default: 800\n    },\n    height: {\n      type: Number,\n      default: 600\n    }\n  },\n  data: function data() {\n    var drawConfig = (0, _assign2.default)({}, _ProjectGraph2.default.defaultConfig);\n    return {\n      model: '',\n\n      states: '',\n      ready: false,\n      graphData: { states: null, strength: null },\n      config: drawConfig,\n      cache: {},\n      shared: _eventBus.bus.state\n    };\n  },\n\n  components: { ProjectGraph: _ProjectGraph2.default },\n  computed: {\n    selectedState: function selectedState() {\n      return this.shared.selectedState;\n    }\n  },\n  watch: {\n    selectedState: function selectedState(newState, oldState) {\n      _eventBus.bus.state.selectedState = newState;\n      if (newState === oldState) {\n        return;\n      }\n      if (newState === 'state' || newState === 'state_c' || newState === 'state_h') {\n        this.reset();\n      }\n    }\n  },\n\n  methods: {\n    paneId: function paneId(model, state) {\n      return model + '-' + state + '-svg';\n    },\n    reset: function reset() {\n      var _this = this;\n\n      this.ready = false;\n      delete this.graphData.signature;\n      this.config = (0, _assign2.default)({}, _ProjectGraph2.default.defaultConfig);\n      if (this.selectedState === 'state') {\n        this.config.strength_thred = 0.9;\n      }\n      if (this.selectedState === 'state_h') {\n        this.config.strength_thred = 0.5;\n      }\n      if (this.model === 'IMDB') {\n        this.config.strength_thred = 0.0;\n        this.config.strengthFn = function (v) {\n          return Math.pow(v * 30, 2);\n        };\n        this.config.farDistance = 120;\n      }\n      var cacheTag = this.paneId(this.model, this.selectedState);\n      if (Object.prototype.hasOwnProperty.call(this.cache, cacheTag)) {\n        (0, _assign2.default)(this.graphData, this.cache[cacheTag]);\n        setTimeout(function () {\n          _this.ready = true;\n        }, 100);\n        return;\n      }\n\n      var p1 = _dataService2.default.getProjectionData(this.model, this.selectedState, {}, function (response) {\n        _this.graphData.states = response.data;\n        console.log('states data loaded');\n      });\n      var p2 = _dataService2.default.getStrengthData(this.model, this.selectedState, { top_k: 200 }, function (response) {\n        var strengthData = response.data;\n        _this.graphData.strength = [strengthData[163]].concat(strengthData.slice(20, 40));\n        console.log('strength data loaded');\n      });\n      var pAll = _promise2.default.all([p1, p2]).then(function (values) {\n        _this.cache[cacheTag] = { states: _this.graphData.states, strength: _this.graphData.strength };\n        setTimeout(function () {\n          _this.ready = true;\n        }, 100);\n\n        _dataService2.default.getStateSignature(_this.model, _this.selectedState, {}, function (response) {\n          _this.graphData.signature = response.data;\n          _this.cache[cacheTag].signature = _this.graphData.signature;\n          console.log('signature data loaded');\n        });\n      }, function (errResponse) {\n        console.log(\"Failed to build force graph!\");\n      });\n    },\n    configWatcher: function configWatcher() {\n      var _this2 = this;\n\n      if (this.ready === false) return;\n      if (this.config.clusterNum > 1 && !Object.prototype.hasOwnProperty.call(this.graphData, 'signature')) {\n        _dataService2.default.getStateSignature(this.model, this.selectedState, {}, function (response) {\n          _this2.graphData.signature = response.data;\n          console.log('signature data loaded');\n          _eventBus.bus.$emit(\"REFRESH_PROJECT_GRAPH\", _this2.ready);\n        });\n        return;\n      }\n      _eventBus.bus.$emit(\"REFRESH_PROJECT_GRAPH\", this.ready);\n    }\n  },\n\n  mounted: function mounted() {\n    var _this3 = this;\n\n    _eventBus.bus.$on(_eventBus.SELECT_MODEL, function (modelName, compare) {\n      if (compare) return;\n      console.log('selected model: ' + modelName);\n      _this3.model = modelName;\n      _eventBus.bus.loadModelConfig(modelName).then(function (_) {\n        var states = _eventBus.bus.availableStates(modelName);\n        if (states) {\n          _this3.states = states;\n\n          setTimeout(function () {\n            if (_this3.states[0] === _this3.selectedState) {\n              _this3.reset();\n            }\n            _this3.selectedState = null;\n          }, 100);\n        } else {\n          console.log(\"Unknown cell type!\");\n        }\n      });\n    });\n  }\n};\n\n/***/ }),\n\n/***/ 316:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = __webpack_require__(70);\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _promise = __webpack_require__(34);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _d = __webpack_require__(21);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _dataService = __webpack_require__(32);\n\nvar _dataService2 = _interopRequireDefault(_dataService);\n\nvar _eventBus = __webpack_require__(11);\n\nvar _chart = __webpack_require__(165);\n\nvar _cloud = __webpack_require__(94);\n\nvar _sentence = __webpack_require__(166);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'TestView',\n  data: function data() {\n    return {\n      chart: null,\n      model: 'PTB-LSTM',\n      state: 'state_c'\n    };\n  },\n\n  props: {},\n  computed: {\n    svgId: function svgId() {\n      return 'svg-test';\n    }\n  },\n  methods: {\n    init: function init() {\n      var svg = d3.select('#' + this.svgId).attr('width', 500).attr('height', 500);\n      this.chart = new _chart.Chart(svg, 500, 500).background('lightgray', 0.0);\n    },\n    draw2: function draw2() {\n      var words = ['you', 'want', 'more', 'words', 'than', 'this', 'he', 'is', 'she', 'they', 'what', 'million', 'it', '$', '<unk>', 'good', 'i', 'by'].map(function (d, i) {\n        return { text: d, size: 5 + Math.random() * 25, type: 0 + Math.round(Math.random()) };\n      });\n\n      function showNewWords(vis, i) {\n        i = i || 0;\n\n        vis.update(words);\n        setTimeout(function () {\n          showNewWords(vis, i + 1);\n        }, 2000);\n      }\n\n      var myWordCloud = new _cloud.WordCloud(d3.select('#' + this.svgId), 120, 120).transform('translate(200,200)');\n\n      showNewWords(myWordCloud);\n    },\n    draw: function draw() {\n      var _this = this;\n\n      _dataService2.default.getWordStatistics(this.model, this.state, -1, 'he', function (response) {\n        var data = response.data;\n        var mean = data.sort_idx.map(function (d, i) {\n          return data.mean[d];\n        });\n        var range = data.sort_idx.map(function (d, i) {\n          return [data.low1[d], data.high1[d]];\n        });\n        var range2 = data.sort_idx.map(function (d, i) {\n          return [data.low2[d], data.high2[d]];\n        });\n\n        console.log(data);\n        var subchart = _this.chart.subChart(250, 200).margin(5, 5, 20, 30).xAxis().yAxis();\n        subchart.line(mean, function (d, i) {\n          return i;\n        }, function (d) {\n          return d;\n        });\n        subchart.area(range, function (d, i) {\n          return i;\n        }, function (d) {\n          return d[0];\n        }, function (d) {\n          return d[1];\n        }).attr('opacity', 0.4);\n        subchart.area(range2, function (d, i) {\n          return i;\n        }, function (d) {\n          return d[0];\n        }, function (d) {\n          return d[1];\n        }).attr('opacity', 0.2);\n      });\n      var processed = void 0;\n      var p1 = _dataService2.default.getStateStatistics(this.model, this.state, -1, 200, function (response) {\n        var data = response.data;\n\n        processed = data.mean[0].map(function (_, i) {\n          return {\n            freqs: data.freqs,\n            mean: data.mean.map(function (m) {\n              return m[i];\n            }),\n            low1: data.low1.map(function (m) {\n              return m[i];\n            }),\n            low2: data.low2.map(function (m) {\n              return m[i];\n            }),\n            high1: data.high1.map(function (m) {\n              return m[i];\n            }),\n            high2: data.high2.map(function (m) {\n              return m[i];\n            }),\n            rank: data.sort_idx.map(function (indice) {\n              return indice.findIndex(function (idx) {\n                return idx === i;\n              });\n            })\n          };\n        });\n      });\n      var vocab = void 0;\n      var p2 = _dataService2.default.getVocab(this.model, 200, function (response) {\n        vocab = response.data;\n      });\n      _promise2.default.all([p1, p2]).then(function () {\n        console.log(processed);\n        console.log(vocab);\n        var dim = 10;\n        var data = processed[dim];\n        data = data.freqs.map(function (f, i) {\n          return {\n            freqs: f,\n            mean: data.mean[i],\n            range1: [data.low1[i], data.high1[i]],\n            range2: [data.low2[i], data.high2[i]],\n            rank: data.rank[i],\n            word_id: i,\n            word: vocab[i]\n          };\n        });\n        var boxData = data.sort(function (a, b) {\n          return a.mean - b.mean;\n        });\n\n        var boxes = boxData.slice(0, 10).concat(boxData.slice(boxData.length - 10));\n        var subchart2 = _this.chart.subChart(250, 200).translate(250, 0).margin(5, 30, 40, 5).xAxis().yAxis('right');\n        subchart2.axis.x.tickFormat(function (d, i) {\n          return boxes[d].word;\n        }).ticks(20);\n\n        subchart2.box(boxes, 5, function (d, i) {\n          return i;\n        }, function (d) {\n          return d.mean;\n        }, function (d) {\n          return d.range1;\n        }, function (d) {\n          return d.range2;\n        }).attr('fill', 'steelblue').attr('stroke', 'gray').attr('fill-opacity', 0.5);\n        _this.chart.draw();\n\n        subchart2.axisHandles.x.selectAll('text').attr('y', 0).attr('x', -9).attr('dy', '.35em').attr('transform', 'rotate(-90)').style('text-anchor', 'end');\n      });\n    },\n    draw_arc: function draw_arc() {\n      var color = d3.scaleOrdinal(d3.schemeCategory10);\n      var width = 500,\n          height = 500;\n      var svg = d3.select('#' + this.svgId).attr('width', width).attr('height', height);\n\n      var data = [{ start: 0, end: 2 * Math.PI / 8 }, { start: 2 * Math.PI / 8, end: 2 * Math.PI / 2 }, { start: 2 * Math.PI / 2, end: 2 * Math.PI }];\n\n      var g = svg.append('g').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n      var arc = d3.arc().innerRadius(230).outerRadius(240);\n\n\n      data.forEach(function (d, i) {\n        g.append('path').datum({ startAngle: d.start, endAngle: d.end }).style('fill', color(i)).attr('d', arc);\n\n        console.log(arc.centroid({ startAngle: d.start, endAngle: d.end }));\n      });\n    },\n    draw4: function draw4() {\n      var color = d3.scaleOrdinal(d3.schemeCategory10);\n      var width = 500,\n          height = 500;\n      var rectHeight = 20;\n      var rectWidth = 50;\n      var rectInterval = 10;\n      var data = ['this', 'is', 'foy', 'test', '<eos>'];\n\n      var x = d3.scaleTime().domain([new Date(2013, 7, 1), new Date(2013, 7, 15) - 1]).rangeRound([0, width]);\n      var g = d3.select('#' + this.svgId).attr('width', width).attr('height', height).append('g').attr(\"transform\", \"translate(100,\" + height / 3 + \")\");\n\n      var texts = g.selectAll('text').data(data).enter().append('text').text(function (d) {\n        return d;\n      }).style('text-anchor', 'middle').attr('transform', function (d, i) {\n        return 'translate(' + [(rectWidth + rectInterval) * i + rectWidth / 2, rectHeight / 1.3] + ')';\n      });\n\n      var rect_g = g.append('g');\n      data.forEach(function (d, i) {\n        if (i > 0) {\n          rect_g.append('rect').attr('x', i * (rectWidth + rectInterval) - rectInterval).attr('y', '0').attr('width', rectInterval).attr('height', rectHeight).attr('fill', 'lightgray').attr('stroke-width', 2).attr('stroke', 'blue').attr('opacity', 0.2);\n        }\n        rect_g.append('rect').attr('x', i * (rectWidth + rectInterval)).attr('y', '0').attr('width', rectWidth).attr('height', rectHeight).attr('fill', 'lightgray').attr('stroke-width', 2).attr('stroke', 'blue').attr('opacity', 0.2);\n      });\n\n      g.append('g').call(d3.brushX().extent([[0, 0], [(rectWidth + rectInterval) * data.length - rectInterval, rectHeight]]).on('end', brushended));\n\n      function brushended() {\n        if (!d3.event.sourceEvent) return;\n        if (!d3.event.selection) return;\n        var extent = d3.event.selection;\n        extent[0] = Math.round(extent[0] / (rectWidth + rectInterval)) * (rectWidth + rectInterval);\n        extent[1] = Math.max(Math.round(extent[1] / (rectWidth + rectInterval)) * (rectWidth + rectInterval) - rectInterval, extent[0]);\n        console.log(d3.event.selection);\n        d3.select(this).transition().call(d3.event.target.move, extent);\n      }\n    },\n    drawRect: function drawRect(g, dataLength, func) {\n      var self = this;\n      var rectSize = [20, 50];\n      var minBrushLength = 3;\n      g.selectAll('.wordRect').data(d3.range(dataLength)).enter().append('rect').attr('x', 0).attr('y', function (d) {\n        return d * rectSize[1];\n      }).attr('width', rectSize[0]).attr('height', rectSize[1]).attr('fill', 'lightgray').attr('stroke-width', 2).attr('stroke', 'blue').attr('opacity', 0.2);\n      var brush = d3.brushY().extent([[0, 0], [rectSize[0], rectSize[1] * dataLength]]).on('end', function () {\n        if (!d3.event.sourceEvent) return;\n        if (!d3.event.selection) return;\n        var extent = d3.event.selection;\n        extent[0] = Math.round(extent[0] / rectSize[1]) * rectSize[1];\n        extent[1] = Math.round(extent[1] / rectSize[1]) * rectSize[1];\n        d3.select(this).transition().call(d3.event.target.move, extent);\n        console.log(d3.event.selection);\n        func([Math.round(extent[0] / rectSize[1]), Math.round(extent[1] / rectSize[1])]);\n      });\n      g.append('g').call(brush).call(brush.move, [0, rectSize[1] * dataLength]);\n    },\n    draw5: function draw5() {\n      var _this2 = this;\n\n      var p1 = _eventBus.bus.loadCoCluster('PTB-LSTM', 'state_c', 10, { top_k: 300, mode: 'raw' });\n      var record = _eventBus.bus.evalSentence('What can I do for you?', 'PTB-LSTM');\n      var p2 = record.evaluate();\n      var clientHeight = 500;\n      var sent = null;\n      var svg = d3.select('#' + this.svgId);\n      var sent_g = svg.append('g');\n\n      _promise2.default.all([p1, p2]).then(function (values) {\n        var coCluster = _eventBus.bus.getCoCluster('PTB-LSTM', 'state_c', 10, { top_k: 300, mode: 'raw' });\n        var sentenceRecord = record.getRecords('state_c', -1);\n        console.log(record);\n        var rect_g = svg.append('g').attr('transform', 'translate(0, 50)');\n        sent = (0, _sentence.sentence)(sent_g).transform('translate(100, 0)').size([50, clientHeight]).sentence(sentenceRecord).coCluster(coCluster).words(record.tokens).draw();\n\n        console.log(sent.strengthByCluster);\n        _this2.drawRect(rect_g, record.tokens.length, updateSentence);\n      });\n\n      function updateSentence(extent_) {\n        var _record$tokens;\n\n        console.log('extent_ is ' + extent_);\n        var words = (_record$tokens = record.tokens).slice.apply(_record$tokens, (0, _toConsumableArray3.default)(extent_));\n        console.log('words is ' + words);\n        var scaleFactor = record.tokens.length / words.length;\n        scaleFactor = Math.min(scaleFactor, 2);\n        var newHeight = scaleFactor * clientHeight;\n        var translateY = sent.getWordPos(extent_[0])[1];\n        sent.transform('scale(' + scaleFactor + ')translate(' + [100 / scaleFactor, -translateY] + ')');\n      }\n    },\n    draw3: function draw3() {\n      var _this3 = this;\n\n      var p1 = _eventBus.bus.loadCoCluster('PTB-LSTM', 'state_c', 10, { top_k: 300, mode: 'raw' });\n      var record = _eventBus.bus.evalSentence('What can I do for you?', 'PTB-LSTM');\n      var p2 = record.evaluate();\n      _promise2.default.all([p1, p2]).then(function (values) {\n        var coCluster = _eventBus.bus.getCoCluster('PTB-LSTM', 'state_c', 10, { top_k: 300, mode: 'raw' });\n        var sentenceRecord = record.getRecords('state_c', -1);\n        console.log(record);\n        var a = (0, _sentence.sentence)(d3.select('#' + _this3.svgId).append('g')).transform('translate(100, 10)').size([50, 450]).sentence(sentenceRecord).coCluster(coCluster).words(record.tokens).draw();\n        console.log(a.strengthByCluster);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n\n    this.draw5();\n  }\n};\n\n/***/ }),\n\n/***/ 317:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _dataService = __webpack_require__(32);\n\nvar _dataService2 = _interopRequireDefault(_dataService);\n\nvar _eventBus = __webpack_require__(11);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar activeColorScheme = [\"88, 126, 182\", \"201, 90, 95\"];\nexports.default = {\n  name: 'TextView',\n  data: function data() {\n    return {\n      inputs: null,\n      shared: _eventBus.bus.state,\n      isInput: true,\n      states: [],\n      selectedState: null,\n      selectedLayer: -1,\n      selectedDim: null,\n      cache: {},\n      oldInputs: null,\n      tokens: null,\n      records: null,\n      layerNum: 0\n    };\n  },\n\n  computed: {\n    displayControl: function displayControl() {\n      return this.states.length !== 0;\n    },\n\n    layerSize: function layerSize() {\n      var selectedModel = this.shared.selectedModel;\n      return _eventBus.bus.layerSize(selectedModel, this.selectedLayer);\n    },\n    sentences: function sentences() {\n      var _this = this;\n\n      if (this.records) {\n        return this.tokens.map(function (sentence, i) {\n          return sentence.map(function (token, j) {\n            return { text: token, value: _this.records[i][j][_this.selectedState][_this.selectedLayer][_this.selectedDim] };\n          });\n        });\n      }\n      return [];\n    }\n  },\n  watch: {},\n  methods: {\n    color: function color(value) {\n      if (value < 0) return 'rgba(' + activeColorScheme[0] + ',' + -value + ')';\n      return 'rgba(' + activeColorScheme[1] + ',' + value + ')';\n    },\n    onSubmit: function onSubmit() {\n      var _this2 = this;\n\n      if (this.selectedState === null) return false;\n      var selectedModel = this.shared.selectedModel;\n      if (this.inputs === this.oldInputs) return true;\n\n      _dataService2.default.getTextEvaluation(selectedModel, this.inputs, function (response) {\n        var data = response.data;\n        _this2.tokens = data.tokens;\n        _this2.records = data.records;\n        _this2.oldInputs = _this2.inputs;\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    _eventBus.bus.$on(_eventBus.SELECT_MODEL, function (modelName) {\n      var states = _eventBus.bus.availableStates(modelName);\n      if (states) {\n        _this3.states = states;\n        _this3.layerNum = _eventBus.bus.layerNum(modelName);\n        _this3.selectedLayer = _this3.layerNum - 1;\n        _this3.selectedState = _this3.states[0];\n      } else {\n        _this3.states = [];\n      }\n    });\n  }\n};\n\nfunction colorGrad(color1, color2, ratio) {\n  return color1.map(function (c, i) {\n    return c * ratio + color2[i] * (1 - ratio);\n  });\n}\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = __webpack_require__(33);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _promise = __webpack_require__(34);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _vue = __webpack_require__(10);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _vueResource = __webpack_require__(725);\n\nvar _vueResource2 = _interopRequireDefault(_vueResource);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_vue2.default.use(_vueResource2.default);\n\nvar devMainUrl = 'http://localhost:5000';\n\nvar $http = _vue2.default.http;\n\nvar cache = {};\n\nvar getUrlData = function getUrlData(url, callback) {\n  if (url in cache) {\n    return _promise2.default.resolve(callback(cache[url]));\n  } else {\n    return $http.get(url).then(function (response) {\n      if (response.status === 200) cache[url] = { status: 200, data: response.data };\n      callback(cache[url]);\n    }, function (errResponse) {\n      console.log(errResponse);\n      throw errResponse;\n    });\n  }\n};\n\nvar getProjectionData = function getProjectionData(model, state) {\n  var parameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var callback = arguments[3];\n\n  var url = devMainUrl + '/projection?model=' + model + '&state=' + state;\n  (0, _keys2.default)(parameters).forEach(function (p) {\n    url += '&' + p + '=' + parameters[p];\n  });\n  return getUrlData(url, callback);\n};\n\nvar getStrengthData = function getStrengthData(model, state) {\n  var parameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var callback = arguments[3];\n\n  var url = devMainUrl + '/strength?model=' + model + '&state=' + state;\n  (0, _keys2.default)(parameters).forEach(function (p) {\n    url += '&' + p + '=' + parameters[p];\n  });\n  return getUrlData(url, callback);\n};\n\nvar getStateSignature = function getStateSignature(model, state) {\n  var parameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var callback = arguments[3];\n\n  var url = devMainUrl + '/state_signature?model=' + model + '&state=' + state;\n  (0, _keys2.default)(parameters).forEach(function (p) {\n    url += '&' + p + '=' + parameters[p];\n  });\n  return getUrlData(url, callback);\n};\n\nvar getModels = function getModels(callback) {\n  var url = devMainUrl + '/models/available';\n  return getUrlData(url, callback);\n};\n\nvar getModelConfig = function getModelConfig(model, callback) {\n  var url = devMainUrl + '/models/config/' + model;\n  return getUrlData(url, callback);\n};\n\nvar getTextEvaluation = function getTextEvaluation(model, text, callback) {\n\n  var url = devMainUrl + '/models/evaluate';\n\n  return $http.post(url, { model: model, text: text }).then(function (response) {\n    callback(response);\n  }, function (errResponse) {\n    console.log(errResponse);\n    throw errResponse;\n  });\n};\n\nvar getCoCluster = function getCoCluster(model, state, n_cluster) {\n  var parameters = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var callback = arguments[4];\n\n  var url = devMainUrl + '/co_clusters?model=' + model + '&state=' + state + '&n_cluster=' + n_cluster;\n  (0, _keys2.default)(parameters).forEach(function (p) {\n    url += '&' + p + '=' + parameters[p];\n  });\n  return getUrlData(url, callback);\n};\n\nvar getVocab = function getVocab(model) {\n  var top_k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  var callback = arguments[2];\n\n  var url = devMainUrl + '/vocab?model=' + model + '&top_k=' + top_k;\n  return getUrlData(url, callback);\n};\n\nvar getStateStatistics = function getStateStatistics(model, state, layer, top_k, callback) {\n  console.log('If no statistics data available, try visit url ' + devMainUrl + '/models/record_default?model=' + model + '&set=test for generating state records!');\n  var url = devMainUrl + '/state_statistics?model=' + model + '&state=' + state + '&layer=' + layer + '&top_k=' + top_k;\n  return getUrlData(url, callback);\n};\n\nvar getWordStatistics = function getWordStatistics(model, state, layer, word, callback) {\n  var url = devMainUrl + '/word_statistics?model=' + model + '&state=' + state + '&layer=' + layer + '&word=' + word;\n  return getUrlData(url, callback);\n};\n\nvar getPosStatistics = function getPosStatistics(model, top_k, callback) {\n  var url = devMainUrl + '/pos_statistics?model=' + model + '&top_k=' + top_k;\n  return getUrlData(url, callback);\n};\n\nexports.default = {\n  getProjectionData: getProjectionData,\n  getStrengthData: getStrengthData,\n\n  getModels: getModels,\n  getModelConfig: getModelConfig,\n  getTextEvaluation: getTextEvaluation,\n  getCoCluster: getCoCluster,\n  getVocab: getVocab,\n  getStateSignature: getStateSignature,\n  getStateStatistics: getStateStatistics,\n  getWordStatistics: getWordStatistics,\n  getPosStatistics: getPosStatistics\n};\n\n/***/ }),\n\n/***/ 691:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 692:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 693:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 694:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 695:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 696:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 697:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 698:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 699:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 700:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 701:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 702:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 703:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(697)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(307),\n  /* template */\n  __webpack_require__(719),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 704:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(702)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(308),\n  /* template */\n  __webpack_require__(724),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 705:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(698)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(310),\n  /* template */\n  __webpack_require__(720),\n  /* scopeId */\n  \"data-v-6411595c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 706:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(701)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(311),\n  /* template */\n  __webpack_require__(723),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 707:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(699)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(312),\n  /* template */\n  __webpack_require__(721),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 708:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(700)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(313),\n  /* template */\n  __webpack_require__(722),\n  /* scopeId */\n  \"data-v-820c27c2\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 709:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(694)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(314),\n  /* template */\n  __webpack_require__(716),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 710:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(692)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(315),\n  /* template */\n  __webpack_require__(714),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 711:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(696)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(316),\n  /* template */\n  __webpack_require__(718),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 712:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(691)\n\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(317),\n  /* template */\n  __webpack_require__(713),\n  /* scopeId */\n  \"data-v-0de1765e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 713:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"text-view\"\n  }, [_c('h4', {\n    staticClass: \"normal\"\n  }, [_vm._v(\"Text\")]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), (_vm.displayControl) ? _c('div', {\n    staticClass: \"state-select\"\n  }, [_c('el-radio-group', {\n    attrs: {\n      \"size\": \"small\"\n    },\n    model: {\n      value: (_vm.selectedState),\n      callback: function($$v) {\n        _vm.selectedState = $$v\n      },\n      expression: \"selectedState\"\n    }\n  }, _vm._l((_vm.states), function(state) {\n    return _c('el-radio-button', {\n      attrs: {\n        \"label\": state\n      }\n    })\n  })), _vm._v(\" \"), _c('div', {\n    staticClass: \"input\"\n  }, [_c('el-col', {\n    staticClass: \"label\",\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('span', [_vm._v(\"Layer:\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('el-input-number', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"size\": \"small\",\n      \"max\": _vm.layerNum - 1\n    },\n    model: {\n      value: (_vm.selectedLayer),\n      callback: function($$v) {\n        _vm.selectedLayer = $$v\n      },\n      expression: \"selectedLayer\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"label\",\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('span', [_vm._v(\"Dim:\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('el-input-number', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"size\": \"small\",\n      \"max\": _vm.layerSize\n    },\n    model: {\n      value: (_vm.selectedDim),\n      callback: function($$v) {\n        _vm.selectedDim = $$v\n      },\n      expression: \"selectedDim\"\n    }\n  })], 1)], 1)], 1) : _vm._e(), _vm._v(\" \"), (_vm.isInput) ? _c('el-input', {\n    staticClass: \"text-input\",\n    attrs: {\n      \"type\": \"textarea\",\n      \"rows\": 2,\n      \"placeholder\": \"Please input\"\n    },\n    model: {\n      value: (_vm.inputs),\n      callback: function($$v) {\n        _vm.inputs = $$v\n      },\n      expression: \"inputs\"\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c('el-button', {\n    on: {\n      \"click\": _vm.onSubmit\n    }\n  }, [_vm._v(\" Evaluate\\n  \")]), _vm._v(\" \"), (_vm.records) ? _c('hr') : _vm._e(), _vm._v(\" \"), (_vm.records) ? _c('div', {\n    staticClass: \"text-box\"\n  }, _vm._l((_vm.sentences), function(sentence) {\n    return _c('div', _vm._l((sentence), function(word) {\n      return _c('span', {\n        style: ({\n          backgroundColor: _vm.color(word.value)\n        })\n      }, [_vm._v(\" \" + _vm._s(word.text) + \" \")])\n    }))\n  })) : _vm._e()], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 714:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"project\"\n  }, [_c('project-graph', {\n    attrs: {\n      \"svg-id\": _vm.paneId(_vm.model, _vm.selectedState),\n      \"width\": _vm.width,\n      \"height\": _vm.height,\n      \"graph-data\": _vm.graphData,\n      \"ready\": _vm.ready,\n      \"config\": _vm.config\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"config\"\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('span', [_vm._v(\"Cluster No.\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 6\n    }\n  }, [_c('el-slider', {\n    attrs: {\n      \"min\": 1,\n      \"max\": 20\n    },\n    on: {\n      \"change\": _vm.configWatcher\n    },\n    model: {\n      value: (_vm.config.clusterNum),\n      callback: function($$v) {\n        _vm.config.clusterNum = $$v\n      },\n      expression: \"config.clusterNum\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('span', [_vm._v(\"Opacity\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 6\n    }\n  }, [_c('el-slider', {\n    attrs: {\n      \"max\": 1,\n      \"step\": 0.05,\n      \"width\": 100\n    },\n    on: {\n      \"change\": _vm.configWatcher\n    },\n    model: {\n      value: (_vm.config.opacity),\n      callback: function($$v) {\n        _vm.config.opacity = $$v\n      },\n      expression: \"config.opacity\"\n    }\n  })], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 715:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('h4', {\n    staticClass: \"normal\"\n  }, [_vm._v(_vm._s(_vm.header))]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('svg', {\n    attrs: {\n      \"id\": _vm.svgId,\n      \"width\": _vm.width,\n      \"height\": _vm.height\n    }\n  }), _vm._v(\" \"), _c('svg', {\n    attrs: {\n      \"id\": _vm.svgId + \"2\",\n      \"width\": _vm.width,\n      \"height\": 30\n    }\n  })])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 716:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('svg', {\n    staticClass: \"project\",\n    attrs: {\n      \"id\": _vm.svgId,\n      \"width\": _vm.width,\n      \"height\": _vm.height\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 717:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('el-menu', {\n    staticClass: \"header-menu\",\n    attrs: {\n      \"theme\": \"dark\",\n      \"default-active\": '',\n      \"mode\": \"horizontal\"\n    },\n    on: {\n      \"select\": function () {\n        _vm.console.log('Hi!');\n      }\n    }\n  }, [_c('el-menu-item', {\n    staticClass: \"logo\",\n    attrs: {\n      \"index\": \"1\"\n    }\n  }, [_vm._v(\"RNNVis\")]), _vm._v(\" \"), _c('el-menu-item', {\n    attrs: {\n      \"index\": \"2\"\n    }\n  }, [_vm._v(\"Info\")])], 1), _vm._v(\" \"), _c('el-row', {\n    attrs: {\n      \"gutter\": 10\n    }\n  }, [_c('el-col', {\n    staticClass: \"col-bg\",\n    attrs: {\n      \"span\": 6,\n      \"gutter\": 15\n    }\n  }, [_c('model-view'), _vm._v(\" \"), _c('br'), _vm._v(\" \"), (!_vm.compare) ? _c('info-board', {\n    attrs: {\n      \"compare\": false,\n      \"type\": \"word\",\n      \"id\": \"info-word\",\n      \"height\": _vm.infoHeight * 1.0\n    }\n  }) : _vm._e(), _vm._v(\" \"), (!_vm.compare) ? _c('info-board', {\n    attrs: {\n      \"compare\": false,\n      \"type\": \"state\",\n      \"id\": \"info-state\",\n      \"height\": _vm.infoHeight * 0.8\n    }\n  }) : _vm._e()], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"col-bg\",\n    attrs: {\n      \"span\": 18,\n      \"gutter\": 15\n    }\n  }, [_c('el-row', [_c('main-view', {\n    attrs: {\n      \"height\": _vm.mainHeight\n    }\n  })], 1), _vm._v(\" \"), _c('el-row', {\n    attrs: {\n      \"gutter\": 10\n    }\n  }, [(_vm.compare) ? _c('info-view', {\n    attrs: {\n      \"height\": _vm.infoHeight\n    }\n  }) : _vm._e()], 1)], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 718:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('svg', {\n    attrs: {\n      \"id\": _vm.svgId\n    }\n  })])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 719:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"arc\"\n  }, [_c('div', {\n    staticClass: \"header\"\n  }, [_c('el-radio-group', {\n    attrs: {\n      \"size\": \"small\"\n    },\n    model: {\n      value: (_vm.selectedState),\n      callback: function($$v) {\n        _vm.selectedState = $$v\n      },\n      expression: \"selectedState\"\n    }\n  }, _vm._l((_vm.states), function(state) {\n    return _c('el-radio-button', {\n      attrs: {\n        \"label\": state\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('svg', {\n    attrs: {\n      \"id\": _vm.svgId,\n      \"width\": _vm.width,\n      \"height\": _vm.height\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"arc_config\"\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('span', [_vm._v(\"Cluster No.\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 6\n    }\n  }, [_c('el-slider', {\n    attrs: {\n      \"min\": 2,\n      \"max\": 20\n    },\n    model: {\n      value: (_vm.clusterNum),\n      callback: function($$v) {\n        _vm.clusterNum = $$v\n      },\n      expression: \"clusterNum\"\n    }\n  })], 1)], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 720:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('el-col', {\n    staticClass: \"col-bg\",\n    attrs: {\n      \"span\": 12,\n      \"gutter\": 15\n    }\n  }, [_c('info-board', {\n    attrs: {\n      \"type\": _vm.type1,\n      \"id\": 'info-board-1',\n      \"height\": _vm.height,\n      \"compare\": _vm.compare\n    }\n  })], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"col-bg\",\n    attrs: {\n      \"span\": 12,\n      \"gutter\": 15\n    }\n  }, [_c('info-board', {\n    attrs: {\n      \"type\": _vm.type2,\n      \"id\": 'info-board-2',\n      \"height\": _vm.height,\n      \"compare\": false\n    }\n  })], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 721:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"grid-content\"\n  }, [_c('el-form', {\n    attrs: {\n      \"label-position\": \"left\",\n      \"label-width\": \"30%\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": _vm.compare ? 'Model 2' : 'Model'\n    }\n  }, [_c('el-select', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"placeholder\": \"Select A Model\",\n      \"size\": \"small\"\n    },\n    model: {\n      value: (_vm.selectedModel),\n      callback: function($$v) {\n        _vm.selectedModel = $$v\n      },\n      expression: \"selectedModel\"\n    }\n  }, _vm._l((_vm.availableModels), function(model, idx) {\n    return _c('el-option', {\n      attrs: {\n        \"value\": model,\n        \"label\": model\n      }\n    })\n  })), _vm._v(\" \"), (_vm.compare) ? _c('el-button', {\n    attrs: {\n      \"icon\": \"delete\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.toggle\n    }\n  }) : _vm._e()], 1), _vm._v(\" \"), (_vm.config) ? _c('div', {\n    staticClass: \"el-form-item\"\n  }, _vm._l((Object.keys(_vm.config)), function(key) {\n    return _c('el-tag', {\n      attrs: {\n        \"type\": _vm.colorType\n      }\n    }, [_vm._v(_vm._s(key) + \": \" + _vm._s(_vm.config[key]))])\n  })) : _vm._e(), _vm._v(\" \"), (_vm.config) ? _c('hr', {\n    staticClass: \"local-hr\"\n  }) : _vm._e(), _vm._v(\" \"), (_vm.states.length) ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"Hidden State\"\n    }\n  }, [_c('el-radio-group', {\n    attrs: {\n      \"size\": \"small\"\n    },\n    model: {\n      value: (_vm.selectedState),\n      callback: function($$v) {\n        _vm.selectedState = $$v\n      },\n      expression: \"selectedState\"\n    }\n  }, _vm._l((_vm.states), function(state) {\n    return _c('el-radio-button', {\n      attrs: {\n        \"label\": state\n      }\n    }, [_vm._v(_vm._s(_vm.stateName(state)))])\n  }))], 1) : _vm._e(), _vm._v(\" \"), (_vm.layerNum) ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"Layer\"\n    }\n  }, [_c('el-input-number', {\n    staticStyle: {\n      \"width\": \"100px\",\n      \"margin-top\": \"5px\"\n    },\n    attrs: {\n      \"size\": \"small\",\n      \"max\": _vm.layerNum - 1\n    },\n    model: {\n      value: (_vm.selectedLayer),\n      callback: function($$v) {\n        _vm.selectedLayer = $$v\n      },\n      expression: \"selectedLayer\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.states.length) ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"POS Tag\"\n    }\n  }, [_c('el-switch', {\n    attrs: {\n      \"on-text\": \"\",\n      \"off-text\": \"\"\n    },\n    model: {\n      value: (_vm.posSwitch),\n      callback: function($$v) {\n        _vm.posSwitch = $$v\n      },\n      expression: \"posSwitch\"\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"align\",\n    staticStyle: {\n      \"margin-left\": \"30px\"\n    }\n  }, [_vm._v(\"Align\")]), _vm._v(\" \"), _c('el-switch', {\n    attrs: {\n      \"on-text\": \"\",\n      \"off-text\": \"\"\n    },\n    on: {\n      \"change\": _vm.layoutChange\n    },\n    model: {\n      value: (_vm.mode),\n      callback: function($$v) {\n        _vm.mode = $$v\n      },\n      expression: \"mode\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.selectedModel) ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"Sentences\"\n    }\n  }, [(_vm.inputVisible) ? _c('el-input', {\n    ref: \"saveTagInput\",\n    staticClass: \"input-new-tag\",\n    attrs: {\n      \"size\": \"small\"\n    },\n    on: {\n      \"blur\": _vm.handleInputConfirm\n    },\n    nativeOn: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.handleInputConfirm($event)\n      }\n    },\n    model: {\n      value: (_vm.inputValue),\n      callback: function($$v) {\n        _vm.inputValue = $$v\n      },\n      expression: \"inputValue\"\n    }\n  }) : _c('el-button', {\n    staticClass: \"button-new-tag\",\n    attrs: {\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.showInput\n    }\n  }, [_vm._v(\"+ New Sentence\")])], 1) : _vm._e(), _vm._v(\" \"), (_vm.sentences.length) ? _c('div', {\n    staticClass: \"sentence-container\"\n  }, _vm._l((_vm.sentences), function(sentence) {\n    return _c('el-tag', {\n      attrs: {\n        \"closable\": true,\n        \"type\": _vm.colorType\n      },\n      on: {\n        \"close\": function($event) {\n          _vm.closeSentence(sentence)\n        }\n      }\n    }, [_c('a', [_vm._v(_vm._s(sentence))])])\n  })) : _vm._e(), _vm._v(\" \"), (_vm.selectedState) ? _c('hr', {\n    staticClass: \"local-hr\"\n  }) : _vm._e(), _vm._v(\" \"), (_vm.selectedState) ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"Cluster Num\"\n    }\n  }, [_c('el-slider', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"min\": 2,\n      \"max\": 20\n    },\n    on: {\n      \"change\": _vm.layoutChange\n    },\n    model: {\n      value: (_vm.layout.clusterNum),\n      callback: function($$v) {\n        _vm.layout.clusterNum = $$v\n      },\n      expression: \"layout.clusterNum\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.selectedState) ? _c('el-form-item', {\n    staticStyle: {\n      \"margin-top\": \"-7px\",\n      \"padding-bottom\": \"-10px\"\n    },\n    attrs: {\n      \"label\": \"Stroke Width\"\n    }\n  }, [_c('el-slider', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"min\": 0,\n      \"max\": _vm.maxWidth,\n      \"step\": 0.1\n    },\n    on: {\n      \"change\": _vm.layoutChange\n    },\n    model: {\n      value: (_vm.layout.strokeControlStrength),\n      callback: function($$v) {\n        _vm.layout.strokeControlStrength = $$v\n      },\n      expression: \"layout.strokeControlStrength\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.selectedState) ? _c('el-form-item', {\n    staticStyle: {\n      \"margin-top\": \"-7px\"\n    },\n    attrs: {\n      \"label\": \"Link Filter\"\n    }\n  }, [_c('el-slider', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"range\": \"\",\n      \"min\": 0,\n      \"max\": 1,\n      \"step\": 0.0001\n    },\n    on: {\n      \"change\": _vm.layoutChange\n    },\n    model: {\n      value: (_vm.layout.linkFilterThreshold),\n      callback: function($$v) {\n        _vm.layout.linkFilterThreshold = $$v\n      },\n      expression: \"layout.linkFilterThreshold\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.selectedState) ? _c('el-form-item', {\n    staticStyle: {\n      \"margin-top\": \"-7px\"\n    },\n    attrs: {\n      \"label\": \"State Clip\"\n    }\n  }, [_c('el-slider', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"min\": 0,\n      \"max\": 10,\n      \"step\": 1\n    },\n    on: {\n      \"change\": _vm.layoutChange\n    },\n    model: {\n      value: (_vm.layout.stateClip),\n      callback: function($$v) {\n        _vm.layout.stateClip = $$v\n      },\n      expression: \"layout.stateClip\"\n    }\n  })], 1) : _vm._e()], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 722:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('h4', {\n    staticClass: \"normal\"\n  }, [_vm._v(\"Models\")]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('div', {\n    staticClass: \"content model-view\"\n  }, [_c('model-config', {\n    attrs: {\n      \"compare\": false\n    }\n  }), _vm._v(\" \"), (_vm.compare) ? _c('hr') : _vm._e(), _vm._v(\" \"), (_vm.compare) ? _c('model-config', {\n    attrs: {\n      \"compare\": true,\n      \"toggle\": _vm.toggleCompare\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.toggleCompare\n    }\n  }, [_vm._v(\"Compare Model\")])], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 723:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('h4', {\n    staticClass: \"normal\"\n  }, [_vm._v(\"Main\")]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), (_vm.compare) ? _c('cluster-view', {\n    attrs: {\n      \"width\": _vm.width / 2 - 15,\n      \"height\": _vm.height,\n      \"compare\": true\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c('cluster-view', {\n    attrs: {\n      \"width\": _vm.compare ? _vm.width / 2 - 15 : _vm.width,\n      \"height\": _vm.height,\n      \"compare\": false\n    }\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 724:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('svg', {\n    attrs: {\n      \"id\": _vm.svgId,\n      \"width\": _vm.width,\n      \"height\": _vm.height\n    }\n  }, [_c('defs', [_c('linearGradient', {\n    attrs: {\n      \"id\": \"state-legend\"\n    }\n  }, [_c('stop', {\n    staticClass: \"stop1\",\n    attrs: {\n      \"offset\": \"0%\",\n      \"stop-color\": \"rgba(9, 173, 255, 1)\"\n    }\n  }), _vm._v(\" \"), _c('stop', {\n    staticClass: \"stop2\",\n    attrs: {\n      \"offset\": \"50%\",\n      \"stop-color\": \"rgba(128, 128, 128, 0.1)\"\n    }\n  }), _vm._v(\" \"), _c('stop', {\n    staticClass: \"stop3\",\n    attrs: {\n      \"offset\": \"100%\",\n      \"stop-color\": \"rgba(255, 91, 9, 1)\"\n    }\n  })], 1)], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 728:\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n\n/***/ 94:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WordCloud = undefined;\n\nvar _keys = __webpack_require__(33);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _classCallCheck2 = __webpack_require__(25);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(26);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _d = __webpack_require__(21);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _d3Cloud = __webpack_require__(412);\n\nvar _d3Cloud2 = _interopRequireDefault(_d3Cloud);\n\nvar _eventBus = __webpack_require__(11);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar bgLayout = {\n  'stroke': 'black',\n  'stroke-width': 1,\n  'fill': 'white',\n  'fill-opacity': 0.0,\n  'stroke-opacity': 0.2\n};\n\nvar wordLayout = {\n  'font': 'Arial',\n\n  'fontSize': [9, 17],\n\n  'fontWeight': [300, 400, 500],\n  'padding': 0,\n  'opacity': 0.7,\n  'baseColor': '#1f77b4'\n};\n\nvar WordCloud = function () {\n  function WordCloud(selector) {\n    var radiusX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n    var radiusY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : radiusX;\n    var bgshape = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'rect';\n    var compare = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    (0, _classCallCheck3.default)(this, WordCloud);\n\n    this.selector = selector;\n    this.bggroup = this.selector.append('g');\n    this.bg = this.bggroup.append('g');\n    this.bgHandle;\n    this.bgshape = bgshape;\n    this.bgLayout = bgLayout;\n    this.wordLayout = wordLayout;\n    this.group = this.bggroup.append('g');\n    this.radius = [radiusX, radiusY];\n    this.data;\n    this.cloud = null;\n    this.font = 'Impact';\n    this.margin_ = 0;\n    this.colorScheme = d3.scaleOrdinal(d3.schemeCategory10);\n    this.word2data;\n    this.compare = compare;\n    this.boundingSize = [radiusX * 2, radiusY * 2];\n  }\n\n  (0, _createClass3.default)(WordCloud, [{\n    key: 'size',\n    value: function size(_size) {\n      this.radius[0] = _size[0] / 2;\n      this.radius[1] = _size[1] / 2;\n      return this;\n    }\n  }, {\n    key: 'wordLayoutParams',\n    value: function wordLayoutParams(layoutParams) {\n      return arguments.length ? (this.wordLayout = layoutParams, this) : this.wordLayout;\n    }\n  }, {\n    key: 'bgLayoutParams',\n    value: function bgLayoutParams(layoutParams) {\n      return arguments.length ? (this.bgLayout = layoutParams, this) : this.bgLayout;\n    }\n  }, {\n    key: 'transform',\n    value: function transform(transformStr) {\n      if (this.compare) transformStr += ' scale(-1, 1)';\n      this.bggroup.transition().duration(200).attr('transform', transformStr);\n      return this;\n    }\n  }, {\n    key: 'background',\n    value: function background(color) {\n      var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1.0;\n\n      this.bgLayout['fill'] = color;\n      this.bgLayout['fill-opacity'] = alpha;\n      return this;\n    }\n  }, {\n    key: 'drawBackground',\n    value: function drawBackground() {\n      var _this = this;\n\n      if (this.bgHandle) this.bgHandle.remove();\n      this.bgHandle = this.bg.append(this.bgshape);\n      if (this.bgshape === 'rect') {\n        this.bgHandle.attr('x', -this.radius[0]).attr('y', -this.radius[1]).attr('rx', 4).attr('ry', 4).attr('width', 2 * this.radius[0]).attr('height', 2 * this.radius[1]);\n      } else if (this.bgshape === 'ellipse') {\n        this.bgHandle.attr('cx', 0).attr('cy', 0).attr('rx', radius[0]).attr('ry', radius[1]);\n      }\n      (0, _keys2.default)(this.bgLayout).forEach(function (param) {\n        _this.bgHandle.attr(param, _this.bgLayout[param]);\n      });\n      return this;\n    }\n  }, {\n    key: 'margin',\n    value: function margin(_margin) {\n      this.margin_ = _margin;\n\n      return this;\n    }\n  }, {\n    key: 'fontFamily',\n    value: function fontFamily(font) {\n      this.wordLayout.font = font;\n      return this;\n    }\n  }, {\n    key: 'color',\n    value: function color(colorScheme) {\n      this.colorScheme = colorScheme;\n      return this;\n    }\n  }, {\n    key: 'draw',\n    value: function draw() {\n      var _this2 = this;\n\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [this.width / 2, this.height / 2];\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.data;\n\n      if (size[0] !== this.width / 2 || size[1] !== this.height / 2) {\n        this.radius = size;\n        this.drawBackground();\n      }\n      if (!this.bgHandle) this.drawBackground();\n      if (!this.data) this.data = data;\n\n      var radiusX = size[0];\n      var radiusY = size[1];\n      var wordLayout = this.wordLayout;\n\n      var filterData = data.filter(function (d) {\n        return -radiusX < d.x - d.width / 4 && -radiusY < d.y - d.size / 2 && d.x + d.width / 4 < radiusX && d.y - d.size / 2 < radiusY;\n      });\n      var self = this;\n      this.cloud = this.group.selectAll('text').data(filterData, function (d) {\n        return d.text;\n      });\n      var text = this.cloud.enter().append('text').style('font-family', wordLayout.font).attr('text-anchor', 'middle').style('fill', function (d, i) {\n        return typeof d.type === 'number' ? self.colorScheme(d.type) : wordLayout.baseColor;\n      });\n      text.text(function (d) {\n        return d.text;\n      });\n\n      this.cloud.style('fill', function (d, i) {\n        return typeof d.type === 'number' ? self.colorScheme(d.type) : wordLayout.baseColor;\n      });\n\n      text.attr('transform', function (d) {\n        return 'translate(' + [d.x, d.y] + ')';\n      }).attr('font-size', function (d) {\n        return d.size + 'px';\n      }).attr('font-weight', function (d) {\n        return d.weight;\n      }).style('fill-opacity', 0).transition().duration(300).style('fill-opacity', wordLayout.opacity);\n\n      text.on('mouseover', function () {\n        d3.select(this).style('fill-opacity', 1.0);\n      }).on('mouseout', function (d, i) {\n        if (d.select) return;\n        d3.select(this).style('fill-opacity', wordLayout.opacity);\n      }).on('click', function (d, i) {\n        if (!d.select) {\n          d.select = true;\n          d.opacity = wordLayout.opacity;\n          d.baseColor = typeof d.type === 'number' ? self.colorScheme(d.type) : wordLayout.baseColor;\n          d3.select(this).style('fill-opacity', 1.0).style('font-weight', d.weight + 500);\n          _eventBus.bus.$emit(_eventBus.SELECT_WORD, d, self.compare);\n        } else {\n          d.select = false;\n          _eventBus.bus.$emit(_eventBus.DESELECT_WORD, d, self.compare);\n          d3.select(this).style('fill-opacity', wordLayout.opacity).style('font-weight', d.weight);\n        }\n      });\n\n      text.each(function (d) {\n        d.el = this;\n      });\n\n      this.word2data = {};\n      this.data.forEach(function (d) {\n        return _this2.word2data[d.text] = d;\n      });\n\n      this.cloud.exit().transition().duration(200).style('fill-opacity', 1e-6).attr('font-size', 1).remove();\n\n      return this;\n    }\n  }, {\n    key: 'update',\n    value: function update(words) {\n      var self = this;\n\n      words.sort(function (a, b) {\n        return a.size - b.size;\n      });\n      var fontExtent = d3.extent(words, function (d) {\n        return d.size;\n      });\n      var scale = d3.scalePow().range(this.wordLayout.fontSize).domain(fontExtent);\n      var weightScale = d3.scaleQuantize().range(this.wordLayout.fontWeight).domain(fontExtent);\n      words.forEach(function (word) {\n        word.weight = Math.round(weightScale(word.size));\n        word.size = scale(word.size);\n      });\n\n      self.boundingSize = [self.boundingSize[0] * 1.3, self.boundingSize[1] * 1.05];\n      (0, _d3Cloud2.default)().size(this.boundingSize).words(words).padding(this.wordLayout.padding).rotate(0).font(this.wordLayout.font).text(function (d) {\n        return d.text;\n      }).fontSize(function (d) {\n        return d.size;\n      }).fontWeight(function (d) {\n        return d.weight;\n      }).on('end', function (words_) {\n        self.draw([self.width / 2, self.height / 2], words_);\n      }).random(function () {\n        return 0.5;\n      }).spiral('rectangular').start();\n    }\n  }, {\n    key: 'autoscale',\n    value: function autoscale(bounds) {\n      var scaleX = 0.9 * this.width / Math.abs(bounds[0].x - bounds[1].x);\n      var scaleY = 0.9 * this.height / Math.abs(bounds[0].y - bounds[1].y);\n      var scale = Math.min(scaleX, scaleY);\n      var centerX = (bounds[1].x + bounds[0].x - this.width) / 2 * scale;\n      var centerY = (bounds[1].y + bounds[0].y - this.height) / 2 * scale;\n      this.group.attr('transform', 'scale(' + scale + ') translate(' + -centerX + ', ' + -centerY + ')');\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.selector.transition().duration(300).attr('opacity', 0).remove();\n    }\n  }, {\n    key: 'width',\n    get: function get() {\n      return (this.radius[0] - this.margin_) * 2;\n    }\n  }, {\n    key: 'height',\n    get: function get() {\n      return (this.radius[1] - this.margin_) * 2;\n    }\n  }, {\n    key: 'polygon',\n    get: function get() {\n      var polygon = [];\n      var len = 4;\n      for (var i = 0; i < len; i++) {\n        polygon.push([Math.round(this.radiusX * Math.cos(2 * Math.PI * i / len)), Math.round(this.radiusY * Math.sin(2 * Math.PI * i / len))]);\n      }\n      return polygon;\n    }\n  }]);\n  return WordCloud;\n}();\n\nexports.WordCloud = WordCloud;\nexports.default = {\n  WordCloud: WordCloud\n};\n\n/***/ })\n\n},[305]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.8557021d69c3a828d514.js","import Vue from 'vue';\nimport dataService from './services/dataService';\nimport * as d3 from 'd3';\nimport { CoClusterProcessor, SentenceRecord, StateStatistics } from './preprocess'\n\n// event definitions goes here\nconst SELECT_MODEL = 'SELECT_MODEL';\nconst SELECT_STATE = 'SELECT_STATE';\nconst CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nconst EVALUATE_SENTENCE = 'EVALUATE_SENTENCE';\nconst SELECT_UNIT = 'SELECT_UNIT';\nconst SELECT_WORD = 'SELECT_WORD';\nconst DESELECT_UNIT = 'DESELECT_UNIT';\nconst DESELECT_WORD = 'DESELECT_WORD';\nconst SELECT_LAYER = 'SELECT_LAYER';\nconst CLOSE_SENTENCE = 'CLOSE_SENTENCE';\nconst SELECT_SENTENCE_NODE = 'SELECT_SENTENCE_NODE';\nconst SELECT_COLOR = 'SELECT_COLOR';\n\nconst state = {\n  selectedModel: null,\n  selectedState: null,\n  selectedLayer: null,\n  selectedModel2: null,\n  selectedState2: null,\n  selectedLayer2: null,\n  layout: {},\n  layout2: {},\n  modelConfigs: {},\n  coClusters: {},\n  availableModels: null,\n  sentenceRecords: {},\n  statistics: {},\n  modelsSet: null,\n  selectedUnits: [],\n  selectedWords: [],\n  selectedUnits2: [],\n  selectedWords2: [],\n  selectedNode: null,\n  selectedNode2: null,\n  compare: false,\n  color: d3.scaleOrdinal(d3.schemeCategory10),\n  renderPos: false,\n  renderPos2:false,\n  // nodeRecord: [],\n};\n\nconst bus = new Vue({\n  data: {\n    state: state,\n    cell2states: {\n      'GRU': ['state'],\n      'BasicLSTM': ['state_c', 'state_h'],\n      'BasicRNN': ['state'],\n    },\n  },\n  computed: {\n    // selectedUnits: function() {\n    //   return this.state.selectedUnits;\n    // },\n  },\n  methods: {\n\n    loadModelConfig(modelName) { // return a Promise\n      if (!modelName)\n        return Promise.reject(modelName);\n      if (!Object.prototype.hasOwnProperty.call(state.modelConfigs, modelName)) {\n        return dataService.getModelConfig(modelName, response => {\n          if (response.status === 200) {\n            state.modelConfigs[modelName] = response.data;\n            // state.selectedModel = modelName;\n          }\n        });\n      }\n      return Promise.resolve(modelName);\n    },\n\n    loadAvailableModels() {\n      // console.log(this.availableModels);\n      if (this.state.availableModels === null) {\n        console.log(\"Start loading model data\");\n        return dataService.getModels(response => {\n          if (response.status === 200) {\n            const data = response.data;\n            this.state.availableModels = data.models;\n            this.state.modelsSet = new Set(this.state.availableModels);\n            // console.log(this.state.modelsSet);\n          }\n        });\n      }\n      return Promise.resolve('Already Loaded');\n    },\n\n    loadCoCluster(modelName = this.state.selectedModel, stateName = this.state.selectedState, nCluster = 10, params = { top_k: 300, mode: 'raw', layer: -1 }) {\n      const coCluster = new CoClusterProcessor(modelName, stateName, nCluster, params);\n      const coClusterName = CoClusterProcessor.identifier(coCluster);\n      if (this.state.coClusters.hasOwnProperty(coClusterName))\n        return Promise.resolve('Cocluster data already loaded');\n      return this.loadAvailableModels()\n        .then(() => {\n          if (this.state.modelsSet.has(modelName)) {\n            return coCluster.load();\n          }\n          throw `No model named ${modelName}`;\n        })\n        .then(() => {\n          this.state.coClusters[coClusterName] = coCluster;\n          return 'Succeed';\n        });\n    },\n    getCoCluster(modelName = this.state.selectedModel, stateName = this.state.selectedState, nCluster = 10, params = { top_k: 300, mode: 'raw', layer: -1 }) {\n      const coCluster = new CoClusterProcessor(modelName, stateName, nCluster, params);\n      const coClusterName = CoClusterProcessor.identifier(coCluster);\n      if (this.state.coClusters.hasOwnProperty(coClusterName))\n        return this.state.coClusters[coClusterName];\n      console.log('First call loadCoCluster(...) to load remote Data!');\n      return undefined;\n    },\n    // getModelConfig(modelName = state.selectedModel) {\n    //   if (this.state.availableModels)\n    //     return this.state.availableModels[modelName];\n    //   return undefined;\n    // },\n    modelCellType(modelName = state.selectedModel) {\n      if (state.modelsSet.has(modelName)) {\n        const config = this.state.modelConfigs[modelName];\n        return config.model.cell_type;\n      }\n      return undefined;\n    },\n    availableStates(modelName = this.state.selectedModel) { // helper function that returns available states of the current selected Model`\n      // modelName = modelName || this.state.selectedModel;\n      if (state.modelsSet.has(modelName)) {\n        const config = this.state.modelConfigs[modelName];\n        return this.cell2states[config.model.cell_type];\n      }\n      return undefined;\n    },\n    layerNum(modelName = this.selectedModel) {\n      // modelName = modelName || this.state.selectedModel;\n      if (state.modelsSet.has(modelName)) {\n        const config = this.state.modelConfigs[modelName];\n        return config.model.cells.length;\n      }\n      return undefined;\n    },\n    layerSize(modelName = this.state.selectedModel, layer = -1) {\n      // modelName = modelName || this.state.selectedModel;\n      if (state.modelsSet.has(modelName)) {\n        if (layer === -1) {\n          layer = this.layerNum(modelName) - 1;\n        }\n        const config = this.state.modelConfigs[modelName];\n        return config.model.cells[layer].num_units;\n      }\n      return undefined;\n    },\n    evalSentence(sentence, modelName = state.selectedModel) {\n      if (!state.sentenceRecords.hasOwnProperty(modelName)) {\n        state.sentenceRecords[modelName] = [];\n      }\n      const record = new SentenceRecord(sentence, modelName);\n      state.sentenceRecords[modelName].push(record);\n      return record;\n    },\n    loadStatistics(modelName = state.selectedModel, stateName = state.selectedState, layer = -1, top_k = 300) {\n      if (!state.modelsSet.has(modelName))\n        return Promise.reject(`No available model ${modelName}`);\n      if (!(stateName === 'state' || stateName === 'state_c' || stateName === 'state_h'))\n        return Promise.reject(`No available state ${stateName}`);\n      if (!state.statistics.hasOwnProperty(modelName)) {\n        state.statistics[modelName] = {};\n      }\n      if(!state.statistics[modelName].hasOwnProperty(stateName)) {\n        state.statistics[modelName][stateName] = [];\n      }\n      if (layer === -1) {\n        layer = this.layerNum(modelName) - 1;\n      }\n      if (state.statistics[modelName][stateName][layer]){\n        return state.statistics[modelName][stateName][layer].load();\n      }\n      const stat = new StateStatistics(modelName, stateName, layer, top_k);\n      state.statistics[modelName][stateName][layer] = stat;\n      return stat.load();\n    },\n    getStatistics(modelName = state.selectedModel, stateName = state.selectedState, layer = -1, top_k = 300) {\n      if (state.statistics.hasOwnProperty(modelName)) {\n        if(state.statistics[modelName].hasOwnProperty(stateName)){\n          if(state.statistics[modelName][stateName][layer])\n            return state.statistics[modelName][stateName][layer];\n        }\n      }\n      console.log(`bus > unable to get statistics for ${modelName}, ${stateName}, ${layer}`);\n      return undefined;\n    },\n    // load\n    loadPosStatistics(modelName = state.selectedModel, top_k = 300, callback) {\n      if (this.state.modelsSet.has(modelName)) {\n        return dataService.getPosStatistics(modelName, top_k, callback);\n      }\n      return Promise.reject(`No model with name ${modelName} available!`);\n    }\n  },\n  created() {\n    // register event listener\n    this.$on(SELECT_MODEL, (modelName, compare) => {\n      if (compare) {\n        this.state.selectedModel2 = modelName;\n        this.state.compare = modelName ? true : false;\n      }\n      else\n        this.state.selectedModel = modelName;\n      console.log(`bus > current models : ${state.selectedModel}, ${state.selectedModel2}`);\n    });\n\n    this.$on(SELECT_STATE, (stateName, compare) => {\n      if (compare)\n        this.state.selectedState2 = stateName;\n      else\n        this.state.selectedState = stateName;\n      console.log(`bus > current states : ${state.selectedState}, ${state.selectedState2}`);\n    });\n\n    this.$on(SELECT_LAYER, (layer, compare) => {\n      if (compare)\n        this.state.selectedLayer2 = layer;\n      else\n        this.state.selectedLayer = layer;\n    });\n\n// bus.$on(CLUSTER_NUM, (clusterNum) => {\n//   bus.state.clusterNum = clusterNum;\n// });\n\n    this.$on(CHANGE_LAYOUT, (newLayout, compare) => {\n      if(compare)\n        this.state.layout2 = Object.assign({}, newLayout);\n      else\n        this.state.layout = Object.assign({}, newLayout);\n      console.log(`bus > ${compare ? 'compare': ''} clusterNum: ${newLayout.clusterNum}`);\n    });\n\n    this.$on(EVALUATE_SENTENCE, (sentence, compare) => {\n      console.log(`bus > evaluating model ${compare ? state.selectedModel2 : state.selectedModel} on sentence \"${sentence}\"`);\n    });\n\n    this.$on(SELECT_UNIT, (unitDim, compare) => {\n      if (compare) {\n        const units = this.state.selectedUnits2.slice();\n        units.push(unitDim);\n        if (units.length > 2)\n          units.splice(0, 1);\n        this.state.selectedUnits2 = units;\n        this.state.selectedWords2 = [];\n        this.state.selectedNode2 = null;\n      } else {\n        const units = this.state.selectedUnits.slice();\n        units.push(unitDim);\n        if (units.length > 2)\n          units.splice(0, 1);\n        this.state.selectedUnits = units;\n        if (this.state.compare){\n          this.state.selectedWords = [];\n          this.state.selectedNode = null;\n        }\n      }\n      console.log(`bus > selected unit ${unitDim}`);\n\n    });\n\n    this.$on(SELECT_WORD, (word, compare) => {\n      const maxSelected = 3;\n      let words;\n      if (compare){\n        words = this.state.selectedWords2.slice();\n        this.state.selectedUnits2 = [];\n        this.state.selectedNode2 = null;\n      } else {\n        words = this.state.selectedWords.slice();\n        if (this.state.compare) {\n          this.state.selectedUnits = [];\n          this.state.selectedNode = null;\n        }\n      }\n      words.push(word);\n      if (words.length > maxSelected) {\n        deactivateText(words[0]);\n        words.splice(0, 1);\n      }\n      afterChangeWords(words);\n      if (compare) this.state.selectedWords2 = words;\n      else this.state.selectedWords = words;\n      console.log(`bus > selected word: ${word.text}`);\n    });\n\n    this.$on(DESELECT_UNIT, (unit, compare) => {\n      if (compare) {\n        const idx = this.state.selectedUnits2.indexOf(unit);\n        this.state.selectedUnits2.splice(idx, 1);\n      } else {\n        const idx = this.state.selectedUnits.indexOf(unit);\n        this.state.selectedUnits.splice(idx, 1);\n      }\n      console.log(`bus > deselected unit: ${unit}`);\n    });\n\n    this.$on(DESELECT_WORD, (word, compare) => {\n      let words;\n      if (compare) words = this.state.selectedWords2.slice();\n      else words = this.state.selectedWords.slice();\n      const idx = words.findIndex((d) => d.text === word.text);\n      console.log(`bus > deleted idx: ${idx}`);\n      deactivateText(words[idx]);\n      words.splice(idx, 1);\n      afterChangeWords(words);\n      if (compare) this.state.selectedWords2 = words;\n      else this.state.selectedWords = words;\n      console.log(`bus > deselected word: ${word.text}`);\n    });\n\n    this.$on(CLOSE_SENTENCE, (sentence, compare) => {\n      console.log(`bus > close sentence: ${sentence}`);\n    });\n    this.$on(SELECT_SENTENCE_NODE, (node, compare) => {\n      if(compare)\n        this.state.selectedNode2 = node;\n      else this.state.selectedNode = node;\n      console.log(`bus > sentence node selected: ${node.word}`);\n    });\n\n  }\n});\n\nfunction afterChangeWords(words) {\n  words.forEach((word, i) => {\n    word.color = state.color(i);\n    activateText(word);\n    focusText(word);\n  });\n  // if (words.length)\n  //   focusText(words[0]);\n}\n\nfunction deactivateText(data) {\n  d3.select(data.el)\n    .style('fill-opacity', data.opacity)\n    .style('font-weight', data.weight)\n    .style('stroke', 'none')\n    .style('fill', data.baseColor);\n  if(data.bound) {\n    data.bound.remove();\n    data.bound = null;\n  }\n}\n\nfunction activateText(data) {\n  d3.select(data.el).style('fill-opacity', 1)\n    .style('font-weight', data.weight + 300)\n    .style('stroke', 'none')\n    .style('fill', data.color);\n  if(data.bound) {\n    data.bound.remove();\n    data.bound = null;\n  }\n}\n\nfunction focusText(data) {\n  const box = data.el.getBBox();\n  // console.log(box);\n  // d3.select(data.el)\n  //   .style('stroke', '#000').style('stroke-width', 0.5); //.style('stroke-opacity', 0.5);\n  data.bound = d3.select(data.el.parentNode).insert('path')\n    .attr('d', 'M ' + (data.x - box.width/2 -1.5) + ' ' + (data.y + 2)\n      + ' H ' + (data.x + box.width/2 + 1.5))\n    // .attr('x', data.x - box.width/2 -1.5).attr('y', data.y - box.height*0.78)\n    // .attr('width', box.width + 3).attr('height', box.height*0.9)\n    .style('stroke', data.color);\n    // .style('stroke-opacity', 0.6);\n    // .style('fill', 'none');\n\n}\n\nexport default bus;\n\nexport {\n  bus,\n  SELECT_MODEL,\n  SELECT_STATE,\n  CHANGE_LAYOUT,\n  EVALUATE_SENTENCE,\n  CoClusterProcessor,\n  SentenceRecord,\n  SELECT_UNIT,\n  SELECT_WORD,\n  SELECT_LAYER,\n  DESELECT_UNIT,\n  DESELECT_WORD,\n  CLOSE_SENTENCE,\n  SELECT_SENTENCE_NODE,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/event-bus.js","import * as d3 from 'd3';\n// import dimple from '../lib/dimple';\n\nclass Artist {\n  constructor(chart) {\n    this.chart = chart;\n    // this.data = [];\n    // this.areas = [];\n    this.handles = []\n    this.drawHooks = [];\n  }\n  get group() {\n    return this.chart.group;\n  }\n  get scale() {\n    return this.chart.scale;\n  }\n  draw() {\n    this.drawHooks.forEach((drawHook) => drawHook());\n  }\n  clean() {\n    this.handles.forEach((handle) => {\n      handle\n        .transition()\n        .duration(200)\n        .style('opacity', 0)\n        .remove();\n    });\n    this.handles = [];\n    this.drawHooks = [];\n  }\n}\n\nconst defaultColorScheme = d3.scaleOrdinal(d3.schemeCategory10);\n\nfunction drawBox(el, xs, mean, range1, range2) {\n  const box = el.append('g');\n  // const x = width / 2;\n  // console.log(range1);\n  const mid = (xs[0] + xs[1]) / 2;\n  box.append('rect')\n    .attr('x', xs[0])\n    .attr('y', Math.min(range1[0], range1[1]))\n    .attr('width', xs[1] - xs[0])\n    .attr('height', Math.abs(range1[1] - range1[0]));\n  box.append('line')\n    .attr('x1', xs[0])\n    .attr('y1', mean)\n    .attr('x2', xs[1])\n    .attr('y2', mean);\n  for (let i = 0; i < 2; i += 1) {\n    box.append('line')\n      .attr('x1', mid)\n      .attr('y1', range1[i])\n      .attr('x2', mid)\n      .attr('y2', range2[i]);\n    box.append('line')\n      .attr('x1', xs[0])\n      .attr('y1', range2[i])\n      .attr('x2', xs[1])\n      .attr('y2', range2[i]);\n  }\n  return box;\n}\n\n// Chart class, for usage example, see TestView.vue\n\nexport class Chart {\n  // svg: a selector from d3.select, could be a <g>\n  constructor(svg, width = 100, height = 100) {\n    this.bggroup = svg.append('g');\n    this.bg = this.bggroup.append('rect')\n      .attr('opacity', 0);\n    this.group = this.bggroup.append('g');\n    this.width = width;\n    this.height = height;\n    this.marginAll = [0, 0, 0, 0];\n    this.scale = { x: null, y: null };\n    this.extents = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    this.axis = { x: null, y: null };\n    this.axisHandles = { x: null, y: null };\n    this.charts = [];\n    this.artists = {}\n    this.drawHooks = { xAxis: null, yAxis: null};\n    this.offset = [];\n    this.rotateFlag = false;\n  }\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n    return this;\n  }\n  // set the relative translation regarding its mother element\n  translate(x, y) {\n    this.offset = [x, y];\n    this.bggroup.attr('transform', `translate(${this.offset[0]},${this.offset[1]})`);\n    // this.transform();\n    return this;\n  }\n  // perform the transform rendering, will be called by `draw()`\n  transform() {\n    if (this.rotateFlag === true) {\n      const x = this.width - this.marginLeft - this.marginRight;\n      const y = this.height - this.marginTop - this.marginBottom;\n      const rx = y / x;\n      const ry = x / y;\n      Object.keys(this.artists).forEach((artist) => {\n        this.artists[artist].handles.forEach((handle) => {\n          const scale = ''; //`scale(${rx}, ${ry}) `;\n          const rotate = 'rotate(-90, 0, 0)';\n          const translate = `translate(${-(this.width - this.marginLeft - this.marginRight)}, 0)`;\n          handle.attr('transform', rotate + translate + scale);\n        });\n      });\n    }\n  }\n  // rotate the chart, and perform axis rotation as well\n  rotate() {\n    this.rotateFlag = !this.rotateFlag;\n    if (this.rotateFlag) {\n      this.drawTmp = this.draw;\n      const tmpSize = [this.width, this.height];\n      const tmpMargin = this.marginAll;\n      this.draw = () => {\n        // placeholder for axis to prevent draw Axis\n        this.axisHandles.x = this.axisHandles.y = 1;\n        // reverse size\n        this.width = tmpSize[1];\n        this.height = tmpSize[0];\n        this.marginAll = [tmpMargin[1], tmpMargin[2], tmpMargin[3], tmpMargin[0]];\n\n        this.updateScale();\n        this.drawTmp();\n        // remove placeholder\n        this.axisHandles.x = this.axisHandles.y = null;\n        // reverse size back\n        this.width = tmpSize[0];\n        this.height = tmpSize[1];\n\n        this.marginAll = tmpMargin;\n        this.extents.reverse();\n        this.updateScale();\n        this.drawAxis();\n        this.extents.reverse();\n\n      };\n    } else {\n      this.draw = this.drawTmp;\n    }\n    return this;\n  }\n  // set the background color and opacity\n  background(color, alpha) {\n    this.bg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('fill', color)\n      .attr('opacity', alpha);\n    return this;\n  }\n  // set the margin of the chart\n  margin(top, right = top, bottom = top, left = right) {\n    this.marginAll = [top, right, bottom, left];\n    this.group.attr('transform', `translate(${this.marginLeft}, ${this.marginTop})`);\n    return this;\n  }\n  // a few getter helpers\n  get marginTop() {\n    return this.marginAll[0];\n  }\n  get marginRight() {\n    return this.marginAll[1];\n  }\n  get marginBottom() {\n    return this.marginAll[2];\n  }\n  get marginLeft() {\n    return this.marginAll[3];\n  }\n  // create a sub chart in this chart\n  subChart(width = 100, height = 100) {\n    const chart = new Chart(this.group, width, height)\n      .translate(this.marginLeft, this.marginTop);\n    this.charts.push(chart);\n    return chart;\n  }\n  // update a extent for one dimension, i=0 -> x, i=1 -> y\n  updateExtentI(extent, i) {\n    const range = extent[1] - extent[0];\n    // const timer = 10;\n    // console.log(extent);\n    // const maxRange = Math.max(range, this.extents[i][1] - this.extents[i][0]);\n    const timer = range === 0 ? 10000 : (10 < range ? 1 : Math.round(10 / range));\n    this.extents[i][0] = Math.min(Math.floor(timer*(extent[0] - range * 0.02))/timer, this.extents[i][0]);\n    this.extents[i][1] = Math.max(Math.ceil(timer*(extent[1] + range * 0.02))/timer, this.extents[i][1]);\n    // console.log(`${i} > ${this.extents[i]}`)\n    return this;\n  }\n  // update both extent\n  updateExtent(xExtent, yExtent) {\n    return this.updateExtentI(xExtent, 0).updateExtentI(yExtent, 1);\n  }\n  // update the scale function with given data\n  updateScale(data, xfn = (d) => d[0], yfn = (d) => d[1]) {\n    return this.updateScaleX(data, xfn).updateScaleY(data, yfn);\n  }\n  // update scale.x\n  updateScaleX(data, xfn) {\n    if (data) this.updateExtentI(d3.extent(data, xfn), 0);\n    this.scale.x = d3.scaleLinear()\n      .domain(this.extents[0])\n      .rangeRound([0, this.width - this.marginRight - this.marginLeft]);\n    return this;\n  }\n  // update scale.y\n  updateScaleY(data, yfn) {\n    if (data) this.updateExtentI(d3.extent(data, yfn), 1);\n    this.scale.y = d3.scaleLinear()\n      .domain(this.extents[1])\n      .rangeRound([this.height - this.marginBottom - this.marginTop, 0]);\n    return this;\n  }\n  // a function that draw axis automatically\n  drawAxis() {\n    if (!this.axisHandles.x && this.drawHooks.xAxis) {\n      this.drawHooks.xAxis();\n    }\n    if (!this.axisHandles.y && this.drawHooks.yAxis) {\n      this.drawHooks.yAxis();\n    }\n  }\n  // set the x Axis draw function\n  xAxis(label = 'x', pos = 'bottom') {\n    let translateStr;\n    if (pos === 'bottom') {\n      translateStr = () => [0, this.scale.y(this.extents[1][0])];\n      this.axis.x = d3.axisBottom();\n    } else if (pos === 'top') {\n      translateStr = () => [0, this.scale.y(this.extents[1][1])];\n      this.axis.x = d3.axisTop();\n    } else {\n      // eslint-disable-next-line\n      console.log(`Unknown axis position: ${pos}`);\n      return this;\n    }\n    this.drawHooks.xAxis = () => {\n      this.axis.x.scale(this.scale.x);\n      this.axisHandles.x = this.group.append('g');\n      this.axisHandles.x\n        .attr('transform', 'translate(' + translateStr() + ')')\n        .call(this.axis.x);\n      if (label){\n        const labelSize = 13;\n        this.axisHandles.x.append('text')\n          .attr('transform', 'translate(' + [this.scale.x(this.extents[0][1]), 0] + ')')\n          .attr('dx', labelSize/2).attr('dy', labelSize/2)\n          .attr('text-anchor', 'start')\n          .attr('font-size', labelSize).style('fill', '#000')\n          .text(label);\n      }\n    };\n    return this;\n  }\n  yAxis(label='y', pos = 'left') {\n    let translateStr;\n    if (pos === 'left') {\n      translateStr = () => [this.scale.x(this.extents[0][0]), 0];\n      this.axis.y = d3.axisLeft();\n    } else if (pos === 'right') {\n      translateStr = () => [this.scale.x(this.extents[0][1]), 0];\n      this.axis.y = d3.axisRight();\n    } else {\n      // eslint-disable-next-line\n      console.log(`Unknown axis position: ${pos}`);\n      return this;\n    }\n    this.drawHooks.yAxis = () => {\n      this.axis.y.scale(this.scale.y);\n      this.axisHandles.y = this.group.append('g')\n        .attr('transform', 'translate(' + translateStr() + ')')\n        .call(this.axis.y);\n      if (label){\n        const labelSize = 13;\n        this.axisHandles.y.append('text')\n          .attr('transform', 'translate(' + [0, this.scale.y(this.extents[1][1])] + ')')\n          .attr('dx', 0).attr('dy', -labelSize/2)\n          .attr('text-anchor', 'middle')\n          .attr('font-size', labelSize).style('fill', '#000')\n          .text(label);\n      }\n    };\n    return this;\n  }\n  /*\n  * major api of drawing a line,\n  * this method will return a handle of <path> selector for users to further set styles\n  */\n  line(data, xfn = (d) => d[0], yfn = (d) => d[1]) {\n    // console.log(data);\n    this.updateScale(data, xfn, yfn);\n    let lineArtist;\n    if (this.artists.lines) {\n      lineArtist = this.artists.lines;\n    } else {\n      const self = this;\n      lineArtist = new LineArtist(self);\n      this.artists.lines = lineArtist;\n    }\n    const handle = lineArtist.plot(data, xfn, yfn);\n    return handle;\n  }\n  /*\n  * major api of filling an area surrounded by 2 lines,\n  * this method will return a handle of <path> selector for users to further set styles\n  */\n  area(data, xfn, y0fn, y1fn, color) {\n    this.updateScaleX(data, xfn)\n      .updateScaleY(data, y0fn)\n      .updateScaleY(data, y1fn);\n    let artist;\n    if (this.artists.areas) {\n      artist = this.artists.areas;\n    } else {\n      const self = this;\n      artist = new AreaArtist(self);\n      this.artists.areas = artist;\n    }\n    const handle = artist.plot(data, xfn, y0fn, y1fn, color);\n    return handle;\n  }\n  /*\n  * major api of drawing box plot,\n  * this method will return a handle of <g> selector for users to further set styles\n  */\n  box(data, width, xfn, y0fn, r1fn, r2fn, params={}) {\n    this.updateScaleX(data, xfn)\n      .updateScaleY(data, (d, i) => r2fn(d, i)[0])\n      .updateScaleY(data, (d, i) => r2fn(d, i)[1]);\n    let artist;\n    if (this.artists.boxes) {\n      artist = this.artists.boxes;\n    } else {\n      const self = this;\n      artist = new BoxArtist(self);\n      this.artists.boxes = artist;\n    }\n    const handle = artist.plot(data, width, xfn, y0fn, r1fn, r2fn, params={});\n    return handle;\n  }\n  // after all settings, call this methods for rendering\n  draw() {\n    this.transform();\n    // this.drawHooks.shapes.forEach((hook) => hook());\n    Object.keys(this.artists).forEach((name) => this.artists[name].draw());\n    this.charts.forEach((c) => c.draw());\n    this.drawAxis();\n  }\n  clean() {\n    this.charts.forEach((c) => c.clean());\n    Object.keys(this.artists).forEach((name) => this.artists[name].clean());\n    Object.keys(this.axisHandles).forEach((name) => {\n      if (this.axisHandles[name]) {\n        this.axisHandles[name].remove();\n        this.axisHandles[name] = null;\n      }\n    })\n    this.marginAll = [0, 0, 0, 0];\n    this.rotateFlag = false;\n    this.scale = { x: null, y: null };\n    this.extents = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    // this.axis = { x: null, y: null };\n    this.drawHooks = { xAxis: null, yAxis: null};\n    this.charts = [];\n    return this;\n  }\n}\n\nexport class LineArtist extends Artist {\n  constructor(chart) {\n    super(chart);\n    this.data = [];\n    this.lines = [];\n  }\n  plot(data, xfn = (d) => d[0], yfn = (d) => d[1], color = defaultColorScheme(this.handles.length)) {\n    const handle = this.group.append('path');\n    const line = d3.line()\n      .x((d, i) => this.scale.x(xfn(d, i)))\n      .y((d, i) => this.scale.y(yfn(d, i)));\n    const drawHook = () => {\n      handle.datum(data)\n        .attr('d', line)\n        .attr('fill', 'none')\n        // .attr('stroke', color)\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-linecap', 'round');\n      // handle.attr('stroke', color);\n    };\n    this.data.push(data);\n    this.handles.push(handle);\n    this.lines.push(line);\n    this.drawHooks.push(drawHook);\n    return handle;\n  }\n}\n\nexport class AreaArtist extends Artist {\n  constructor(chart) {\n    super(chart);\n    this.data = [];\n    this.areas = [];\n  }\n  plot(data, xfn, y0fn, y1fn, color = defaultColorScheme(this.handles.length)) {\n    const handle = this.group.append('path');\n    const area = d3.area()\n        .x((d, i) => this.scale.x(xfn(d, i)))\n        .y0((d, i) => this.scale.y(y0fn(d, i)))\n        .y1((d, i) => this.scale.y(y1fn(d, i)));\n    const drawHook = () => {\n      handle.datum(data);\n      handle\n        // .attr('fill', color)\n        .attr('d', area);\n    };\n    this.data.push(data);\n    this.handles.push(handle);\n    this.areas.push(area);\n    this.drawHooks.push(drawHook);\n    return handle;\n  }\n}\n\nexport class BoxArtist extends Artist{\n  constructor(chart) {\n    super(chart);\n    this.data = [];\n    // this. = [];\n  }\n  plot(data, width, xfn, y0fn, r1fn, r2fn, params){\n    const handle = this.group.append('g');\n    const drawHook = () => {\n      data.forEach((d, i) => {\n        const xShift = this.scale.x(xfn(d, i));\n        BoxArtist.drawBox(\n          handle,\n          [xShift - (width / 2), xShift + (width / 2)],\n          this.scale.y(y0fn(d, i)),\n          r1fn(d, i).map((v) => this.scale.y(v)),\n          r2fn(d, i).map((v) => this.scale.y(v)),\n        );\n      });\n    };\n    this.handles.push(handle);\n    this.drawHooks.push(drawHook);\n    this.data.push(data);\n    return handle;\n  }\n  static drawBox(el, xs, mean, range1, range2) {\n    const box = el.append('g');\n    // const x = width / 2;\n    // console.log(range1);\n    const mid = (xs[0] + xs[1]) / 2;\n    box.append('rect')\n      .attr('x', xs[0])\n      .attr('y', Math.min(range1[0], range1[1]))\n      .attr('width', xs[1] - xs[0])\n      .attr('height', Math.abs(range1[1] - range1[0]));\n    box.append('line')\n      .attr('x1', xs[0])\n      .attr('y1', mean)\n      .attr('x2', xs[1])\n      .attr('y2', mean)\n      .attr('stroke-width', 0.5);\n    for (let i = 0; i < 2; i += 1) {\n      box.append('line')\n        .attr('x1', mid)\n        .attr('y1', range1[i])\n        .attr('x2', mid)\n        .attr('y2', range2[i])\n        .attr('stroke-width', 0.5);\n      box.append('line')\n        .attr('x1', xs[0])\n        .attr('y1', range2[i])\n        .attr('x2', xs[1])\n        .attr('y2', range2[i])\n        .attr('stroke-width', 0.5);\n    }\n    return box;\n  }\n}\n\nexport default {\n  // LineArtist,\n  Chart,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/layout/chart.js","import * as d3 from 'd3';\nimport { SentenceRecord, CoClusterProcessor } from '../preprocess'\n\nconst layoutParams = {\n  nodeIntervalScale: 1.5,\n  color: d3.scaleOrdinal(d3.schemeCategory20),\n  radiusScale: 1.5,\n  widthScale: 1.5,\n  avgValueRange: [-0.5, 0.5],\n  rulerScale: 0.2,\n  markerWidthScale: 0.6,\n  markerHeightScale: 0.3,\n  wordSize: 12,\n  labelSize: 10,\n  negColor: '#09adff',\n  posColor: '#ff5b09',\n};\n\n// example usage:\n// see TestView.vue: draw3();\n\nclass SentenceLayout{\n  constructor(selector, compare = false, params = layoutParams){\n    this.group = selector;\n    this._size = [50, 600];\n    this._rectSize = [20, 50];\n    this._sentence;\n    this._coCluster;\n    this.params = params;\n    // this.handles = [];\n    this._dataList = [];\n    this.type = 'bar2';\n    this.compare = compare;\n    this._mouseoverCallback = function(_) {console.log(_)};\n    this._barMouseoverCallback = function(_) {console.log(_)};\n    this.transform();\n    // each data in data list has 3 handles after drawing:\n    // el: the group holding all elements of a word\n    // els: 3 groups, each holds a pie chart\n    // handles: 3 selector, each holds all paths in a pie chart\n  }\n  mouseoverCallback(func) {\n    return arguments.length ? (this._mouseoverCallback = func, this) : this._mouseoverCallback;\n  }\n  barMouseoverCallback(func) {\n    return arguments.length ? (this._barMouseoverCallback = func, this) : this._barMouseoverCallback;\n  }\n  size(size){\n    return arguments.length ? (this._size = size, this) : this._size;\n  }\n  transform(transformStr = '') {\n    if (this.compare)\n      transformStr += 'scale(-1, 1) translate(' + [-this.nodeWidth, 0] + ')'; // + transformStr;\n    console.log(transformStr);\n    this.group\n      .transition()\n      .duration(200)\n      .attr('transform', transformStr);\n    return this;\n  }\n  get radius() {\n    if (!this._radius){\n      const radius = this._size[0] / (this.params.widthScale*2);\n      if (this._sentence && !this._radius){\n        const radius2 = this._size[1] /\n          (this.params.nodeIntervalScale * (this._sentence.length - 1) + this.params.radiusScale * 2 * this._sentence.length);\n        // const radius2 = (this._size[1] - (this.sentence.length - 1) * this.params.nodeIntervalScale * radius) /\n        //   (this.sentence.length * this.params.radiusScale * 2);\n        // console.log(this.sentence.length)\n        // console.log(radius2);\n        this._radius = radius < radius2 ? radius : radius2;\n      } else {\n        return radius;\n      }\n    }\n    return this._radius;\n  }\n  get nodeHeight() {\n    return this.params.radiusScale * 2 * this.radius;\n  }\n  get nodeWidth() {\n    return this.params.widthScale * 2 * this.radius;\n  }\n  get nodeInterval() {\n    return this.params.nodeIntervalScale * this.radius;\n  }\n  get dataList() {\n    return this._dataList;\n  }\n  // set the sentence data used\n  sentence(sentence) {\n    return arguments.length ? (this._sentence = sentence, this) : this._sentence;\n  }\n  // set the coCluster data used\n  coCluster(coCluster) {\n    return arguments.length ? (this._coCluster = coCluster, this) : this._coCluster;\n  }\n  // set the words that used\n  words(words) {\n    return arguments.length ? (this._words = words, this) : this._words;\n  }\n  // start to layout words\n  draw(type=this.type, ) {\n    this.type = type;\n    // prepare\n    this.prepareDraw(type);\n\n    // draw\n    if (type === 'pie') {\n      this._dataList.forEach((data, i) => {\n        const pos = this.getWordPos(i);\n        const g = this.group.append('g');\n        this.drawWord(g, data, i)\n          .attr('transform', 'translate(' + pos + ')');\n      });\n    } else {\n      this._dataList.forEach((data, i) => {\n        const pos = this.getWordPos(i);\n        if(i > 0){\n          const gl = this.group.append('g');\n          this.drawConnection(gl, data, i)\n            .attr('transform', 'translate(' + [pos[0], pos[1] - this.nodeInterval] + ')')\n        }\n        const g = this.group.append('g');\n        this.drawWord(g, data, i)\n          .attr('transform', 'translate(' + pos + ')');\n      });\n    }\n    // const rectGroup = this.group.append('g');\n    // this.drawWordRect(rectGroup, this._dataList, this._rectSize, this.extentChangeCallback())\n    //   .attr('transform', 'translate(-50, 50)');\n\n    return this;\n  }\n\n  drawWordRect(g, data, rectSize, func) {\n    data.forEach((d, i) => {\n      g.append('text')\n        .text(d.word)\n        .style('text-anchor', 'middle')\n        .attr('transform', 'rotate(90)translate(' + [rectSize[1] * i + rectSize[1] / 2, -rectSize[0]/4] + ')');\n\n      g.append('rect')\n      .attr('x', 0)\n      .attr('y', i * rectSize[1])\n      .attr('width', rectSize[0])\n      .attr('height', rectSize[1])\n      .attr('fill', 'lightgray')\n      .attr('stroke-width', 2)\n      .attr('stroke', 'blue')\n      .attr('opacity', 0.2);\n    });\n    g.append('g').call(\n      d3.brushY()\n        .extent([[0, 0], [rectSize[0], rectSize[1] * data.length]])\n        .on('end', function() {\n          if (!d3.event.sourceEvent) return;\n          if (!d3.event.selection) return;\n          let extent = d3.event.selection;\n          extent[0] = Math.round(extent[0] / rectSize[1]) * rectSize[1];\n          extent[1] = Math.round(extent[1] / rectSize[1]) * rectSize[1];\n          d3.select(this).transition().call(d3.event.target.move, extent);\n          func([Math.round(extent[0] / rectSize[1]), Math.round(extent[1] / rectSize[1])])\n          // console.log(d3.event.selection);\n        })\n    );\n\n    return g;\n  }\n\n  prepareDraw(type = this.type) {\n    if (this._dataList.length !== this._sentence.length || this._dataList[0].data[0].current.length != this._coCluster.labels.length)\n      this._dataList = this.preprocess(this._sentence, this._coCluster, this._words);\n    else\n      this.clean();\n    // adaptive height\n    let maxValue = 0.1;\n    this.dataList.forEach((data) => {\n      data.data.forEach((clst) => {\n        const clstMaxP =  clst.currents[0] - Math.min(clst.updateds[0], 0);\n        const clstMaxN =  clst.currents[1] - Math.min(clst.updateds[1], 0);\n        const clstMax = Math.max(clstMaxP/clst.size, Math.abs(clstMaxN/clst.size));\n        maxValue = maxValue < clstMax ? clstMax : maxValue;\n      })\n    });\n    maxValue = Math.ceil(maxValue * 11) / 10;\n    this.params.avgValueRange = [-maxValue, maxValue];\n    if (type === 'bar'){\n      this.scaleHeight = d3.scaleLinear()\n        .range([-this.nodeHeight/2, this.nodeHeight/2])\n        .domain(this.params.avgValueRange);\n      let stateSize = 0;\n      for( let j = 0; j < this._dataList[0].data.length; j++) stateSize += this._dataList[0].data[j].size;\n      this.scaleWidth = d3.scaleLinear()\n      .range([0, this.nodeWidth])\n      .domain([0, stateSize]);\n    }\n    else if (type === 'bar2')\n      this.scaleHeight = d3.scaleLinear()\n        .range([-this.nodeHeight/2, this.nodeHeight/2])\n        .domain(this.params.avgValueRange);\n    this.drawWord = type === 'pie' ? this.drawOneWordPie : (type === 'bar' ? this.drawOneWordBar : this.drawOneWordBar2);\n    this.drawConnection = type === 'bar' ? this.drawOneConnection : (type === 'bar2' ? this.drawOneConnection2 : null);\n\n  }\n  // remove all the elements, all the preprocessed data are kept\n  clean() {\n    this._dataList.forEach(data => {\n      if (data.el)\n        data.el\n          .transition()\n          .duration(300)\n          .style('opacity', 0)\n          .remove();\n      // data.el = null;\n      // data.els = null;\n      // data.handles = null;\n    });\n  }\n  destroy() {\n    this.clean();\n    this._dataList = [];\n  }\n  // get the position [x, y] of a word regarding this.group\n  getWordPos(i){\n    // if (this.type === 'bar')\n    //   return [this._size[0] / 2, this.radius * (this.params.radiusScale * (1 + 2 * i)) + i * this.nodeInterval];\n    // else\n      return [0, (this.nodeHeight + this.nodeInterval) * i]\n  }\n  // draw one word using bar chart\n  // data: {word: 'he', data: Array}\n  drawOneWordBar(el, data, i) {\n    const height = this.nodeHeight;\n    const width = this.nodeWidth;\n    const color = this.params.color;\n    console.log(data);\n    const scaleHeight = this.scaleHeight;\n    const scaleWidth = this.scaleWidth;\n\n    const bg = el.append('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('stroke', 'gray')\n      .attr('stroke-width', 0.5)\n      .attr('fill', 'none');\n\n    const gSelector = el.selectAll('g')\n      .data(data.data);\n    const g1 = gSelector.enter()\n      .append('g');\n    const cur = g1.append('rect')\n      .attr('x', (d) => scaleWidth(d.accumulate))\n      .attr('y', (d) => height - scaleHeight(d.prev / d.size))\n      .attr('width', (d) => scaleWidth(d.size))\n      .attr('height', (d) => scaleHeight(d.prev / d.size))\n      .attr('fill', (d, j) => color(j))\n    g1.style('fill-opacity', 0.4)\n      .style('stroke', 'gray')\n      // .style('stroke-opacity', 0.5)\n      .style('stroke-width', 0.5)\n\n    const g2 = gSelector.enter()\n      .append('g');\n    const updated = g2.append('rect')\n      .attr('x', (d) => scaleWidth(d.accumulate))\n      .attr('y', (d) => height - (d.updated * d.major < 0 ? scaleHeight(d.prev / d.size) : (scaleHeight((d.prev + d.updated * d.major) / d.size))))\n      .attr('width', (d) => scaleWidth(d.size))\n      .attr('height', (d) => scaleHeight(Math.abs(d.updated) / d.size))\n      .attr('fill', (d, j) => d.updated * d.major < 0 ? 'white' : color(j));\n    g2.style('fill-opacity', 0.8)\n      .style('stroke', 'gray')\n      .style('stroke-width', 0.5)\n\n    data.el = el; // bind group\n    return el;\n  }\n\n  drawOneWordBar2(el, data, t, paintColor = false) {\n    const self = this;\n    const height = this.nodeHeight;\n    const width = this.nodeWidth;\n    const color = this.params.color;\n    // console.log(data);\n    const scaleHeight = this.scaleHeight;\n    const unitWidth = this.nodeWidth / data.data.length;\n    const posColor = this.params.posColor;\n    const negColor = this.params.negColor;\n\n    el.on('mouseover', function() {\n        // el.attr('class')\n        self._mouseoverCallback(data, t, true)\n      })\n      .on('mouseleave', function() {\n        self._mouseoverCallback(data, t, false);\n      })\n      .on('click', function() {\n        self._mouseoverCallback(data, t, false, true);\n      });\n    // bounding box\n    const bg = el.append('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1.0)\n      .attr('stroke-opacity', 0.3)\n      .attr('fill', 'white')\n      .attr('fill-opacity', 0);\n\n    const gSelector = el.selectAll('g')\n      .data(data.data);\n    const gCurrent = gSelector.enter()\n      .append('g')\n      .on('mouseenter' , function(d, i) {self._barMouseoverCallback(i, true); })\n      .on('mouseleave' , function(d, i) {self._barMouseoverCallback(i, false); });\n    const cur = gCurrent.append('rect')\n      .attr('x', (d, i) => unitWidth*i)\n      .attr('y', (d) => height/2 - scaleHeight(d.currents[0] / d.size))\n      .attr('width', (d) => unitWidth)\n      .attr('height', (d) => scaleHeight((d.currents[0]-d.currents[1]) / d.size))\n      .attr('fill', (d, j) => color(j))\n    gCurrent.style('fill-opacity', 0.4)\n      // .style('stroke-opacity', 0.5)\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1.0)\n      .attr('stroke-opacity', 0.5);\n\n    gCurrent.append('path')\n      .attr('d', (d, i) => 'M ' + (unitWidth*i) + ' ' + (height/2 - scaleHeight(d.currents[0] / d.size))\n        + ' H ' + (unitWidth * (i+1) ))\n      .attr('stroke-width', 2);\n\n    gCurrent.append('path')\n      .attr('d', (d, i) => 'M ' + (unitWidth*i) + ' ' + (height/2 - scaleHeight(d.currents[1] / d.size))\n        + ' H ' + (unitWidth * (i+1) ))\n      .attr('stroke-width', 2);\n\n    const gUpdated1 = gSelector.enter()\n      .append('g');\n    const updated1 = gUpdated1.append('rect')\n      .attr('x', (d, i) => unitWidth * i)\n      .attr('y', (d) => height/2 + scaleHeight(-d.currents[1] / d.size))\n      .attr('width', (d) => unitWidth)\n      .attr('height', (d) => scaleHeight(Math.abs(d.updateds[1]) / d.size))\n      .attr('transform', (d) => d.updateds[1] < 0 ? ('translate(' + [0, -scaleHeight(Math.abs(d.updateds[1]) / d.size) ] + ')') : '')\n      .style('fill-opacity', 0.4);\n    if (paintColor) {\n      updated1.attr('fill', (d, j) => {\n        return d.updateds[1] > 0 ? 'none' : color(j);\n      });\n    } else {\n      updated1.attr('fill', (d, i) => {\n        return d.updateds[1] > 0 ? posColor : negColor;\n      });\n      cur.attr('fill', (d, j) => '#bbb');\n    }\n    gUpdated1 //.style('fill-opacity', 0.8)\n      .style('stroke-width', 0.5)\n      .style('stroke', 'none');\n\n\n    const gUpdated2 = gSelector.enter()\n      .append('g');\n    const updated2 = gUpdated2.append('rect')\n      .attr('x', (d, i) => unitWidth * i)\n      .attr('y', (d) => height/2 - scaleHeight(d.currents[0] / d.size))\n      .attr('width', (d) => unitWidth)\n      .attr('height', (d) => scaleHeight(Math.abs(d.updateds[0]) / d.size))\n      .attr('transform', (d) => d.updateds[0] < 0 ? ('translate(' + [0, -scaleHeight(Math.abs(d.updateds[0]) / d.size) ] + ')') : '')\n      // .attr('fill', (d, j) => d.updateds[0] < 0 ? 'none' : color(j))\n      .style('stroke-opacity', (d, j) => d.updateds[1] < 0 ? 1.0 : 1.0);\n    if (paintColor) {\n      updated2.attr('fill', (d, j) => {\n        return d.updateds[0] < 0 ? 'none' : color(j);\n      });\n    } else {\n      updated2.attr('fill', (d, i) => {\n        return d.updateds[0] < 0 ? negColor : posColor;\n      });\n    }\n    gUpdated2 //.style('fill-opacity', 0.8)\n      .style('stroke-width', 0.5)\n      .style('stroke', 'none')\n      .style('fill-opacity', 0.4);\n\n\n    el.append('path').attr('d', 'M0 ' + height/2 + ' H ' + width)\n      .style('stroke', 'black').style('stroke-width', 0.5);\n\n    // append labels\n    const fontSize = this.params.wordSize;\n    const labelSize = this.params.labelSize;\n    const valRange = [this.params.avgValueRange[1], this.params.avgValueRange[0]];\n    const wordX = this.compare ? (4 + width) : (-2-fontSize);\n    el.selectAll('text')\n      .data(valRange).enter()\n      .append('text')\n      .attr('x', this.compare ? (width + 2) : -2)\n      .attr('y', (d, i) => i * (height - 4) + 5)\n      .attr('text-anchor', this.compare ? 'start' : 'end')\n      .attr('font-size', labelSize)\n      .text((d) => d);\n\n    el.append('text')\n      .attr('x', wordX)\n      .attr('y', (height/2))\n      .attr('text-anchor', 'middle')\n      .attr('transform', 'rotate(' + [90, wordX, (height/2)] + ')')\n      .attr('font-size', fontSize)\n      .text(data.word);\n\n    cur.each(function(d) {\n      if(d.els) d.els[0] = this;\n      else d.els = [this];\n    });\n    updated1.each(function(d) { d.els[1] = this; });\n    updated2.each(function(d) { d.els[2] = this; });\n    data.els = [cur, updated1, updated2];\n    data.el = el; // bind group\n    data.bg = bg;\n    return el;\n  }\n\n  drawOneConnection2(el, data, t, paintColor=false) {\n    const height = this.nodeInterval;\n    // const width = this.nodeWidth;\n    const color = paintColor ? this.params.color : (i) => {\n      return data.data[i].currents[0] + data.data[i].currents[1] > 0 ? this.params.posColor : this.params.negColor;\n    };\n    // console.log(data);\n    // const scaleHeight = this.scaleHeight;\n    const unitWidth = this.nodeWidth / data.data.length;\n    const rulerWidth = this.params.rulerScale * unitWidth;\n    const markerWidth = this.params.markerWidthScale * unitWidth;\n    const markerHeight = this.params.markerHeightScale * unitWidth;\n    const gs = el.selectAll('g')\n      .data(data.data).enter()\n      .append('g');\n    const rulers1 = gs.append('rect')\n      .attr('x', (d, i) => unitWidth * (i+0.5) - rulerWidth/2).attr('y', 0)\n      .attr('width', rulerWidth).attr('height', (d) => (height-markerHeight) * d.keptRate)\n      .style('stroke', 'none').style('fill', (d, i) => color(i)).style('fill-opacity', 0.5);\n\n    const rulers2 = gs.append('rect')\n      .attr('x', (d, i) => unitWidth * (i+0.5) - rulerWidth/2).attr('y', (d) => (height-markerHeight) * d.keptRate)\n      .attr('width', rulerWidth).attr('height', (d) => height - (height-markerHeight) * d.keptRate)\n      .style('stroke', 'none').style('fill', 'gray').style('fill-opacity', 0.5);\n\n    // const markers = gs.append('rect')\n    //   .attr('x', (d, i) => unitWidth * (i+0.5) - markerWidth/2).attr('y', (d) => height * (d.keptRate))\n    //   .attr('width', markerWidth).attr('height', markerHeight);\n\n    const markers = gs.append('path')\n      .attr('d', (d, i) => {\n        return 'M' + (unitWidth * (i+0.5) - markerWidth/2) + ' ' + ((height-markerHeight) * d.keptRate)\n          + ' ' + 'H' + ' ' + (unitWidth * (i+0.5) + markerWidth/2)\n          + ' ' + 'L' + ' ' + (unitWidth * (i+0.5)) + ' ' + ((height-markerHeight) * d.keptRate + markerHeight);\n      });\n\n    return el;\n  }\n\n  drawOneConnection(el, data, i) {\n    const height = this.nodeInterval;\n    const width = this.nodeWidth;\n    const color = this.params.color;\n    console.log(data);\n    // const scaleHeight = this.scaleHeight;\n    const scaleWidth = this.scaleWidth;\n    const calPoints = (clst) => {\n      const arr = new Array(4);\n      const mar = (1 - clst.keptRate) * clst.size / 2;\n      arr[0] = [scaleWidth(clst.accumulate), 0];\n      arr[1] = [scaleWidth(clst.accumulate + clst.size), 0];\n      arr[2] = [scaleWidth(clst.accumulate + clst.size - mar), height];\n      arr[3] = [scaleWidth(clst.accumulate + mar), height];\n      return arr[0] + ' ' + arr[1] + ' ' + arr[2] + ' ' + arr[3];\n    }\n    el.selectAll('polygon')\n      .data(data.data).enter()\n      .append('polygon')\n      .attr('points', (d) => calPoints(d))\n      .attr('fill', (d, j) => color(j))\n      .attr('fill-opacity', 0.6);\n    return el;\n  }\n  // draw one word\n  drawOneWordPie(el, data, i) {\n    const radius = this.radius;\n    const color = this.params.color;\n    console.log(data);\n    let arc1 = d3.arc()\n      .innerRadius(1)\n      .outerRadius((d) => {\n        // console.log(d);\n        return radius * d.data.keptRate;\n      });\n\n    let arc2 = d3.arc()\n      .innerRadius((d) => radius * d.data.keptRate)\n      .outerRadius(radius);\n\n    let arc3 = d3.arc()\n      .innerRadius((d) => { return radius * (d.data.updatedRate < 0 ? (1 + d.data.updatedRate) : 1); })\n      .outerRadius((d) => { return radius * (d.data.updatedRate < 0 ? 1 : (1 + d.data.updatedRate)); });\n\n    let arcs = [arc1, arc3, arc2];\n    let pie = d3.pie()\n      .sort(null)\n      .value((d) => (d.prev ? d.prev : d.current));\n\n    const gs = new Array(3);\n    const handles = new Array(3);\n    for (let j = 0; j < 3; j++){\n      gs[j] = el.append('g');\n      if (i === 0 && j === 0)\n        continue;\n      handles[j] = gs[j].selectAll(\".arc\")\n        .append('g')\n        .classed('arc', true)\n        .data(pie(data.data)).enter()\n        .append(\"path\")\n        .attr(\"d\", arcs[j])\n        .attr('stroke', 'gray')\n        .attr('stroke-width', 0.3)\n        .attr('fill', (d, k) => (j === 2 ? 'gray' : color(k)));\n    };\n    handles[1].attr('fill-opacity', (d, k) => (data.data[k].updatedRate < 0 ? 0.3 : 0.7))\n    gs[0].attr('fill-opacity', 0.7);\n    // gs[1].attr('fill-opacity', 0.6);\n    gs[2].attr('fill-opacity', 0.0);\n\n    data.els = gs; // 3 groups, each group corresponds to each ring of pie chart\n    data.handles = handles; // 3 handles, each handle is a selector of paths of the pie chart\n    data.el = el; // bind group\n    return el;\n  }\n  preprocess(sentence, coCluster, words) {\n    const len = sentence.length;\n    const clusterNum = coCluster.labels.length;\n    const stateNum = sentence[0].length;\n    const clustersSize = coCluster.colClusters.map((clst) => {\n      return clst.length;\n    });\n    const accClustersSize = new Float32Array(clustersSize.length);\n    for (let i = 1; i < accClustersSize.length; i++)\n      accClustersSize[i] += accClustersSize[i-1] + clustersSize[i-1];\n    // const info\n    // let infoCurrent\n    const currentStates = sentence.map((word) => {\n      return coCluster.colClusters.map((cluster) => {\n        return cluster.map((idx) => {\n          return word[idx];\n        });\n      });\n    });\n\n    const updatedData = sentence.map((word, t)=>{\n      if (t === 0) return word;\n      return word.map((v, j) => {\n        return v - sentence[t-1][j];\n      });\n    })\n\n    const infoPositive = new Array(len);\n    const infoNegative = new Array(len);\n    const infoCurrent = new Array(len);\n    for (let t = 0; t < len; t++) {\n      infoPositive[t] = new Float32Array(clusterNum);\n      infoNegative[t] = new Float32Array(clusterNum);\n      infoCurrent[t] = new Float32Array(clusterNum);\n      for (let i = 0; i < clusterNum; i++) {\n        for (let j = 0; j < clustersSize[i]; j++) {\n          if (currentStates[t][i][j] > 0) {\n            infoPositive[t][i] += currentStates[t][i][j];\n          } else {\n            infoNegative[t][i] += currentStates[t][i][j];\n          }\n          infoCurrent[t][i] += Math.abs(currentStates[t][i][j]);\n        }\n      }\n    }\n\n    const infoPrevious = [new Float32Array(clusterNum), ...infoCurrent.slice(0, len-1)];\n    const h_tij = [currentStates[0].map((clst) => new Float32Array(clst.length)), ...currentStates];\n    // console.log(h_tij);\n    const infoKept = new Array(len);\n    const keptPositive = new Array(len);\n    const keptNegative = new Array(len);\n    for (let t = 0; t < len; t++) {\n      infoKept[t] = new Float32Array(clusterNum);\n      keptPositive[t] = new Float32Array(clusterNum);\n      keptNegative[t] = new Float32Array(clusterNum);\n      for (let i = 0; i < clusterNum; i++) {\n        for (let j = 0; j < clustersSize[i]; j++){\n          const prev = h_tij[t][i][j];\n          const cur = h_tij[t+1][i][j];\n          const ratio = cur / prev;\n          infoKept[t][i] += Math.abs(prev) * (ratio < 0 ? 0 : 1 < ratio ? 1 : ratio);\n          keptPositive[t][i] += prev > 0 ? (cur > 0 ? (cur > prev ? prev : cur) : 0) : 0;\n          keptNegative[t][i] += prev < 0 ? (cur < 0 ? (cur < prev ? prev : cur) : 0) : 0;\n        }\n      }\n    }\n\n    const dataList = words.map((word, t) => {\n      const data = Array.from(infoCurrent[t], (current, i) => {\n        const prev = infoPrevious[t][i];\n        // const kept = infoKept[t][i];\n        const keptP = keptPositive[t][i];\n        const keptN = keptNegative[t][i];\n        const kept = keptP - keptN;\n        const positive = infoPositive[t][i];\n        const negative = infoNegative[t][i];\n        const prevPositive = t > 0 ? infoPositive[t-1][i] : 0;\n        const prevNegative = t > 0 ? infoNegative[t-1][i] : 0;\n        const updatedPositive = positive - prevPositive;\n        const updatedNegative = negative - prevNegative;\n        const updated = updatedPositive + updatedNegative;\n        const size = clustersSize[i];\n        return {\n          currents: [positive, negative],\n          current: current,\n          prev: prev,\n          updatedRate: prev === 0 ? 0 : updated / prev,\n          keptRate: prev === 0 ? 0 : kept / prev,\n          updated: updated,\n          updateds: [updatedPositive, updatedNegative],\n          kepts: [keptP, keptN],\n          kept: kept,\n          size: clustersSize[i],\n          accumulate: accClustersSize[i],\n          major: Math.sign(positive + negative),\n        };\n      });\n      return {\n        word: word,\n        data: data,\n        response: updatedData[t],\n      };\n    });\n    return dataList;\n  }\n  get strengthByCluster() {\n    if (!this._sentence || !this._coCluster) return undefined;\n    if (this._dataList.length !== this._sentence.length || this._dataList[0].data[0].current.length != this._coCluster.labels.length)\n      this._dataList = this.preprocess(this._sentence, this._coCluster, this._words);\n    if (!this._strengthByCluster) {\n      this._strengthByCluster = this._dataList.map((word, i) => {\n        return word.data.map((clst, j) => {\n          return clst.size === 0 ? 0 : clst.updated / clst.size;\n        });\n      });\n    }\n    return this._strengthByCluster;\n  }\n};\n\nfunction sentence(selector, compare = false){\n  return new SentenceLayout(selector, compare);\n};\n\nexport {\n  sentence,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/layout/sentence.js","import dataService from './services/dataService';\n\nexport class CoClusterProcessor {\n  constructor(modelName, stateName, nCluster = 10, params = { top_k: 300, mode: 'raw', layer: -1 }, sortBy = 'col') {\n    this.rawData;\n    this._rowClusters;\n    this._colClusters;\n    this._colSizes;\n    this._rolSizes;\n    this._aggregation_info = null;\n    this.modelName = modelName;\n    this.stateName = stateName;\n    this.nCluster = nCluster;\n    this.params = params;\n    this.sortBy = sortBy;\n  }\n  get correlation() {\n    return this.hasData ? this.rawData.data : undefined;\n  }\n  get labels() {\n    if (this.hasData && !this._labels) {\n      this._labels = [...new Set([...(this.colLabels), ...(this.rowLabels)])];\n      if (this.sortBy === 'col')\n        this._labels.sort((a, b) => this.colSizes[a] - this.colSizes[b]);\n      else if (this.sortBy === 'row')\n        this._labels.sort((a, b) => this.rowSizes[a] - this.rowSizes[b]);\n      // console.log(this._labels);\n    }\n    return this._labels;\n  }\n  get colSizes() {\n    if (this.hasData && !this._colSizes) {\n      const colSizes = new Int32Array(this.labels.length);\n      this.colLabels.forEach((label, i) => { colSizes[label] += 1; });\n      this._colSizes = colSizes;\n    }\n    return this._colSizes;\n  }\n  get rowSizes() {\n    if (this.hasData && !this._rowSizes) {\n      const rowSizes = new Int32Array(this.labels.length);\n      this.rowLabels.forEach((label, i) => { rowSizes[label] += 1; });\n      this._rowSizes = rowSizes;\n    }\n    return this._rowSizes;\n  }\n  get rowLabels() {\n    return this.hasData ? this.rawData.row : undefined;\n  }\n  get colLabels() {\n    return this.hasData ? this.rawData.col : undefined;\n  }\n  get ids() {\n    return this.hasData ? this.rawData.ids : undefined;\n  }\n\n  get words() {\n    return this.hasData ? this.rawData.words : undefined;\n  }\n\n  load() {\n    return dataService.getCoCluster(this.modelName, this.stateName, this.nCluster, this.params, (response) => {\n      if (response.status === 200) {\n        this.rawData = response.data;\n        console.log(this);\n      } else {\n        throw response;\n      }\n    });\n  }\n  get hasData() {\n    return Boolean(this.rawData);\n  }\n\n  strength_filter(strength, mode = this.params.mode) {\n    switch (mode) {\n      case 'positive':\n        return strength > 0 ? strength : 0;\n        break;\n      case 'negative':\n        return strength < 0 ? Math.abs(strength) : 0;\n        break;\n      case 'abs':\n        return Math.abs(strength);\n        break;\n      case 'raw':\n        return strength;\n        break;\n    }\n  }\n\n  Create2DArray(rowNum, colNum) {\n    return Array.from({ length: rowNum }, (v, i) => {\n      return new Float32Array(colNum); //Array.from({ length: colNum }, (v, i) => 0);\n    });\n  }\n\n  // sortData() {\n  //   if (this.hasData) {\n\n  //   }\n  // }\n  get aggregation_info() {\n    if (this.hasData && !this._aggregation_info) {\n      // const rowClusters = this.rowClusters;\n      // const colClusters = this.colClusters;\n      const row_cluster_2_col_cluster = this.Create2DArray(this.nCluster, this.nCluster);\n      const row_single_2_col_cluster = this.Create2DArray(this.rawData.row.length, this.nCluster);\n      const row_cluster_2_col_single = this.Create2DArray(this.nCluster, this.rawData.col.length);\n      const row_single_2_col_single = this.Create2DArray(this.rawData.row.length, this.rawData.col.length);\n      const cluster = [];\n      // calculate the correlation between clusters\n      this.correlation.forEach((strength_list, r_index) => {\n        strength_list.forEach((s, c_index) => {\n          let strength = this.strength_filter(s);\n          row_cluster_2_col_cluster[this.rawData.row[r_index]][this.rawData.col[c_index]] += strength / (this.rowSizes[this.rowLabels[r_index]] * this.colSizes[this.colLabels[c_index]]);\n          row_cluster_2_col_single[this.rawData.row[r_index]][c_index] += strength / this.rowSizes[this.rowLabels[r_index]];\n          row_single_2_col_cluster[r_index][this.rawData.col[c_index]] += strength / this.colSizes[this.colLabels[c_index]];\n          row_single_2_col_single[r_index][c_index] += strength;\n        });\n      });\n\n      this._aggregation_info = {\n        row_cluster_2_col_cluster: row_cluster_2_col_cluster,\n        row_single_2_col_cluster: row_single_2_col_cluster,\n        row_cluster_2_col_single: row_cluster_2_col_single,\n        row_single_2_col_single: row_single_2_col_single\n      };\n    }\n    return this._aggregation_info;\n  }\n\n  get cluster2cluster() {\n    if (this.hasData && !this._cluster2cluster) {\n      const row_cluster_2_col_cluster = this.Create2DArray(this.nCluster, this.nCluster);\n      this.correlation.forEach((strength_list, r_index) => {\n        strength_list.forEach((s, c_index) => {\n          let strength = this.strength_filter(s);\n          row_cluster_2_col_cluster[this.rawData.row[r_index]][this.rawData.col[c_index]] += strength;\n        });\n      });\n      this._cluster2cluster = row_cluster_2_col_cluster;\n    }\n    return this._cluster2cluster;\n  }\n\n  get single2cluster() {\n    if (this.hasData && !this._single2cluster) {\n      const row_single_2_col_cluster = this.Create2DArray(this.rawData.row.length, this.nCluster);\n      this.correlation.forEach((strength_list, r_index) => {\n        strength_list.forEach((s, c_index) => {\n          let strength = this.strength_filter(s);\n          row_single_2_col_cluster[r_index][this.rawData.col[c_index]] += strength;\n        });\n      });\n      this._single2cluster = row_single_2_col_cluster;\n    }\n    return this._cluster2cluster;\n  }\n\n  get cluster2single() {\n    if (this.hasData && !this._cluster2single) {\n      const row_cluster_2_col_single = this.Create2DArray(this.nCluster, this.rawData.col.length);\n      this.correlation.forEach((strength_list, r_index) => {\n        strength_list.forEach((s, c_index) => {\n          let strength = this.strength_filter(s);\n          row_single_2_col_single[r_index][c_index] += strength;\n        });\n      });\n      this._cluster2single = row_cluster_2_col_single;\n    }\n    return this._cluster2single;\n  }\n\n  get single2single() {\n    if (this.hasData && !this._single2single) {\n      const row_single_2_col_single = this.Create2DArray(this.rawData.row.length, this.rawData.col.length);\n      this.correlation.forEach((strength_list, r_index) => {\n        strength_list.forEach((s, c_index) => {\n          let strength = this.strength_filter(s);\n          row_single_2_col_cluster[r_index][this.rawData.col[c_index]] += strength;\n        });\n      });\n      this._single2cluster = row_single_2_col_cluster;\n    }\n    return this._cluster2cluster;\n  }\n\n  get rowClusters() {\n    if (this.hasData && !this._rowClusters) {\n      const rowClusters = Array.from({ length: this.labels.length }, (v, i) => []);\n      this.rawData.row.forEach((r, i) => {\n        // if (rowClusters[r] === undefined) {\n        //   rowClusters[r] = [];\n        // }\n        rowClusters[r].push(i);\n      });\n      this._rowClusters = new Array(this.labels.length);\n      this.labels.forEach((l, i) => this._rowClusters[i] = rowClusters[l]);\n    }\n    return this._rowClusters;\n  }\n  get colClusters() {\n    if (this.hasData && !this._colClusters) {\n      const colClusters = Array.from({ length: this.labels.length }, (v, i) => []);\n      this.rawData.col.forEach((c, i) => {\n        if (colClusters[c] === undefined) {\n          colClusters[c] = [];\n        }\n        colClusters[c].push(i);\n      });\n      this._colClusters = new Array(this.labels.length);\n      this.labels.forEach((l, i) => this._colClusters[i] = colClusters[l]);\n    }\n    return this._colClusters;\n  }\n\n  static identifier(processor) {\n    return `${processor.modelName}${processor.stateName}${processor.nCluster}${processor.params.layer+1}`;\n  }\n\n}\n\nexport class SentenceRecord {\n  constructor(inputs, modelName) {\n    this.inputs = inputs;\n    this.tokens;\n    this.records;\n    this.modelName = modelName;\n  }\n  evaluate(modelName = this.modelName) {\n    return dataService.getTextEvaluation(modelName, this.inputs, (response => {\n      if (response.status === 200) {\n        const data = response.data;\n        this.tokens = data.tokens[0]; // assume one sentence\n        this.records = data.records[0];\n      } else {\n        throw response;\n      }\n    }));\n  }\n  get states() {\n    if (this.records && !this._states) {\n      this._states = Object.keys(this.records[0]);\n    }\n    return this._states;\n  }\n  get layerNum() {\n    if (this.records && !this._layerNum) {\n      this._layerNum = this.records[0][this.states[0]].length;\n    }\n    return this._layerNum;\n  }\n  getRecords(stateName, layer = -1) {\n    if (this.records) {\n      layer = layer === -1 ? this.layerNum - 1 : layer;\n      console.log(layer);\n      return this.records.map((word) => {\n        return word[stateName][layer];\n      });\n    }\n    return undefined;\n  }\n}\n\nexport class StateStatistics {\n  constructor(modelName, stateName, layer = -1, top_k = 600) {\n    this.modelName = modelName;\n    this.stateName = stateName;\n    this.layer = layer;\n    this.top_k = top_k;\n    this.data;\n  }\n  load() {\n    if (this.data) return Promise.resolve(\"Already loaded\");\n    return dataService.getStateStatistics(this.modelName, this.stateName, this.layer, this.top_k, (response) => {\n      this.data = response.data;\n    });\n  }\n  get stateNum() {\n    return this.data ? this.data.mean[0].length : undefined;\n  }\n  get statesData() { // calculate statistics for each state unit\n    if (this.data && !this._statesData) {\n      this._statesData = this.data.mean[0].map((_, j) => {\n        const data = {\n          words: this.data.words,\n          // freqs: this.data.freqs,\n          mean: this.data.mean.map((m) => m[j]),\n          low1: this.data.low1.map((m) => m[j]),\n          low2: this.data.low2.map((m) => m[j]),\n          high1: this.data.high1.map((m) => m[j]),\n          high2: this.data.high2.map((m) => m[j]),\n          rank: this.data.sort_idx.map((indices) => {\n            return indices.findIndex((idx) => (idx === j));\n          }),\n        };\n        return data;\n      });\n    }\n    return this._statesData;\n  }\n  get word2Id() {\n    if (this.data && !this._word2Id) {\n      const word2Id = {}\n      this.data.words.forEach((word, i) => {\n        word2Id[word] = i;\n      })\n      this._word2Id = word2Id;\n    }\n    return this._word2Id;\n  }\n  get wordsData() {\n    if (this.data && !this._wordsData) {\n      this._wordsData = this.data.mean.map((mean, i) => {\n        const data = {\n          mean: mean,\n          range1: this.data.low1[i].map((low, j) => [low, this.data.high1[i][j]]),\n          range2: this.data.low2[i].map((low, j) => [low, this.data.high2[i][j]]),\n          word: this.data.words[i],\n          sort_idx: this.data.sort_idx[i],\n        };\n        return data;\n      });\n    }\n    return this._wordsData;\n  }\n  statOfWord(word) {\n    if (this.data) {\n      const id = this.word2Id[word];\n      return this.wordsData[id];\n    }\n    return undefined;\n  }\n}\n\nfunction memorize(fn) {\n  var cache = {};\n  return function () {\n    var key = arguments.length + Array.prototype.join.call(arguments, \",\");\n    if (key in cache) {\n      return cache[key];\n    } else {\n      return cache[key] = f.apply(this, arguments);\n    }\n  }\n}\n\nexport default {\n  CoClusterProcessor,\n  SentenceRecord,\n  StateStatistics,\n  memorize,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/preprocess.js","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-1ccedeee!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./InfoBoard.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./InfoBoard.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-1ccedeee!../../node_modules/vue-loader/lib/selector?type=template&index=0!./InfoBoard.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/InfoBoard.vue\n// module id = 278\n// module chunks = 1","\n/* styles */\nrequire(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../node_modules/vue-loader/lib/style-rewriter?id=data-v-25441132!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler?id=data-v-25441132!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 281\n// module chunks = 1","export const distances = {\n  euclidean: function(v1, v2) {\n    var total = 0;\n    for (var i = 0; i < v1.length; i++) {\n        total += Math.pow(v2[i] - v1[i], 2);\n    }\n    return Math.sqrt(total);\n  },\n  manhattan: function(v1, v2) {\n    var total = 0;\n    for (var i = 0; i < v1.length ; i++) {\n      total += Math.abs(v2[i] - v1[i]);\n    }\n    return total;\n  },\n  max: function(v1, v2) {\n    var max = 0;\n    for (var i = 0; i < v1.length; i++) {\n      max = Math.max(max , Math.abs(v2[i] - v1[i]));\n    }\n    return max;\n  }\n};\n\nfunction mean(points){\n  var meanPoint = new Float32Array(points[0].length);\n  for(let i = 0; i < meanPoint.length; i++){\n    let sum = 0;\n    for (let j = 0; j < points.length; j++) {\n      sum += points[j][i];\n    }\n    meanPoint[i] = sum / points.length;\n  }\n  return meanPoint;\n}\n\nexport class kMeans{\n  constructor(centroids, distance=\"euclidean\") {\n    this.centroids = centroids || [];\n    this.distance = distance;\n    if (typeof this.distance == \"string\") {\n        this.distance = distances[this.distance];\n    }\n  }\n\n  randomCentroids(points, k){\n    let centroids = points.slice(0); // copy\n    centroids.sort(function() {\n        return (Math.round(Math.random()) - 0.5);\n    });\n    return centroids.slice(0, k);\n  }\n\n  classify(point) {\n    let min = Infinity,\n      index = 0;\n\n    for (let i = 0; i < this.centroids.length; i++) {\n      let dist = this.distance(point, this.centroids[i]);\n      if (dist < min) {\n        min = dist;\n        index = i;\n      }\n    }\n\n    return index;\n  }\n\n  cluster(points, k, maxIter, snapshotFn) {\n    k = k || Math.max(2, Math.ceil(Math.sqrt(points.length / 2)));\n    maxIter = maxIter || 100;\n    this.centroids = this.randomCentroids(points, k);\n\n    var assignment = new Int32Array(points.length);\n    var clusters = new Array(k);\n\n    var iterations = 0;\n    var movement = true;\n    // let iter = 0;\n    while (movement && iterations < maxIter) {\n      // update point-to-centroid assignments\n      for (let i = 0; i < points.length; i++) {\n         assignment[i] = this.classify(points[i]);\n      }\n\n      // update location of each centroid\n      movement = false;\n      for (let j = 0; j < k; j++) { // iterate over k clusters\n        const assigned = points.filter((p, i) => { return assignment[i] == j;})\n\n        if (!assigned.length) {\n          continue;\n        }\n\n        const centroid = this.centroids[j];\n        const newCentroid = new mean(assigned);\n\n        for (let g = 0; g < centroid.length; g++) {\n          if (newCentroid[g] != centroid[g]) {\n            movement = true;\n          }\n        }\n\n        this.centroids[j] = newCentroid;\n        clusters[j] = assigned;\n      }\n      iterations++;\n      if (snapshotFn){\n        snapshotFn(clusters, iterations);\n      }\n    }\n    if (iterations >= maxIter){\n      console.log(\"Clustering algorithm early stopped.\");\n    }\n\n    return assignment;\n  }\n\n  toJSON() {\n    return JSON.stringify(this.centroids);\n  }\n\n  fromJSON() {\n    this.centroids = JSON.parse(json);\n    return this;\n  }\n}\n\nexport function kmeans(vectors, k, maxIter=100, distance=\"euclidean\", snapshotFn=null) {\n   return (new kMeans(distance)).cluster(vectors, k, maxIter, snapshotFn);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/cluster.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nimport ElementUI from 'element-ui';\nimport 'theme/index.css';\nimport App from './App';\n// import router from './router';\n\nVue.use(ElementUI);\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  // router,\n  // template: '<App/>',\n  // components: {App},\n  render: h => h(App)\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","<template>\n  <div id=\"app\">\n    <!--<el-row :gutter=\"10\" class=\"header-menu\">-->\n      <el-menu theme=\"dark\" :default-active=\"''\" class=\"header-menu\" mode=\"horizontal\" @select=\"() => {console.log('Hi!');}\">\n        <el-menu-item class=\"logo\" index=\"1\">RNNVis</el-menu-item>\n        <el-menu-item index=\"2\">Info</el-menu-item>\n      </el-menu>\n    <!--</el-row>-->\n    <el-row :gutter=\"10\">\n      <el-col :span=\"6\" class=\"col-bg\" :gutter=\"15\">\n        <model-view></model-view>\n        <br>\n        <info-board v-if='!compare' :compare='false' :type='\"word\"' :id='\"info-word\"' :height='infoHeight*1.0'></info-board>\n        <info-board v-if='!compare' :compare='false' :type='\"state\"' :id='\"info-state\"' :height='infoHeight*0.8'></info-board>\n      </el-col>\n      <el-col :span=\"18\" class=\"col-bg\" :gutter=\"15\">\n        <!--<router-view></router-view>-->\n        <el-row>\n          <main-view :height=\"mainHeight\"> </main-view>\n        </el-row>\n        <el-row :gutter=\"10\">\n          <info-view v-if='compare' :height=\"infoHeight\"> </info-view>\n        </el-row>\n      </el-col>\n      <!--<el-col :span='6' class=\"col-bg border\" :gutter=\"15\">-->\n\n          <!--<text-view> </text-view>-->\n\n      <!--</el-col>-->\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport ModelView from 'components/ModelView';\nimport MainView from 'components/MainView';\nimport TextView from 'components/TextView';\nimport InfoView from 'components/InfoView';\nimport InfoBoard from 'components/InfoBoard';\nimport { bus } from './event-bus';\n\nexport default {\n  name: 'app',\n  components: { ModelView, MainView, TextView, InfoView, InfoBoard },\n  data() {\n    return {\n      height: 800,\n      width: 1000,\n      shared: bus.state,\n    };\n  },\n  computed: {\n    mainHeight: function () {\n      return this.compare ? this.height * 0.6 : this.height*0.9;\n    },\n    infoHeight: function () {\n      return this.height * 0.2;\n    },\n    compare: function () {\n      return this.shared.compare;\n    }\n  },\n  mounted() {\n    this.height = window.innerHeight;\n    this.width = window.innerWidth;\n    window.addEventListener(\"resize\", () => {\n      this.height = window.innerHeight;\n      this.width = window.innerWidth;\n    });\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  /*font-family: 'Avenir', Helvetica, Arial, sans-serif;*/\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  /*color: #2c3e50;*/\n  margin-top: 10px;\n}\n\n.el-row {\n  margin-bottom: 10px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n.el-col {\n  border-radius: 4px;\n}\n.bg-purple-dark {\n  background: #abc;\n}\n.bg-purple {\n  background: white;\n}\n.bg-purple-light {\n  background: #fff;\n}\n.grid-content {\n  border-radius: 4px;\n  min-height: 36px;\n}\n.col-bg {\n  padding: 5px 0;\n  background-color: white;\n}\n.row-bg {\n  padding: 10px 0;\n  background-color: white;\n}\n.border {\n  border-style: solid;\n  border-width: 1px;\n  border-color: #99A9BF;\n}\n.normal {\n  font-weight: normal;\n}\nh4 {\n  font-size: 14px;\n  color: #555;\n  line-height: 18px;\n  margin-top: 0px;\n  padding-left: 10px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-bottom: -10px;\n  text-align: left;\n  background-color: rgba(128, 128, 128, 0.1);\n}\n\n.header-menu {\n  height: 60px;\n  /*margin-bottom: -10px;*/\n}\n\n.logo {\n  font-size: 18px;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// App.vue?3058d2fb","<template>\n  <div class=\"arc\">\n    <div class=\"header\">\n      <el-radio-group v-model=\"selectedState\" size=\"small\">\n        <el-radio-button v-for=\"state in states\" :label=\"state\"></el-radio-button>\n      </el-radio-group>\n    </div>\n    <svg :id=\"svgId\" :width=\"width\" :height=\"height\"> </svg>\n    <div class=\"arc_config\">\n      <el-col :span=\"4\">\n        <span>Cluster No.</span>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-slider v-model=\"clusterNum\" :min=\"2\" :max=\"20\"></el-slider>\n      </el-col>\n    </div>\n    <!--<el-tabs v-model=\"selectedState\">\n      <el-tab-pane v-for=\"state in states\" :label=\"state\" :name=\"state\">\n\n\n      </el-tab-pane>\n    </el-tabs>-->\n  </div>\n</template>\n\n<script>\n  import * as d3 from 'd3';\n  import dataService from '../services/dataService.js';\n  import {bus, SELECT_MODEL} from 'event-bus.js';\n  import { WordCloud } from '../layout/cloud.js';\n\n\n\n  const cell2states = {\n    'GRU': ['state'],\n    'BasicLSTM': ['state_c', 'state_h'],\n    'BasicRNN': ['state'],\n  };\n\n  export default {\n    name: 'ArcView',\n    data(){\n      return{\n         states: '',\n         fdGraph: null,\n         selectedState: '',\n         model: '',\n         wordNum: 200,\n         clusterNum: 5,\n         cluster_data: {},\n         state_data: null,\n         word_data: null,\n         cluster_mode: 'positive',\n      };\n    },\n    props: {\n      width: {\n        type: Number,\n        default: 800,\n      },\n      height: {\n        type: Number,\n        default: 600,\n      },\n    },\n    watch: {\n      width: function (newWidth) {\n        this.fdGraph.update_scale();\n      },\n      height: function (newHeight) {\n        this.fdGraph.update_scale();\n      },\n      selectedState: function(newState) {\n        if (newState === 'state' || newState === 'state_c' || newState === 'state_h'){\n          if (this.word_data === null || this.state_data === null) {\n            let ps = this.loadStateWordData();\n            var p = this.loadClusterData();\n            ps.push(p);\n            Promise.all(ps).then( values => {\n              this.reset();\n            });\n          }\n        }\n      },\n      wordNum: function (newWordNum) {\n        console.log('wordNum has changed');\n      },\n\n      clusterNum: function (newClusterNum) {\n        if (newClusterNum > 1) {\n          this.loadClusterData().then( values => { this.reset() });\n        }\n      }\n    },\n    computed: {\n      svgId: function() {\n        return this.paneId(this.model, this.selectedState);\n      }\n    },\n    methods: {\n      paneId(model, state) {\n        return `arc-${model}-${state}-svg`;\n      },\n      loadStateWordData() {\n        let p1 = dataService.getProjectionData(this.model, this.selectedState, {}, response => {\n          this.state_data = response.data;\n          console.log('state data loaded');\n        });\n        let p2 = dataService.getStrengthData(this.model, this.selectedState, {top_k: this.wordNum}, response => {\n          this.word_data = response.data;\n          console.log('word data loaded');\n        });\n        return [p1, p2];\n      },\n\n      loadClusterData() {\n        return bus.loadCoCluster(this.model, this.selectedState, this.clusterNum,\n          { top_k: this.wordNum, mode: this.cluster_mode, })\n          .then(() => {\n            this.cluster_data = bus.getCoCluster(this.model, this.selectedState, this.clusterNum,\n              { top_k: this.wordNum, mode: this.cluster_mode, });\n            console.log(`co_cluster_data ${this.clusterNum} loaded`);\n          });\n      },\n      reset() {\n        if (this.fdGraph) {\n          this.fdGraph.destroy();\n        }\n        const svg = document.getElementById(this.paneId(this.model, this.selectedState));\n        this.fdGraph = new ForceDirectedGraph(svg);\n        this.fdGraph.process_data(this.state_data, this.word_data, this.cluster_data, this.cluster_mode);\n        this.fdGraph.insert_element();\n        this.fdGraph.start_simulation();\n      },\n    },\n    mounted() {\n      bus.$on(SELECT_MODEL, (modelName, compare) => {\n        if (compare)\n          return;\n        console.log(`Selected model in ArcView: ${modelName}`);\n        this.model = modelName;\n        bus.loadModelConfig(modelName).then( () => {\n          this.states = bus.availableStates(modelName);\n        });\n      });\n    },\n};\n\nclass ForceDirectedGraph{\n  constructor(svg, strengthfn) {\n    let self = this;\n    this.svg = d3.select(`#${svg.id}`);\n    this.width = svg.clientWidth;\n    this.height = svg.clientHeight;\n    this.arcNodes = null;\n    this.innerNodes = null;\n    this.links = null;\n    this.word_clouds = [];\n    this.simulation = null;\n    this.strengthfn = strengthfn || (v => {return v; });\n    this.graph = null;\n    this.rScale = 0.1;\n    this.radius = 1.5;\n    this.defaultAlpha = 0.3;\n    this.scale = {\n      x: null,\n      y: null,\n    };\n    this.color = d3.scaleOrdinal(d3.schemeCategory20);\n    this.strength_threshold = 0.5;\n    this.normal_opacity_line = 0.1;\n    this.high_opacity_line = 0.1;\n    this.low_opacity_line = 0.01;\n    this.normal_opacity_node = 0.5;\n    this.high_opacity_node = 1;\n    this.low_opacity_node = 0.01;\n    this.strength_range = [0.1, 5];\n    this.arc_radius = 0.9 * Math.min(self.width/2, self.height/2);\n    this.cluster_data = [];\n    this.g_links = null;\n\n    // this.arc_gap_angle = Math.PI / 8;\n  }\n\n  process_data(arc_data, inner_data, cluster_data, cluster_mode) {\n    let self = this;\n    let label2arc = [];\n    let label2inner = [];\n    let circle_radius = 0.9 * Math.min(self.width/2, self.height/2);\n    this.cluster_data = cluster_data;\n\n    label2arc = cluster_data.colClusters.map((cluster, i) => {\n      return { data: cluster.map((col) => {\n        return { index: col, label: i };\n      }) };\n    })\n    label2inner = cluster_data.rowClusters.map((cluster, i) => {\n      return {data: cluster.map((row) => {\n        return { index: row, label: i, word: cluster_data.words[row] };\n      })};\n    })\n    // compute links data and inner data\n    let links = [];\n    console.log(cluster_data);\n    Object.keys(label2inner).forEach( (inner_k) => {\n      label2inner[inner_k]['type'] = 'inner';\n      Object.keys(label2arc).forEach( (arc_k) => {\n        label2arc[arc_k]['type'] = 'arc';\n        // calculate strength between arc_cluster and inner_cluster\n        let cluster_strength = 0;\n        label2inner[inner_k]['data'].forEach((inner_item) => {\n          label2arc[arc_k]['data'].forEach((arc_item) => {\n            let strength_item = cluster_data.correlation[inner_item.index][arc_item.index];\n            switch(cluster_mode) {\n              case 'positive':\n                cluster_strength += strength_item > 0 ? strength_item : 0;\n                break;\n              case 'negative':\n                cluster_strength += strength_item < 0 ? Math.abs(strength_item) : 0;\n                break;\n              case 'abs':\n                cluster_strength += Math.abs(strength_item);\n                break;\n              case 'raw':\n                cluster_strength += strength_item;\n                break;\n            }\n          });\n        });\n        let link = {\n          source: label2arc[arc_k],\n          target: label2inner[inner_k],\n          strength: cluster_strength,\n        }\n        links.push(link);\n      //   if (label2arc[inner_k].links === undefined) {\n      //     label2arc[inner_k].links = [];\n      //   }\n      //   label2arc[inner_k].links.push(link);\n      })\n    });\n\n    //normalize_strength\n    links = self.strength_normalize(links, self.strength_range);\n\n    console.log(\"finished preparing data\");\n    this.graph = {\n      links: links,\n      label2arc: label2arc,\n      label2inner: label2inner,\n      arc_data: arc_data,\n      inner_data: inner_data,\n      nodes: label2arc.concat(label2inner),\n    };\n  }\n\n  strength_normalize(links, range) {\n    let strength_extent = d3.extent(links.map( (l) => {return l.strength; }));\n    console.log(strength_extent);\n    // console.log(range);\n    let scale = d3.scaleLinear()\n        .domain(strength_extent)\n        .range(range);\n    links.forEach( (l) => {l.strength = scale(l.strength); });\n    return links;\n  }\n\n  draw_states() {\n    let self = this;\n    let width = this.width, height = this.height;\n    let radius = 0.9 * Math.min(width/2, height/2);\n    this.svg.append('g')\n        .selectAll('circle')\n        .data(this.graph.states)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .attr('cx', function(d) {return width / 2 + radius * Math.cos(d.angle)})\n        .attr('cy', function(d) {return height / 2 + radius * Math.sin(d.angle)})\n        .style('fill', function(d) {return self.color(d.label);})\n  }\n\n  insert_element() {\n    let self = this;\n\n    // draw arc path\n    let g_arc = self.svg.append('g')\n        .attr('transform', 'translate(' + self.width / 2 + ',' + self.height / 2 + ')');\n\n    let arc = d3.arc()\n        .innerRadius(self.arc_radius - 10)\n        .outerRadius(self.arc_radius)\n\n    let arc_data = d3.pie()(self.graph.label2arc.map((d) => {return d.data.length}));\n\n    self.graph.label2arc.forEach((d, i) => {\n      g_arc.append('path')\n        .datum(arc_data[i])\n        .style('fill', self.color(i))\n        .attr('d', arc)\n      let arc_centroid = arc.centroid(arc_data[i]);\n      d.fx = arc_centroid[0] + self.width / 2;\n      d.fy = arc_centroid[1] + self.height / 2;\n    });\n\n    // this.links = this.svg.append('g')\n    //   .attr('class', 'links')\n    //     .selectAll('line')\n    //     .data(this.graph.links)\n    //     .enter()\n    //     .append('line')\n    //     .classed('active', false)\n    //     .style('opacity', (d) => {return this.normal_opacity_line;})\n    //     .style('stroke', (d) => {return self.color(0)});\n\n\n\n    // let lines_data = [];\n    // self.graph.links.forEach((l) => {\n    //   lines_data.push([l.source, l.target]);\n    // });\n\n\n    // this.graph.links.forEach( (l) => {\n    //   console.log(`bundle line : ${line(l)}`)\n    // })\n    // let g_path = this.svg.append('g');\n    // this.graph.links.forEach( (l) => {\n    //   g_path.append('path')\n    //     .datum(l)\n    //     .each(()\n    //     .attr('d', line)\n    //     .attr('stroke', 'green')\n    //     .attr('stroke-width', 3)\n    //     .attr('fill', 'orange')\n    // })\n    // let path = this.svg.append('g')\n    //   .selectAll('path')\n    //   .data(lines_data)\n    //   .enter()\n    //   .append('path')\n    //   .each((d) => {d.source = d[0], d.target = d[d.length - 1]})\n    //   .attr('d', line)\n    //   .attr('stroke', 'green')\n    //   .attr('stroke-width', 3)\n    //   .attr('fill', 'orange')\n\n    // this.links.each(function(d) {\n    //   d['el'] = this;\n    // });\n\n    let words_list = [];\n    self.graph.label2inner.forEach((d) => {\n      let words = d.data.map((w) => {\n        return { text: w.word, size: (300 - w.index) / 15}\n      });\n      const radius = Math.sqrt(words.length) * 10 + 1;\n      console.log(words);\n      d['el_wc'] = this.svg.append('g');\n      let myWordCloud = new WordCloud(d['el_wc'], radius);\n      myWordCloud.update(words);\n      self.word_clouds.push(d['el_wc']);\n    });\n\n    // this.innerNodes = this.svg.append('g')\n    //   .attr('class', 'innerNodes')\n    //     .selectAll('text')\n    //     .data(self.graph.label2inner)\n    //     .enter()\n    //     .append('text')\n    //     .classed('active', false)\n    //     .text(function(d, i) {return i })\n    //     .attr('x', self.width / 2)\n    //     .attr('y', self.height / 2)\n    //     .call(d3.drag()\n    //       .on('start', d => {\n    //         if (!d3.event.active) self.simulation.alphaTarget(self.defaultAlpha).restart();\n    //         d.fx = d.x;\n    //         d.fy = d.y;\n    //       })\n    //       .on('drag', d => {\n    //         d.fx = d3.event.x;\n    //         d.fy = d3.event.y;\n    //       })\n    //       .on('end', d => {\n    //         if (!d3.event.active) self.simulation.alphaTarget(0);\n    //         d.fx = null;\n    //         d.fy = null;\n    //     }))\n\n    // this.innerNodes.each(function(d) {\n    //   d['el'] = this;\n    // })\n  }\n\n  start_simulation() {\n    let self = this;\n    var repelForce = d3.forceCollide(20)\n      .radius(d => Math.sqrt(d.data.length) * 10 + 10);\n    var init = repelForce.initialize;\n    repelForce.initialize = function(nodes) {\n      init(nodes.filter(function(d) {return d.type === 'inner'; }));\n    }\n    this.simulation = d3.forceSimulation().alpha(this.defaultAlpha)\n        .force('link', d3.forceLink()\n          .distance(function(d) {return d.strength > 0 ? 50 / d.strength : 300; })\n          .strength(function (d) {return 1; }))\n        .force('repel', repelForce)\n    this.simulation\n      .nodes(self.graph.nodes)\n      .on('tick', () => self.ticked());\n\n    this.simulation.force('link')\n      .links(self.graph.links);\n  }\n\n  ticked() {\n    let self = this;\n    // self.links\n    //   .attr('x1', function (d) {return d.source.fx; })\n    //   .attr('y1', function (d) {return d.source.fy; })\n    //   .attr('x2', function (d) {return d.target.x; })\n    //   .attr('y2', function (d) {return d.target.y; })\n\n    self.graph.label2inner.forEach((d) => {\n      d['el_wc'].attr('transform', 'translate(' + d.x + ',' + d.y + ')');\n    });\n\n    let line = d3.line()\n      .curve(d3.curveBundle.beta(1))\n      .x((d) => {return d.x})\n      .y((d) => {return d.y})\n\n    let line_data = [];\n    let data_center = [];\n    self.graph.label2arc.forEach((d, i) => {\n      self.graph.label2inner.forEach((w) => {\n        if (data_center[i] === undefined) {\n          data_center[i] = {x: 0, y: 0};\n        }\n        data_center[i].x = data_center[i].x + w.x / self.graph.label2inner.length;\n        data_center[i].y = data_center[i].y + w.y / self.graph.label2inner.length;\n      });\n    });\n    // console.log(data_center);\n    self.graph.label2arc.forEach((d, i) => {\n      self.graph.label2inner.forEach((w) => {\n        line_data.push([d, data_center[i], w]);\n      });\n    });\n\n    if (self.g_links) {\n      self.g_links.remove();\n    }\n    self.g_links = this.svg.append('g');\n    self.g_links\n      .selectAll('path')\n      .data(line_data).enter()\n      .append('path')\n      .attr('class', 'links')\n      .attr('d', line)\n      .attr('stroke', self.color(0))\n\n  }\n\n  destroy() {\n      console.log(`Destroying Graph`);\n      this.simulation.nodes([]);\n      this.simulation.force(\"link\").links([]);\n      // this.links.remove();\n      this.g_links.remove();\n      // this.word_clouds.remove();\n      this.word_clouds.forEach((d) => {d.remove()});\n      // this.innerNodes.remove();\n      // this.arcNodes.remove();\n    }\n\n};\n\n</script>\n\n<style>\n  .links {\n    fill: none;\n    stroke-width: 2;\n    opacity: 0.3;\n  }\n\n  .links .active {\n    stroke-width: 3;\n  }\n\n  .words {\n\n  }\n\n  .words .active {\n\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ArcView.vue?024ba000","<style>\n:root {\n  --positive-color: '#ff5b09';\n  --negative-color: '#09adff';\n}\n.hidden-cluster {\n  stroke: black;\n  stroke-opacity: 0.2;\n  stroke-width: 1;\n  fill: gray;\n  fill-opacity: 0.1;\n}\n.hidden-cluster.active {\n  stroke-width: 1.5;\n  stroke-opacity: 0.7;\n  stroke: black;\n  fill-opacity: 0.1;\n}\n#middle_line {\n  stroke: lightskyblue;\n  stroke-width: 2;\n  stroke-dasharray: 3, 3;\n  fill: none;\n  opacity: 0.5;\n}\n.link.active {\n  opacity: 1;\n}\n.link {\n  fill: none;\n  opacity: 0.2;\n}\n.link.positive {\n  stroke: #ff5b09;\n}\n.link.negative {\n  stroke: #09adff;\n}\n.unit {\n  stroke: 'none';\n}\n.unit-active {\n  stroke: black;\n  stroke-width: 1.0;\n}\n.wordcloud.active {\n  stroke: 'black';\n  stroke-width: 1.5;\n  stroke-opacity: 0.7;\n}\n\n.axis path, .axis tick, .axis line {\n  fill: none;\n  stroke: none;\n}\n\n</style>\n<template>\n  <!--<div>-->\n    <!--<div class=\"header\">\n      <el-radio-group v-model=\"selectedState\" size=\"small\">\n        <el-radio-button v-for=\"state in states\" :label=\"state\"></el-radio-button>\n      </el-radio-group>\n    </div>-->\n\n    <svg :id='svgId' :width='width' :height='height'>\n      <defs>\n        <linearGradient id=\"state-legend\">\n          <stop class=\"stop1\" offset=\"0%\" stop-color='rgba(9, 173, 255, 1)'/>\n          <stop class=\"stop2\" offset=\"50%\" stop-color='rgba(128, 128, 128, 0.1)'/>\n          <stop class=\"stop3\" offset=\"100%\" stop-color='rgba(255, 91, 9, 1)'/>\n        </linearGradient>\n      </defs>\n    </svg>\n  <!--</div>-->\n</template>\n\n<script>\n  import * as d3 from 'd3';\n  import { bus, SELECT_MODEL, SELECT_STATE, CHANGE_LAYOUT, EVALUATE_SENTENCE, SELECT_UNIT, DESELECT_UNIT, CLOSE_SENTENCE, SELECT_SENTENCE_NODE, SELECT_COLOR} from '../event-bus';\n  import { WordCloud } from '../layout/cloud.js';\n  import { sentence } from '../layout/sentence.js';\n\n  const colorHex = ['#33a02c','#1f78b4','#b15928','#fb9a99','#e31a1c','#6a3d9a','#ff7f00','#cab2d6','#ffff99','#a6cee3','#b2df8a','#fdbf6f'];\n  const colorScheme = (i) => colorHex[i];\n  const positiveColor = '#ff5b09';\n  const negativeColor = '#09adff';\n\n  class LayoutParamsConstructor {\n    constructor(width=800, height=800){\n      this.unitWidthRatio = 1.0;\n      this.unitMarginRatio = 0.5;\n      this.clusterMarginRatio = 0.7;\n      this.wordCloudArcDegree = 110;\n      this.wordCloudHightlightRatio = 1.5;\n      this.wordCloudPaddingLength = 5;\n      this.wordCloudChord2ClusterDistance = 50;\n      this.wordCloudChordLength2ClientHeightRatio = 0.8;\n      this.wordCloudChord2stateClusterHeightRatio = 1.1;\n      this.wordCloudWidth2HeightRatio = 1 / 0.5;\n      this.littleTriangleWidth = 5;\n      this.littleTriangleHeight = 5;\n      this.strengthThresholdPercent = [0.2, 1];\n      this.wordSize2StrengthRatio = 3;\n      // this.dxShrinkFactor = 0.1;\n      this.dxShrinkFactor = 0.04;\n      this.spacePerSentence = 2/20;\n      this.sentenceNodeWidth = 100;\n      this.sentenceInitTranslate = [50, 10]\n      // this.middleLineX = 300;\n      this.middleLineY = 50;\n      // this.middleLineTranslationXAfterSentence = 200;\n      this.brushTranslationX = -100;\n      this.sentenceWordThreshold = 0.5;\n      this.posColor = colorScheme;\n      this.middleLineOffset = 0;\n      this.width = width;\n      this.height = height;\n      this.sentenceBrushRectWidth = 10;\n      this.mode = 'width';\n    }\n    // switchMode() {\n    //   this.mode = this.mode === 'height' ? 'width' : 'height';\n    // }\n    get wordCloudWidth () {\n      // return this.width*0.3;\n      return this.width*0.18;\n    }\n    get unitHeight () {\n      return this._unitHeight ? this._unitHeight : Math.max(3, Math.min(~~((this.width - 500)/500) + 4, 7));\n    }\n    updateWidth(width) {\n      if (typeof width === 'number')\n        this.width = Math.min(Math.max(500, width), 1400);\n    }\n    updateHeight(height) {\n      if (typeof height === 'number')\n        this.height = Math.min(Math.max(200, height), 1000);\n    }\n    get unitWidth() {\n      return this.unitHeight * this.unitWidthRatio;\n    }\n    get unitMargin() {\n      return this.unitHeight * this.unitMarginRatio;\n    }\n    get clusterMargin() {\n      return this.unitHeight * this.clusterMarginRatio;\n    }\n    get maxClusterWidth() {\n      // const width = Math.max(this.width, 500);\n      return Math.min(this.width/3.5, 400);\n    }\n    get middleLineX() {\n      // const width = Math.max(this.width, 500);\n      return this.width * 0.25 + this.middleLineOffset;\n    }\n    computeUnitParams() {\n      // const unitHeight = this.clusterHeight / this.cluster2UnitRatio;\n      // this.unitHeight = ~~unitHeight;\n    }\n    get cluster2UnitRatio() {\n      return (this.packNum + (this.packNum - 1 ) * this.unitMarginRatio + 2 * this.clusterMarginRatio );\n    }\n    computeParams (clusterNum, clusterInterval2HeightRatio, clusterSizes, callTime = 0) {\n      if (callTime > 10) return;\n      const maxClusterSize = clusterSizes.reduce((a, b) => Math.max(a, b), 0);\n      const totalClusterSize = clusterSizes.reduce((a, b) => a+b, 0);\n      // this._unitHeight = 4 + this.width / totalClusterSize / 4;\n      this._unitHeight = 3 + this.width / totalClusterSize / 3;\n      this.wordCloudChordLength = this.height * this.wordCloudChordLength2ClientHeightRatio;\n      this.clusterHeight = (this.wordCloudChordLength) /\n        (clusterNum + clusterNum * clusterInterval2HeightRatio - clusterInterval2HeightRatio);\n      this.packNum = ~~((this.clusterHeight / this.unitHeight + this.unitMarginRatio - 2 * this.clusterMarginRatio) / (1+this.unitMarginRatio));\n      this.clusterHeight =  this.unitHeight * this.cluster2UnitRatio;\n      this.clusterInterval = this.clusterHeight * clusterInterval2HeightRatio;\n\n      if (this.middleLineY < 0) {\n        // callTime++;\n        this.computeParams(clusterNum, clusterInterval2HeightRatio-0.2, clusterSizes, callTime+1);\n      }\n      const maxClusterWidth = Math.ceil(maxClusterSize / this.packNum) * (this.unitWidth + this.unitMargin);\n      if (maxClusterWidth < 0.8 * this.maxClusterWidth) {\n        // callTime++;\n        clusterInterval2HeightRatio += 0.2;\n        this.computeParams(clusterNum, clusterInterval2HeightRatio, clusterSizes, callTime+1);\n      }\n      if (maxClusterWidth > this.maxClusterWidth) {\n        // callTime++;\n        clusterInterval2HeightRatio -= 0.2;\n        this.computeParams(clusterNum, clusterInterval2HeightRatio, clusterSizes, callTime+1);\n      }\n      if (callTime > 0) return;\n      if (this.mode === 'height')\n        this.middleLineY = (this.height - this.clusterHeight * clusterNum - this.clusterInterval * (clusterNum - 1)) / 2;\n      else{\n        this.widthPackNum = ~~(this.width/5.5/(this.unitWidth+this.unitMargin));\n        this.clusterWidth = this.widthPackNum * (this.unitWidth + this.unitMargin) - this.unitMargin + 2 * this.clusterMargin;\n        let heightSum = 0;\n        const heights = clusterSizes.forEach((size, i) => {\n\n          const pack = Math.ceil(size / this.widthPackNum);\n          heightSum += pack * (this.unitHeight + this.unitMargin) - this.unitMargin + 2 * this.clusterMargin;\n          // console.log(`pack ${pack}, widthPack ${this.widthPackNum}, size ${size}`);\n          // console.log(heightSum);\n\n        });\n        // const heightSum = heights.reduce((a, b) => a+b, 0);\n        this.clusterInterval = Math.floor((this.height - heightSum) / (clusterNum+2));\n        // console.log(`heightSum ${heightSum}, clusterInterval ${this.clusterInterval}`);\n        this.middleLineY = (this.height - heightSum - (clusterNum)*this.clusterInterval)/2;\n        // return;\n      }\n\n\n    }\n\n  }\n\n  const pos2tag = {\n    \"VERB\": 0,\n    \"NOUN\": 1,\n    \"PRON\": 2,\n    \"ADJ\" : 3,\n    \"ADV\" : 4,\n    \"ADP\" : 5,\n    \"CONJ\": 6,\n    \"DET\" : 7,\n    \"NUM\" : 8,\n    \"PRT\" : 9,\n    \"X\" : 10,\n    \".\" : 11,\n  };\n\n  const labelParams = {\n    colorScheme: colorScheme,\n    radius: 4,\n    fontSize: 11,\n    interval: 8\n  }\n\n  export default {\n    name: 'ClusterView',\n    data() {\n      return {\n        params: new LayoutParamsConstructor(this.width, this.height),\n        // svgId: 'cluster-svg',\n        clusterData: null,\n        // clusterNum: 10,\n        painter: null,\n        // painter2: null,\n        shared: bus.state,\n        // width: 800,\n        changingFlag: false,\n        posLabel: null,\n        rootGroup: null,\n      }\n    },\n    props: {\n      compare: {\n        type: Boolean,\n        defautl: false,\n      },\n      width: {\n        type: Number,\n        default: 800,\n      },\n      height: {\n        type: Number,\n        default: 800,\n      },\n    },\n    computed: {\n      svgId: function () {\n        return this.compare ? 'cluster-svg2' : 'cluster-svg';\n      },\n      selectedState: function() {\n        return this.compare ? this.shared.selectedState2 : this.shared.selectedState;\n      },\n      selectedModel: function() {\n        return this.compare ? this.shared.selectedModel2 : this.shared.selectedModel;\n      },\n      selectedLayer: function() {\n        return this.compare ? this.shared.selectedLayer2 : this.shared.selectedLayer;\n      },\n      layout: function() {\n        return this.compare ? this.shared.layout2 : this.shared.layout;\n      },\n      clusterNum: function() {\n        // console.log(`${this.svgId} > cluster num: ${this.layout.clusterNum}`);\n        return this.layout.clusterNum;\n      },\n      strokeControlStrength: function() {\n        return this.layout.strokeControlStrength;\n      },\n      linkFilterThreshold: function() {\n        return this.layout.linkFilterThreshold;\n      },\n      stateClip: function() {\n        return this.layout.stateClip;\n      },\n      selectedWords: function() {\n        return this.compare ? this.shared.selectedWords2 : this.shared.selectedWords;\n      },\n      selectedUnits: function() {\n        return this.compare ? this.shared.selectedUnits2 : this.shared.selectedUnits;\n      },\n      renderPos: function() {\n        return this.compare ? this.shared.renderPos2 : this.shared.renderPos;\n      },\n      mode: function() {\n        return this.layout.mode;\n      }\n    },\n    watch: {\n      selectedState: function (state) {\n        console.log(`${this.svgId} > state changed to ${this.selectedState}`);\n        this.maybeReload();\n      },\n      selectedLayer: function (layer) {\n        console.log(`${this.svgId} > layer changed to ${this.selectedLayer}`);\n        this.maybeReload();\n      },\n      strokeControlStrength: function(strokeControlStrength) {\n        this.changeStroke(this.strokeControlStrength, this.linkFilterThreshold);\n      },\n      linkFilterThreshold: function(linkFilterThreshold) {\n        this.changeStroke(this.strokeControlStrength, this.linkFilterThreshold);\n      },\n      clusterNum: function(clusterNum) {\n        console.log(`${this.svgId} > layout changed. clusterNum: ${this.layout.clusterNum}`);\n        this.maybeReload();\n      },\n      stateClip: function(newStateClip) {\n        console.log('state clip changed');\n        this.painter.changeStateClip(newStateClip);\n      },\n      mode: function(newMode) {\n        this.params.mode = newMode;\n        this.maybeReload();\n      },\n      selectedModel: function (newModel, oldModel) {\n        console.log(`${this.svgId} > model changed to ${this.selectedModel}`);\n        this.maybeReload();\n      },\n      selectedWords: function (words) {\n        // console.log('select word ' + words);\n        if (words.length === 0) {\n          this.painter.render_state([]);\n          return;\n        }\n        // const words = words.map((word) => word.text);\n        // this.compare = compare;\n        let model = this.selectedModel,\n          state = this.selectedState,\n          layer = this.selectedLayer;\n        const p = bus.loadStatistics(model, state, layer)\n          .then(() => {\n            const statistics = bus.getStatistics(model, state, layer);\n            const wordsStatistics = statistics.statOfWord(this.selectedWords[this.selectedWords.length-1].text).mean;\n            // const wordsStatistics = statistics.statOfWord(this.selectedWords[0].text).mean;\n            // console.log('click word ' + this.selectedWords[0].text);\n            this.painter.render_state(wordsStatistics);\n          });\n      },\n      renderPos: function(renderPos) {\n        const data = {};\n        if (renderPos) {\n          bus.loadPosStatistics(this.selectedModel, undefined, (response) => {\n            // console.log(response);\n            if (response.status === 200) {\n              const posStatistics = response.data;\n              posStatistics.forEach((word, i) => {\n                const posRatio = Object.keys(word.ratio).map((key, i) => {\n                  return {index: i, pos: key, value: word.ratio[key]};\n                });\n                posRatio.sort((a, b) => b.value - a.value);\n                data[word.word] = pos2tag[posRatio[0].pos];\n              });\n              // console.log(data);\n              this.posLabel.draw(pos2tag).transform('translate(' + [this.width-40, 10] + ')');\n            }\n            this.painter.renderWord(data);\n          });\n        } else {\n          this.painter.renderWord(data);\n          this.posLabel.clean();\n        }\n      },\n      width: function (newWidth, oldWidth) {\n        this.params.updateWidth(newWidth);\n        this.maybeReload();\n      },\n      height: function (newHeight) {\n        this.params.updateHeight(newHeight);\n        this.maybeReload();\n      }\n    },\n    methods: {\n      checkLegality() {\n        const state = this.selectedState;\n        // console.log(state);\n        // console.log(this.selectedLayer);\n        // console.log(this.layout);\n        return (state === 'state' || state === 'state_c' || state === 'state_h')\n          && ((typeof this.selectedLayer) === 'number') && (this.layout) && (this.painter)\n          && (typeof this.width === 'number') && (typeof this.height === 'number');\n      },\n      maybeReload() {\n        if (!this.changingFlag){\n          this.changingFlag = true;\n          if (this.checkLegality()){\n            console.log(`${this.svgId} > reloading...`);\n            this.reload(this.selectedModel, this.selectedState, this.selectedLayer, this.clusterNum)\n              .then(() => {\n                this.changingFlag = false;\n              });\n          } else {\n            this.changingFlag = false;\n          }\n        }\n      },\n      init() {\n        this.params.updateWidth(this.width);\n        this.rootGroup = d3.select(`#${this.svgId}`).append('g');\n        this.painter = new Painter(this.rootGroup, this.params, this.compare);\n        this.posLabel = new PosLabel(this.rootGroup.append('g'), labelParams, this.compare);\n      },\n      reload(model, state, layer, clusterNum) {\n        const params = {\n          top_k: 300,\n          mode: 'raw',\n          layer: layer,\n        };\n        if (this.renderPos) {\n          this.posLabel.clean();\n          this.posLabel.draw(pos2tag).transform('translate(' + [this.width-40, 10] + ')');\n        }\n        return bus.loadCoCluster(model, state, clusterNum, params)\n          .then(() => {\n            this.clusterData = bus.getCoCluster(model, state, clusterNum, params);\n            console.log(this.clusterData.colClusters.length);\n            this.rootGroup.attr('transform', this.compare ? 'scale(-1,1)translate(' + [-this.width, 0] + ')' : '')\n            this.painter.destroy();\n            this.painter.draw(this.clusterData);\n          });\n      },\n      changeStroke(controlStrength, linkFilterThreshold) {\n        this.painter.refreshStroke(controlStrength, linkFilterThreshold);\n      }\n    },\n    mounted() {\n      this.init();\n\n      bus.$on(EVALUATE_SENTENCE, (value, compare) => {\n        if (compare !== this.compare)\n          return;\n        const record = bus.evalSentence(value, this.selectedModel);\n        const p2 = record.evaluate();\n        Promise.all([p2]).then((values) => {\n          // TODO change -1 to something else\n          const sentenceRecord = record.getRecords(this.selectedState, -1);\n\n          this.painter.addSentence(value, record, sentenceRecord);\n        })\n      });\n\n      bus.$on(CLOSE_SENTENCE, (sentence, compare) => {\n        if(compare !== this.compare)\n          return;\n        this.painter.deleteSentence(sentence);\n      });\n\n      bus.$on(SELECT_COLOR, (newColor) => {\n        console.log(`color has changed to ${newColor}`);\n        d3.select(`#${this.svgId}`)\n          .selectAll('.link.positive')\n          .style('stroke', newColor[1]);\n        d3.select(`#${this.svgId}`)\n          .selectAll('.link.negative')\n          .style('stroke', newColor[0]);\n      })\n    }\n  }\n\n  class PosLabel {\n    constructor(selector, params, compare=False) {\n      this.g = selector;\n      this.params = params;\n      this.compare = compare;\n    }\n    draw(tags) {\n      const params = this.params;\n      const color = params.colorScheme;\n      const fontSize = params.fontSize;\n      const radius = params.radius;\n      const interval = params.interval;\n      const labels = [];\n      Object.keys(tags).forEach((key) => { labels[tags[key]] = key; });\n      const gs = this.g.selectAll('g')\n        .data(labels).enter()\n        .append('g');\n      gs.append('circle')\n        .attr('cx', 0).attr('cy', (d, i) => i*(interval + 2*radius))\n        .attr('r', radius)\n        .style('fill', (d, i) => color(i));\n      gs.append('text')\n        .attr('x', radius*2).attr('y', (d, i) => i*(interval + 2*radius) + fontSize/2)\n        .attr('text-anchor', 'start').style('font-size', fontSize)\n        .text((d)=> d);\n      return this;\n      // pos = this.g.selectAll\n    }\n    transform(transStr){\n      if (this.compare)\n        transStr = transStr + 'scale(-1, 1)';\n      this.g.attr('transform', transStr);\n      return this;\n    }\n    clean(){\n      this.g.selectAll('g').remove();\n    }\n  }\n\n  class Painter {\n    constructor(selector, params, compare=false) {\n      this.svg = selector;\n      this.params = params;\n\n      this.topGroupClass = 'topGroup';\n      this.topg = this.svg.append('g').attr('class', this.topGroupClass);\n      this.hg = this.topg.append('g');\n      this.wg = this.topg.append('g');\n      this.sentenceWordThreshold = params.sentenceWordThreshold;\n      this.strengthThresholdPercent = params.strengthThresholdPercent;\n\n      this.dx = 0, this.dy = 0;\n      this.graph = null;\n      this.clusterSelected = [];\n\n      this.state_elements = [];\n      this.loc = null;\n      this.wordClouds = [];\n\n      this.unitNormalColor = '#ff5b09';\n      this.unitRangeColor = ['#09adff', '#ff5b09'];\n      this.linkWidthRange = [1, 5];\n      this.linkColor = ['#09adff', '#ff5b09'];\n      this.compare = compare;\n      this.stateTranslateHis = [];\n      this.sentenceTranslateHis = [this.params.sentenceInitTranslate[0],];\n      this.sentences = [];\n      this.stateClip = 2;\n\n      this.strokeWidth = function(t) { return Math.abs(t) * 8};\n      this.sentenceStrokeWidth = function(t) {return Math.abs(t) * 24};\n      this.colorLegendAxis = null;\n    }\n    get dxOffset() {\n      const adaptive = (this.client_width - this.client_height) / 4;\n      // return Math.max(adaptive, 0);\n      return 0;\n    }\n    get stateClusterWordCloudDX () {\n      return this.client_width * ( - this.params.dxShrinkFactor * this.sentences.length) + this.dxOffset;\n    }\n    transform(trans) {\n      this.svg.attr('transform', trans);\n    }\n    get client_width () {\n      return this.params.width;\n    }\n    get client_height () {\n      return this.params.height;\n    }\n    get middle_line_x() {\n      return this.params.middleLineX;\n    }\n    get middle_line_y() {\n      return this.params.middleLineY;\n    }\n\n    get nSentence() {\n      return this.sentences.length;\n    }\n\n    refreshStroke(controlStrength, linkFilterThreshold) {\n      this.strokeWidth = function(t) {return Math.abs(t) * controlStrength};\n      this.sentenceStrokeWidth = function(t) {return Math.abs(t) * controlStrength / 3};\n      this.strengthThresholdPercent = linkFilterThreshold;\n      if (this.graph) {\n        this.draw_link(this.hg, this.graph);\n\n        this.graph.sentence_info.forEach((si) => {\n          const strength_extent = d3.extent(this.flatten(si.links).map((l) => l.strength));\n          const max_strength = Math.max(Math.abs(strength_extent[0]), Math.abs(strength_extent[1]));\n          const strength_bound = this.strengthThresholdPercent.map((t) => t * max_strength);\n          si.links.forEach((ls) => {\n            ls.forEach((l) => {\n              l['el'].attr('display', (Math.abs(l.strength) < strength_bound[0] || Math.abs(l.strength) > strength_bound[1]) ? 'none' : '')\n                     .attr('stroke-width', this.sentenceStrokeWidth(l.strength));\n            });\n          });\n        });\n      }\n    }\n\n    changeStateClip(clip) {\n      if (!this.graph) {\n        return;\n      }\n      this.stateClip = clip;\n      const scale = d3.scaleLinear()\n                        .domain([-this.stateClip, 0, this.stateClip])\n                        .range([1, 0, 1]);\n      if (d3.select(this.graph.state_info.state_info[0]['el']).property('colored')) {\n        this.graph.state_info.state_info.forEach((s, i) => {\n          let tmp_s = d3.select(s['el']);\n          tmp_s\n            .transition()\n            .attr('fill', tmp_s.property('strength') > 0 ? positiveColor : negativeColor)\n            .attr('fill-opacity', scale(Math.abs(tmp_s.property('strength'))));\n\n        });\n        this.axisScale.domain([-this.stateClip, this.stateClip]);\n        this.colorLegendAxis = d3.axisBottom()\n                          .tickValues([parseInt(-this.stateClip), 0, parseInt(this.stateClip)])\n                          .tickFormat(d3.format('.' + d3.precisionFixed(1) + 'f'))\n                          .scale(this.axisScale);\n        // this.hg.select('#color-legend')\n        //        .select('g')\n        //        .remove();\n        this.hg.select('#color-legend')\n               .select('g')\n               .call(this.colorLegendAxis);\n      }\n\n    }\n\n    deleteSentence(value) {\n      const sentence_to_add = this.sentences.filter((s) => {return s !== value});\n      this.sentences = [];\n      this.translateX(-d3.sum(this.stateTranslateHis));\n      this.adjustdx(this.stateClusterWordCloudDX);\n      this.stateTranslateHis = [];\n      this.sentenceTranslateHis = [this.params.sentenceInitTranslate[0],];\n\n      const tmpSentenceInfo = {};\n      this.graph.sentence_info.forEach((s) => {\n        tmpSentenceInfo[s.value] = s;\n        s['group'].remove();\n      });\n      this.graph.sentence_info = [];\n      sentence_to_add.forEach((s) => {\n        this.addSentence(s, tmpSentenceInfo[s].record, tmpSentenceInfo[s].sentenceRecord)\n      });\n    }\n\n    deleteAllSentences() {\n      this.sentences = [];\n      this.translateX(-d3.sum(this.stateTranslateHis));\n      this.adjustdx(this.stateClusterWordCloudDX);\n      this.stateTranslateHis = [];\n      this.sentenceTranslateHis = [this.params.sentenceInitTranslate[0],];\n\n      const tmpSentenceInfo = {};\n      this.graph.sentence_info.forEach((s) => {\n        tmpSentenceInfo[s.value] = s;\n        s['group'].remove();\n      });\n      this.graph.sentence_info = [];\n    }\n\n    addSentence(value, record, sentenceRecord) {\n      const self = this;\n      const needTranslate = (this.params.spacePerSentence + this.params.dxShrinkFactor) * this.client_width;\n      const translationForEachSentence = needTranslate;\n      const translationForState = needTranslate * 0.5;\n      const sentenceInitTranslate = this.params.sentenceInitTranslate;\n      this.stateTranslateHis.push(translationForState);\n      if (this.sentences.length) {\n        this.sentenceTranslateHis.push(translationForEachSentence);\n      }\n      // const sentenceTranslationX = this.client_width * 0.01;\n      const sg = this.svg.append('g')\n                      .attr('transform', `translate(${sentenceInitTranslate[0]}, ${sentenceInitTranslate[1]})`)\n      this.sentences.push(value);\n      const spg = sg.append('g');\n      const sentenceTranslate = [50, 10];\n      this.translateX(d3.sum(this.stateTranslateHis));\n      this.adjustdx(this.stateClusterWordCloudDX);\n\n      this.graph.sentence_info.forEach((s, k) => {\n        s.group\n        .transition()\n        .attr('transform', 'translate(' + [d3.sum(this.sentenceTranslateHis), sentenceInitTranslate[1]] + ')');\n      });\n\n      const rectGroup = sg.append('g').attr('transform', 'translate(' + [-this.params.sentenceNodeWidth/2, this.client_height/4] + ')');\n      this.drawBrushRect(rectGroup, sentenceRecord.length, updateSentence);\n\n      const sent = sentence(spg, this.compare)\n        .size([this.params.sentenceNodeWidth, this.params.sentenceNodeWidth * sentenceRecord.length])\n        .sentence(sentenceRecord)\n        .coCluster(this.graph.coCluster)\n        .words(record.tokens)\n        .mouseoverCallback(highlightSentenceLinkByNodeIndex)\n        .barMouseoverCallback(barHighlightState)\n        .draw();\n\n      const links = [];\n      const strength = sent.strengthByCluster;\n      sent.strengthByCluster.forEach((strengths, i) => {\n        links[i] = [];\n        const wordPos = sent.getWordPos(i);\n        this.graph.coCluster.colClusters.forEach((clst, j) => {\n          const strength = strengths[j];\n          const s = this.graph.state_info.state_cluster_info[j];\n          links[i][j] = {\n            source: {x: wordPos[0] + sent.nodeWidth, y: wordPos[1] + sent.nodeHeight/2},\n            source_init: {x: wordPos[0] + sent.nodeWidth, y: wordPos[1] + sent.nodeHeight/2},\n            // source_init: {x: wordPos[0] + sent.nodeWidth + sentenceTranslate[0], y: wordPos[1] + sent.nodeHeight/2 + sentenceTranslate[1]},\n            target: {x: s.top_left[0] + this.middle_line_x - sentenceInitTranslate[0] , y: s.top_left[1] + this.middle_line_y + s.height / 2 - sentenceInitTranslate[1]},\n            strength: strength,\n          };\n        });\n      });\n      // links.forEach(function(ls) {\n      //   const strengthExtent = d3.extent(ls.map(l => Math.abs(l.strength)));\n      //   const filterStrength = strengthExtent[1] * self.sentenceWordThreshold;\n      //   ls.forEach((l) => {\n      //     l.strength = Math.abs(l.strength) < filterStrength ? 0 : l.strength;\n      //   });\n      // });\n\n      // const strengthes = flatten(links).map(d => {return Math.abs(d.strength)});\n      // const scale = d3.scaleLinear()\n      //   .domain([0, d3.extent(strengthes)[1]])\n      //   .range([0, this.linkWidthRange[1]])\n\n\n      const strength_extent = d3.extent(this.flatten(links).map((l) => l.strength));\n      const max_strength = Math.max(Math.abs(strength_extent[0]), Math.abs(strength_extent[1]));\n      const strength_bound = this.strengthThresholdPercent.map((t) => t * max_strength);\n\n      const lsg = sg.append('g');\n      links.forEach(function(ls) {\n        ls.forEach(function(l) {\n          l['el'] = lsg.append('path')\n                      .classed('active', false)\n                      .classed('link', true)\n                      .classed(l.strength > 0 ? 'positive' : 'negative', true)\n                      .attr('d', self.createLink(l))\n                      .attr('stroke-width', self.sentenceStrokeWidth(l.strength))\n                      .attr('opacity', 0.2)\n                      .attr('fill', 'none')\n                      .attr('display', (Math.abs(l.strength) < strength_bound[0] || Math.abs(l.strength) > strength_bound[1]) ? 'none' : '')\n                      .attr('hold', 'false');\n        });\n      });\n      self.graph.sentence_info.push({sentence: sent, links: links, value: value, group: sg, record: record, sentenceRecord: sentenceRecord});\n      if (this.sentences.length > 1) {\n        self.graph.sentence_info.forEach((si) => {\n          si.links.forEach((ls) => {\n            ls.forEach((l) => {\n              l['el'].attr('display', 'none');\n            });\n          });\n        });\n      }\n\n      function updateSentence(extent_) {\n        // console.log(`extent_ is ${extent_}`);\n        const words = record.tokens.slice(...extent_);\n        // console.log(`words is ${words}`);\n        let scaleFactor = self.client_height / words.length / self.params.sentenceNodeWidth / 1.05;\n        // console.log(`scaleFactor is ${scaleFactor}`);\n        scaleFactor = Math.min(scaleFactor, 1.5);\n        const newHeight = scaleFactor * self.client_height;\n        let translateY = (sent.getWordPos(extent_[0])[1] + sent.getWordPos(extent_[1])[1]) / 2;\n        // let translateY = sent.getWordPos(~~((extent_[0] + extent_[1])/2))[1];\n        sent.transform('scale('  + scaleFactor + ')translate(' + [0, -translateY + self.client_height/2/scaleFactor] + ')');\n        // sent.transform('scale('  + scaleFactor + ')translate(' + [d3.sum(self.sentenceTranslateHis)/scaleFactor, -translateY + self.client_height/2/scaleFactor] + ')');\n        links.forEach((ls) => {\n          ls.forEach((l) => {\n            const actualY = (l.source_init.y - translateY) * scaleFactor + self.client_height / 2;\n            console.log(`client height is ${self.client_height}`);\n            console.log(`actualY is ${actualY}`);\n            // const actualY = (l.source_init.y - translateY) * scaleFactor + self.client_height / 2;\n            l.source.x = l.source_init.x * scaleFactor;\n            l.source.y = actualY;\n            l['el']\n              .transition()\n              .attr('d', (actualY > 0 && actualY < self.client_height) ? self.createLink(l) : '');\n          })\n        })\n      }\n\n      function highlightSentenceLinkByNodeIndex (data, t, highlight, changeCheckStatus=false) {\n        // console.log(this);\n        links[t].forEach((l) => {\n          if (changeCheckStatus) {\n            l['el'].attr('hold', l['el'].attr('hold') === 'false' ? 'true' : 'false');\n          }\n          if (l['el'].attr('hold') !== 'true') {\n            l['el'].classed('active', highlight)\n            .attr('display', highlight || (self.sentences.length < 2 && l['el'].attr('display') !== 'none') ? '' : 'none');\n          } else {\n            l['el'].classed('active', true)\n            .attr('display', '');\n          }\n\n        });\n        if(changeCheckStatus) {\n          data.selected = !data.selected;\n          bus.$emit(SELECT_SENTENCE_NODE, data, self.compare);\n        }\n        data.bg.classed('active', data.selected ? true : highlight);\n      }\n\n      function barHighlightState(state_index, highlight) {\n        console.log('state ' + state_index + ' is hover on or out');\n        self.update_ref(d3.select(self.graph.state_info.state_cluster_info[state_index]['el']).select('rect').node(), highlight ? 'plus' : 'minus');\n      }\n    }\n\n    drawBrushRect(g, dataLength, func) {\n      const self = this;\n\n      const maxHeight = this.params.height / 2;\n      const unitHeight = Math.min( maxHeight / dataLength, 50);\n      console.log(`unitHeight is ${unitHeight}`);\n      const rectSize = [self.params.sentenceBrushRectWidth, unitHeight];\n      console.log(`rect size is ${rectSize}`);\n      const minBrushLength = 3;\n      g.selectAll('.wordRect')\n        .data(d3.range(dataLength)).enter()\n        .append('rect')\n        .attr('x', 0)\n        .attr('y', d => d * rectSize[1])\n        .attr('width', rectSize[0])\n        .attr('height', rectSize[1])\n        .attr('fill', 'black')\n        .attr('stroke-width', 1)\n        .attr('stroke', 'blue')\n        .attr('opacity', 0.2);\n      let brush = d3.brushY()\n        .extent([[0, 0], [rectSize[0], rectSize[1] * dataLength]])\n        .on('end', function() {\n          if (!d3.event.sourceEvent) return;\n          if (!d3.event.selection) return;\n          let extent = d3.event.selection;\n          let lower = Math.round(extent[0] / rectSize[1]);\n          let upper = Math.round(extent[1] / rectSize[1]);\n          extent[0] = lower * rectSize[1];\n          extent[1] = upper * rectSize[1];\n          d3.select(this).transition().call(d3.event.target.move, extent);\n          console.log(d3.event.selection);\n          func([lower, upper]);\n        });\n      g.append('g')\n        .call(brush)\n        .call(brush.move, [0, rectSize[1] * dataLength])\n    }\n\n    calculate_state_info(coCluster, mode='height') {\n      let state_loc = [];\n      let state_cluster_loc = [];\n      // let little_triangle_loc = [];\n\n      const clusterHeight = this.params.clusterHeight;\n      const packNum = this.params.packNum;\n      this.params.computeUnitParams();\n      const unitHeight = this.params.unitHeight;\n      const unitWidth = this.params.unitWidth;\n      const unitMargin = this.params.unitMargin;\n      const clusterMargin = this.params.clusterMargin;\n      const clusterInterval = this.params.clusterInterval;\n\n      const stateClusters = coCluster.colClusters;\n\n      if (mode === 'height'){\n        stateClusters.forEach((clst, i) => {\n          let width = Math.ceil(clst.length / packNum) * (unitWidth + unitMargin) - unitMargin + 2 * clusterMargin;\n          let height = clusterHeight;\n          let top_left = [-width / 2, i * (height + clusterInterval)];\n\n          state_cluster_loc[i] = {top_left: top_left, width: width, height: height};\n\n          clst.forEach((c, j) => {\n            let s_width = unitWidth;\n            let s_height = unitHeight;\n            let s_top_left = [(~~(j/packNum)) * (unitMargin + unitWidth) + clusterMargin,\n              j%packNum * (unitHeight + unitMargin) + clusterMargin];\n            state_loc[c] = {top_left: s_top_left, width: s_width, height: s_height};\n          });\n        });\n      } else if (mode === 'width') {\n        const width = this.params.clusterWidth;\n        const widthPackNum = this.params.widthPackNum;\n        let offset = 0;\n        stateClusters.forEach((clst, i) => {\n          let height = Math.ceil(clst.length / widthPackNum) * (unitHeight + unitMargin) - unitMargin + 2 * clusterMargin;\n          let top_left = [-width / 2, offset];\n          offset += (height + clusterInterval);\n          // let packNum =\n          state_cluster_loc[i] = {top_left: top_left, width: width, height: height};\n\n          clst.forEach((c, j) => {\n            let s_width = unitWidth;\n            let s_height = unitHeight;\n            let s_top_left = [(j%widthPackNum) * (unitMargin + unitWidth) + clusterMargin,\n              ~~(j/widthPackNum) * (unitHeight + unitMargin) + clusterMargin];\n            state_loc[c] = {top_left: s_top_left, width: s_width, height: s_height};\n          });\n        });\n      }\n      return {state_cluster_info: state_cluster_loc, state_info: state_loc};\n    }\n\n    calculate_word_info(coCluster, selected_state_cluster_index=-1) {\n      let self = this;\n      const wordCloudPaddingLength = this.params.wordCloudPaddingLength;\n      const wordSize2StrengthRatio = this.params.wordSize2StrengthRatio;\n      // const wordCloudWidth2HeightRatio = this.params.wordCloudWidth2HeightRatio;\n      const baseWordCloudWidth = this.params.wordCloudWidth;\n      const wordClusters = coCluster.rowClusters;\n      const words = coCluster.words;\n      const nCluster = coCluster.labels.length;\n      const agg_info = coCluster.aggregation_info;\n\n      let chordLength = this.params.wordCloudChordLength;\n      let availableLength = chordLength - nCluster * wordCloudPaddingLength;\n\n      const wordCloudArcRadius = chordLength / 2 / Math.sin(this.params.wordCloudArcDegree / 2 * Math.PI / 180);\n      this.params.wordCloudArcRadius = wordCloudArcRadius;\n      // const wordCloudArcLength = wordCloudArcRadius * wordCloudArcDegree * Math.PI / 180;\n\n      let highlight_clouds = [];\n      if (selected_state_cluster_index >= 0) {\n        self.graph.link_info[selected_state_cluster_index].forEach((d, j) => {\n          // if (Math.abs(d.strength) > 0) {\n          if (d3.select(d['el']).attr('display') !== 'none') {\n            highlight_clouds.push(j);\n          }\n        });\n      }\n      // console.log(\"need to highlight \");\n      // console.log(highlight_clouds);\n      highlight_clouds = new Set(highlight_clouds);\n      let word_info = [];\n      let wd_height = wordClusters.map((d, i) => {\n        if (highlight_clouds.size === 0) {\n          // return d.length;\n          return Math.sqrt(d.length);\n        } else if (!highlight_clouds.has(i)) {\n          return Math.sqrt(d.length);\n          // return d.length;\n        } else {\n          // return d.length * this.params.wordCloudHightlightRatio;\n          return Math.sqrt(d.length) * this.params.wordCloudHightlightRatio;\n        }\n      });\n\n      let wd_height_sum = wd_height.reduce((acc, val) => {\n        return acc + val;\n      }, 0);\n      const max_height = wd_height.reduce((a, b) => Math.max(a,b), 0);\n\n      let offset = -chordLength / 2 ;\n      wordClusters.forEach((wdst, i) => {\n        // let angle = wd_radius[i] / wd_radius_sum * availableDegree / 2;\n        // let actual_radius = wordCloudArcRadius * angle * Math.PI / 180;\n        // let angle_loc = angle + offset;\n        const actual_height = wd_height[i] / wd_height_sum * availableLength;\n        const actual_width = baseWordCloudWidth; // * wd_height[i] / max_height;\n        const top_left_y = offset;\n        const top_left_x = Math.sqrt(wordCloudArcRadius ** 2 - top_left_y ** 2);\n        offset += actual_height + wordCloudPaddingLength;\n        // if self.graph exist, then only update the location info\n        if (self.graph && self.graph.word_info) {\n          self.graph.word_info[i].top_left = [top_left_x, top_left_y];\n          self.graph.word_info[i].width = actual_width;\n          self.graph.word_info[i].height = actual_height;\n          word_info[i] = self.graph.word_info[i];\n        } else {\n          const words_data = wdst.map((d) => {\n            return {text: words[d], size: agg_info.row_single_2_col_cluster[d][i] * wordSize2StrengthRatio};\n          });\n          word_info[i] = {top_left: [top_left_x, top_left_y], width: actual_width,\n            height: actual_height, words_data: words_data};\n        }\n      });\n      // console.log(word_info);\n      return word_info;\n    }\n\n    calculate_link_info(state_info, word_info, coCluster, dx, dy) {\n      const self = this;\n      let links = [];\n      const row_cluster_2_col_cluster = coCluster.aggregation_info.row_cluster_2_col_cluster;\n      const colClusters = coCluster.colClusters;\n      const rowClusters = coCluster.rowClusters;\n      const labels = coCluster.labels;\n      // console.log('row_cluster_2_col_cluster');\n      // console.log(row_cluster_2_col_cluster);\n      state_info.state_cluster_info.forEach((s, i) => {\n        let max_strength = 0;\n        // if (!self.graph || !this.graph.link_info) {\n        //   const strength_extent = d3.extent(row_cluster_2_col_cluster.map((row_cluster) => row_cluster[i]));\n        //   max_strength = Math.max(Math.abs(strength_extent[0]), Math.abs(strength_extent[1]));\n        //   // console.log(`threshold is ${strength_extent[0]*strengthThresholdPercent}, ${strength_extent[1]*strengthThresholdPercent}`);\n        // }\n        // const filter_strength = max_strength * strengthThresholdPercent;\n        word_info.forEach((w, j) => {\n          if (links[i] === undefined) {\n            links[i] = [];\n          }\n          // if self.graph exists, then only update the location info, keep\n          if (this.graph && this.graph.link_info) {\n            // console.log(self.graph.link_info[i][j].el);\n            links[i][j] = {source: {x: s.top_left[0] + s.width,\n              y: s.top_left[1] + s.height / 2},\n              target: {x: w.top_left[0] + dx, y: w.top_left[1] + w.height/2 + dy},\n              strength: self.graph.link_info[i][j].strength,\n              el: self.graph.link_info[i][j].el,\n            };\n          } else {\n            let tmp_strength = row_cluster_2_col_cluster[labels[j]][labels[i]];\n            // tmp_strength = Math.abs(tmp_strength) < filter_strength ? 0 : tmp_strength;\n            links[i][j] = {source: {x: s.top_left[0] + s.width,\n              y: s.top_left[1] + s.height / 2},\n              target: {x: w.top_left[0] + dx, y: w.top_left[1] + w.height/2 + dy},\n              strength: tmp_strength,\n            };\n          }\n\n        });\n      });\n      // console.log(links);\n      return links;\n    }\n\n    ArcLength2Angle(length, radius) {\n      return length / radius * 180 / Math.PI;\n    }\n\n    render_state(data) {\n      if (data.length) {\n        if (!this.hg.select('#color-legend').node()) {\n          const tmp_state = this.graph.state_info.state_cluster_info[this.graph.state_info.state_cluster_info.length - 1];\n          const tmp_g = this.hg.append('g')\n                            .attr('id', 'color-legend')\n                            .attr('transform', 'translate(' + [0, tmp_state.top_left[1] + tmp_state.height + 0.6 * this.params.clusterInterval] +\n                              ')' + (this.compare ? 'scale(-1, 1)' : ''));\n          const width = tmp_state.width;\n          // console.log('unitHeight is ' + this.params.unitHeight);\n          const height = 3.8 * 2;\n          // const height = this.params.unitHeight * 2;\n          tmp_g.append('rect')\n          .attr('transform', 'translate(' + [-width / 2, 0] + ')')\n          .transition()\n          .attr('x', 0)\n          .attr('y', 0)\n          .attr('width', width)\n          .attr('height', height)\n          .style('fill', 'url(#state-legend)');\n\n          this.axisScale = d3.scaleLinear().range([0, width]).domain([-this.stateClip, this.stateClip]);\n          this.colorLegendAxis = d3.axisBottom()\n                          .tickValues([parseInt(-this.stateClip), 0, parseInt(this.stateClip)])\n                          .tickFormat(d3.format('.' + d3.precisionFixed(1) + 'f'))\n                          .scale(this.axisScale);\n          tmp_g.append('g')\n               .classed('axis', true)\n               .attr('transform', 'translate(' + [-width/2, 0] + ')')\n               .call(this.colorLegendAxis);\n        }\n\n        // const extent = d3.extent(data);\n        const scale = d3.scaleLinear()\n                        .domain([-this.stateClip, 0, this.stateClip])\n                        .range([1, 0, 1]);\n        // console.log(`the extent of render state is ${extent}`);\n        this.graph.state_info.state_info.forEach((s, i) => {\n          d3.select(s['el'])\n            .property('colored', true)\n            .property('strength', data[i])\n            .transition()\n            .duration(300)\n            .attr('fill', data[i] > 0 ? positiveColor : negativeColor)\n            .attr('fill-opacity', scale(Math.abs(data[i])));\n        });\n\n      } else {\n        this.hg.select('#color-legend').remove();\n        this.graph.state_info.state_info.forEach((s, i) => {\n          d3.select(s['el'])\n            .property('colored', false)\n            .transition()\n            .duration(400)\n            .attr('fill', this.unitNormalColor)\n            .attr('fill-opacity', 0.3)\n        });\n      }\n    }\n\n    renderWord(data = {}) {\n      // console.log(data);\n      this.graph.word_info.forEach((wordCluster, i) => {\n        wordCluster.words_data.forEach((word, j) => {\n          word.type = data[word.text];\n        })\n      });\n      // console.log(this.graph.word_info);\n      // console.log(this.graph.word_info);\n      this.draw_word(this.wg, this.graph);\n    }\n\n    redraw_word_link(selected_state_cluster_index = -1) {\n      this.graph.word_info = this.calculate_word_info(this.graph.coCluster, selected_state_cluster_index);\n      this.graph.link_info = this.calculate_link_info(this.graph.state_info, this.graph.word_info, this.graph.coCluster, this.stateClusterWordCloudDX, this.dy);\n      this.draw_word(this.wg, this.graph);\n      this.draw_link(this.hg, this.graph);\n    }\n\n    update_ref(el, mode) {\n      if (mode === \"plus\") {\n        d3.select(el).property('ref', parseInt(d3.select(el).property('ref')) + 1);\n        d3.select(el).classed('active', true);\n      } else if (mode === \"minus\") {\n        d3.select(el).property('ref', parseInt(d3.select(el).property('ref')) - 1);\n        if (parseInt(d3.select(el).property('ref')) === 0) {\n          d3.select(el).classed('active', false);\n        }\n      }\n    }\n\n    draw_state(g, graph) {\n      let self = this;\n      let coCluster = graph.coCluster;\n      let state_info = graph.state_info;\n      const clusterHeight = this.params.clusterHeight;\n      const packNum = this.params.packNum;\n      const unitHeight = this.params.unitHeight;\n      const unitWidth = this.params.unitWidth;\n      const unitMargin = this.params.unitMargin;\n      const clusterInterval = this.params.clusterInterval;\n      const littleTriangleWidth = this.params.littleTriangleWidth;\n      const littleTriangleHeight = this.params.littleTriangleHeight;\n\n      if (this.clusterSelected.length !== coCluster.colClusters.length) {\n        this.clusterSelected = coCluster.colClusters.map((d, i) => 0);\n      }\n      const clusterSelected = this.clusterSelected;\n      g.append('line')\n        .attr('id', 'middle_line')\n        .attr('x1', 0)\n        .attr('y1', -1000)\n        .attr('x2', 0)\n        .attr('y2', 1000)\n        .attr('display', 'none');\n\n      // const color = ['#09adff', '#ffffff', '#ff5b09'];\n      // g.append('defs')\n      //   .append('linearGradient')\n      //   .attr('id', 'legend-state')\n      //   .attr('x1', '0').attr('y1', '0')\n      //   .attr('x2', '1').attr('y2', '0')\n      //   .selectAll('stop')\n      //   .data(d3.range(3)).enter()\n      //   .append('stop')\n      //   .attr('offset', d => d/2)\n      //   .attr('stop-color', d => color[d]);\n\n\n\n\n      const hiddenClusters = g.selectAll('g rect')\n        .data(coCluster.colClusters, (clst, i) => Array.isArray(clst) ? (String(clst.length) + String(i)) : this.id); // matching function\n\n      const selectCluster = function (clst, i) {\n        if (!clusterSelected[i]){\n          clusterSelected[i] = 1;\n          self.redraw_word_link(i);\n          self.update_ref(d3.select(this).select('rect').node(), \"plus\");\n          self.graph.link_info[i].forEach((l, j) => {\n            self.update_ref(l['el'], \"plus\");\n            if (d3.select(l['el']).attr('display') !== 'none') {\n              self.update_ref(self.graph.word_info[j]['wordCloud'].bgHandle.node(), \"plus\");\n            }\n          });\n        } else {\n          clusterSelected[i] = 0;\n          self.redraw_word_link(-1);\n          self.update_ref(d3.select(this).select('rect').node(), \"minus\");\n          self.graph.link_info[i].forEach((l, j) => {\n            self.update_ref(l['el'], \"minus\");\n            if (d3.select(l['el']).attr('display') !== 'none') {\n              self.update_ref(self.graph.word_info[j]['wordCloud'].bgHandle.node(), \"minus\");\n            }\n          });\n        }\n      }\n\n      const hGroups = hiddenClusters.enter()\n        .append('g');\n      hGroups\n        .on('mouseenter', function (clst, i) {\n          self.update_ref(d3.select(this).select('rect').node(), \"plus\");\n          self.graph.link_info[i].forEach((l, j) => {\n            self.update_ref(l['el'], \"plus\");\n            if (d3.select(l['el']).attr('display') !== 'none') {\n              self.update_ref(self.graph.word_info[j]['wordCloud'].bgHandle.node(), \"plus\");\n              const ref = self.graph.word_info[j]['wordCloud'].bgHandle.property('ref');\n              console.log(`word ${j}'s ref is ${ref}`);\n            }\n          })\n        })\n        .on('mouseleave', function(clst, i) {\n          console.log('mouse leave');\n          self.update_ref(d3.select(this).select('rect').node(), \"minus\");\n          console.log(d3.select(this).select('rect').property('ref'));\n          self.graph.link_info[i].forEach((l, j) => {\n            self.update_ref(l['el'], \"minus\");\n            if (d3.select(l['el']).attr('display') !== 'none') {\n              self.update_ref(self.graph.word_info[j]['wordCloud'].bgHandle.node(), \"minus\");\n              const ref = self.graph.word_info[j]['wordCloud'].bgHandle.property('ref');\n              console.log(`word ${j}'s ref is ${ref}`);\n            }\n          })\n        })\n        .on('click', selectCluster)\n      hGroups.attr('transform', 'translate(0,0)')\n        .attr('id', (clst, i) => (String(clst.length) + String(i)))\n        .transition()\n        .duration(300)\n        .attr('transform', (d, i) => 'translate(' + [state_info.state_cluster_info[i].top_left[0], state_info.state_cluster_info[i].top_left[1]] + ')');\n\n      hGroups.each(function (d, i) {\n        graph.state_info.state_cluster_info[i]['el'] = this;\n      });\n\n      const clusterRect = hGroups.append('rect')\n        .classed('hidden-cluster', true)\n        .classed('active', false)\n        .property('ref', 0)\n        .transition()\n        .duration(400)\n        .attr('width', (clst, i) => state_info.state_cluster_info[i].width)\n        .attr('height', (clst, i) => state_info.state_cluster_info[i].height)\n        .attr('x', 0) //(clst, i) => state_info.state_cluster_info[i].top_left[0])\n        .attr('y', 0) //(clst, i) => state_info.state_cluster_info[i].top_left[1]);\n\n      const units = hGroups.append('g')\n        .selectAll('rect')\n        .data(d => d);\n\n      let tmp_units = units.enter()\n        .append('rect')\n        .on('mouseover', function(d, i) {\n          if (state_info.state_info[d].selected) return;\n            d3.select(this).classed('unit-active', true)\n            // fisheye in\n        })\n        .on('mouseleave', function(d, i) {\n          if (state_info.state_info[d].selected) return;\n            d3.select(this).classed('unit-active', false)\n            // fisheye out\n        })\n        .on('click', function(d, i) {\n            if (!state_info.state_info[d].selected){\n              state_info.state_info[d].selected = true;\n              d3.select(this).classed('unit-active', true)\n              bus.$emit(SELECT_UNIT, d, self.compare);\n            } else {\n              state_info.state_info[d].selected = false;\n              d3.select(this).classed('unit-active', false)\n              bus.$emit(DESELECT_UNIT, d, self.compare);\n            }\n          // }\n        })\n        .transition()\n        .duration(400)\n        .attr('width', (i) => state_info.state_info[i].width)\n        .attr('height', (i) => state_info.state_info[i].height)\n        .attr('x', (i) => state_info.state_info[i].top_left[0])\n        .attr('y', (i) => state_info.state_info[i].top_left[1])\n        .attr('fill', self.unitNormalColor)\n        .attr('fill-opacity', 0.3)\n\n      tmp_units.each(function(d) {\n        graph.state_info.state_info[d]['el'] = this;\n      })\n\n      // add\n      // hiddenClusters.exit()\n      //   .transition()\n      //   .duration(400)\n      //   .style('fill-opacity', 1e-6)\n      //   .attr('width', 1)\n      //   .attr('height', 1)\n      //   .remove();\n    }\n\n    sum(arr) {\n      return arr.reduce(function (acc, val) {\n        return acc + val;\n      }, 0);\n    }\n\n    draw_word(g, graph) {\n      let self = this;\n      let word_info = graph.word_info;\n      word_info.forEach((wclst, i) => {\n        if (wclst['wordCloud']) {\n          const ref = parseInt(wclst['wordCloud'].bgHandle.property('ref'));\n          const selected = wclst['wordCloud'].bgHandle.property('selected');\n          const active = wclst['wordCloud'].bgHandle.classed('active');\n          wclst['wordCloud']\n            .draw([wclst.width/2, wclst.height/2])\n            .transform( 'translate(' + [wclst.top_left[0] + wclst.width/2, wclst.top_left[1] + wclst.height/2] + ')');\n          wclst['wordCloud'].bgHandle.property('ref', ref)\n                              .property('selected', selected)\n                              .classed('wordcloud', true)\n                              .classed('active', active);\n        } else {\n          let tmp_g = g.append('g')\n            .on('mouseenter', function () {\n              self.graph.link_info.forEach((ls, j) => {\n                self.update_ref(ls[i]['el'], 'plus');\n                if (d3.select(ls[i]['el']).attr('display') !== 'none') {\n                  self.update_ref(d3.select(self.graph.state_info.state_cluster_info[j]['el']).select('rect').node(), 'plus');\n                }\n              });\n              self.update_ref(wclst['wordCloud'].bgHandle.node(), 'plus');\n            })\n            .on('mouseleave', function () {\n              self.graph.link_info.forEach((ls, j) => {\n                self.update_ref(ls[i]['el'], 'minus');\n                if (d3.select(ls[i]['el']).attr('display') !== 'none') {\n                  self.update_ref(d3.select(self.graph.state_info.state_cluster_info[j]['el']).select('rect').node(), 'minus');\n                }\n              });\n              self.update_ref(wclst['wordCloud'].bgHandle.node(), 'minus');\n            })\n            .on('click', function () {\n              // wclst['wordCloud'].selected = ~wclst['wordCloud'].selected;\n              wclst['wordCloud'].bgHandle.property('selected', ~wclst['wordCloud'].bgHandle.property('selected'))\n              self.graph.link_info.forEach((ls, j) => {\n                self.update_ref(ls[i]['el'], wclst['wordCloud'].bgHandle.property('selected') ? 'plus' : 'minus');\n                if (d3.select(ls[i]['el']).attr('display') !== 'none') {\n                  self.update_ref(d3.select(self.graph.state_info.state_cluster_info[j]['el']).select('rect').node(), wclst['wordCloud'].bgHandle.property('selected') ? 'plus' : 'minus');\n                }\n              });\n              self.update_ref(wclst['wordCloud'].bgHandle.node(), wclst['wordCloud'].bgHandle.property('selected') ? 'plus' : 'minus');\n            });\n          let myWordCloud = new WordCloud(tmp_g, wclst.width/2, wclst.height/2, 'rect', this.compare)\n            .transform( 'translate(' + [wclst.top_left[0] + wclst.width/2, wclst.top_left[1] + wclst.height/2] + ')')\n            .color(this.params.posColor);\n          myWordCloud.update(word_info[i].words_data);\n          myWordCloud.bgHandle.property('ref', 0)\n                              .property('selected', false)\n                              .classed('wordcloud', true);\n          wclst['wordCloud'] = myWordCloud;\n        }\n\n      });\n    }\n\n    erase_link() {\n      this.graph.link_info.forEach((ls) => {\n        ls.forEach((l) => {\n          d3.select(l['el'])\n          .transition()\n          .duration(500)\n          .style('opacity', 0)\n          .remove();\n        });\n      });\n    }\n\n    erase_word () {\n      this.graph.word_info.forEach((w) => {\n        w['wordCloud'].destroy();\n\n      });\n    }\n\n    erase_state() {\n      this.graph.state_info.state_cluster_info.forEach((s) => {\n        d3.select(s['el'])\n          .transition()\n          .duration(500)\n          .style('fill-opacity', 1e-6)\n          .style('opacity', 1e-6)\n          .remove();\n      });\n    }\n\n    createLink(d) {\n      return \"M\" + d.source.x + \",\" + d.source.y\n          + \"C\" + (d.source.x + d.target.x) / 2 + \",\" + d.source.y\n          + \" \" + (d.source.x + d.target.x) / 2 + \",\" + d.target.y\n          + \" \" + d.target.x + \",\" + d.target.y;\n    }\n\n    flatten(arr) {\n      return arr.reduce((acc, val) => {\n        return acc.concat(Array.isArray(val) ? this.flatten(val) : val);\n      }, []);\n    }\n\n    draw_link(g, graph) {\n      const link_info = graph.link_info;\n\n      const strength_extent = d3.extent(this.flatten(link_info).map((l) => l.strength));\n      const max_strength = Math.max(Math.abs(strength_extent[0]), Math.abs(strength_extent[1]));\n      const strength_bound = this.strengthThresholdPercent.map((t) => t * max_strength);\n\n      link_info.forEach((ls, i) => {\n        // const strengthRange = d3.extent(ls);\n        // console.log(`strength threshold is ${this.strengthThresholdPercent}`);\n        ls.forEach((l, j) => {\n          if (l['el']) {\n            d3.select(l['el'])\n              .attr('display', (Math.abs(l.strength) < strength_bound[0] || Math.abs(l.strength) > strength_bound[1]) ? 'none' : '')\n              .transition()\n              .duration(300)\n              .attr('stroke-width', this.strokeWidth(l.strength))\n              // .attr('stroke-width', l.strength !== 0 ? this.strokeWidth(l.strength) : 0)\n              .attr('d', this.createLink(l))\n          } else {\n            let tmp_path = g.append('path')\n              .classed('link', true)\n              .classed('active', false)\n              .classed(l.strength > 0 ? 'positive' : 'negative', true)\n              .property('ref', 0)\n              .attr('d', this.createLink(l))\n              .attr('stroke-width', this.strokeWidth(l.strength))\n              .attr('opacity', 0.15)\n              // .attr('stroke', l.strength > 0 ? this.linkColor[1] : this.linkColor[0])\n              .attr('display', (Math.abs(l.strength) < strength_bound[0] || Math.abs(l.strength) > strength_bound[1]) ? 'none' : '')\n\n            l['el'] = tmp_path.node();\n          }\n\n        });\n      });\n    }\n\n    draw(coCluster) {\n      let self = this;\n      // console.log(coCluster.colClusters.length);\n      const maxClusterSize = coCluster.colSizes.reduce((a, b) => Math.max(a,b));\n      const nCluster = coCluster.labels.length;\n      let clusterInterval2HeightRatio = 1.0;\n      // console.log(coCluster);\n      // console.log(`cluster number is ${nCluster}`);\n      this.params.computeParams(coCluster.labels.length, clusterInterval2HeightRatio, coCluster.colSizes);\n      // this.dx = this.params.wordCloudChord2ClusterDistance - (this.params.wordCloudChord2CenterDistance - maxClusterWidth / 2);\n      this.dx = this.stateClusterWordCloudDX;\n      this.dy = this.params.wordCloudChordLength / 2.0 - this.middle_line_y / 2;\n      // console.log(`maxClusterWidth is ${maxClusterWidth}`);\n      // console.log(`wordCloudChord2CenterDistance is ${this.params.wordCloudChord2CenterDistance}`);\n      console.log(`dx is ${this.dx}, dy is ${this.dy}`);\n\n      // this.dx = 0, this.dy = chordLength / 2;\n      const coClusterAggregation = coCluster.aggregation_info;\n      let state_info = this.calculate_state_info(coCluster, this.params.mode);\n\n      self.graph = {\n        state_info: state_info,\n        coCluster: coCluster,\n        sentence_info: [],\n      }\n      this.draw_state(this.hg, self.graph);\n\n      this.redraw_word_link();\n\n      this.translateX(0);\n    }\n\n    translateX(x) {\n      this.params.middleLineOffset += x;\n      this.hg.attr('transform', 'translate(' + [this.middle_line_x, this.middle_line_y] + ')');\n      this.wg.attr('transform', 'translate(' + [this.middle_line_x + this.dx, this.middle_line_y + this.dy] + ')');\n    }\n\n    adjustdx(newdx) {\n      this.dx = newdx;\n      this.wg.attr('transform', 'translate(' + [this.middle_line_x + this.dx, this.middle_line_y + this.dy] + ')');\n      this.redraw_word_link();\n    }\n\n    destroy() {\n      if (!this.graph) {\n        return;\n      }\n      this.deleteAllSentences();\n      this.erase_state();\n      this.erase_link();\n      this.erase_word();\n      this.topg.transition()\n        // .attr('transform')\n        .duration(300)\n        .attr('transform', 'scale(0.01, 0.01)')\n        .style('opacity', 1e-6)\n        .remove();\n      this.topg = this.svg.append('g');\n      this.hg = this.topg.append('g');\n      this.wg = this.topg.append('g');\n    }\n  }\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ClusterView.vue?0949442a","<template>\n  <div>\n    <h4 class=\"normal\">{{ header }}</h4>\n    <hr>\n    <svg :id='svgId' :width='width' :height='height'> </svg>\n    <svg :id='svgId+\"2\"' :width='width' :height='30'> </svg>\n  </div>\n</template>\n\n<style>\n  .content {\n    padding-left: 5px;\n    padding-right: 5px;\n  }\n</style>\n\n<script>\n  import * as d3 from 'd3';\n  import { Chart } from '../layout/chart';\n  import { bus, SELECT_UNIT, SELECT_WORD, SELECT_LAYER } from '../event-bus';\n  import dataServices from '../services/dataService.js'\n\n  const layoutParams = {\n    lineLength: 30,\n    wordWidth: 50,\n    interval: 20,\n    color: d3.scaleOrdinal(d3.schemeCategory10),\n  };\n\n  export default {\n    name: 'InfoBoard',\n    data(){\n      return {\n        // width: 0,\n        chart: null,\n        labelBoard: null,\n        shared: bus.state,\n        statistics: null,\n        layoutParams: layoutParams,\n        wordsStatistics: null,\n        unitsStatistics: null,\n        top_k: 4,\n      };\n    },\n    props: {\n      height: {\n        type: Number,\n        default: 600,\n      },\n      id: {\n        type: String,\n        default: 'info-board',\n      },\n      type: {\n        type: String,\n        default: 'state',\n      },\n      compare: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    computed: {\n      header: function() {\n        const typeStr = this.type === 'state' ? 'Hidden State' : 'Word';\n        return 'Info: ' + (this.shared.compare ? ('[' + this.selectedModel + '] ' + typeStr) : typeStr);\n      },\n      svgId: function () {\n        return this.id + '-svg';\n      },\n      selectedLayer: function () {\n        return this.compare ? this.shared.selectedLayer2 : this.shared.selectedLayer;\n      },\n      selectedModel: function () {\n        return this.compare ? this.shared.selectedModel2 : this.shared.selectedModel;\n      },\n      selectedState: function () {\n        return this.compare ? this.shared.selectedState2 : this.shared.selectedState;\n      },\n      selectedUnits: function () {\n        return this.type === 'state' ? (this.compare ? this.shared.selectedUnits2 : this.shared.selectedUnits) : 0;\n      },\n      selectedWords: function () {\n        return this.type === 'word' ? (this.compare ? this.shared.selectedWords2 : this.shared.selectedWords) : 0;\n      },\n      selectedNode: function() {\n        return this.type === 'word' ? (this.compare ? this.shared.selectedNode2 : this.shared.selectedNode) : 0;\n      },\n    },\n    watch: {\n      width: function () {\n        if (this.selectedLayer && this.selectedModel && this.selectedState) {\n          if (this.type === 'word' && this.wordsStatistics) this.repaintWord();\n          else if (this.type === 'state' && this.unitsStatistics) this.repaintState();\n        }\n      },\n      selectedUnits: function () {\n        if (this.selectedUnits) {\n          let model = this.selectedModel,\n            state = this.selectedState,\n            layer = this.selectedLayer;\n          const p = bus.loadStatistics(model, state, layer)\n            .then(() => {\n              this.statistics = bus.getStatistics(model, state, layer);\n              this.unitsStatistics = this.selectedUnits.map((unit, i) => {\n                const data = this.statistics.statesData[unit];\n                const dataArray = data.mean.map((_, j) => {\n                  return {\n                    mean: data.mean[j],\n                    range1: [data.low1[j], data.high1[j]],\n                    range2: [data.low2[j], data.high2[j]],\n                    word: data.words[j],\n                  };\n                });\n                dataArray.sort((a, b) => a.mean - b.mean);\n                dataArray.splice(this.top_k, dataArray.length - 2 * this.top_k);\n                return dataArray;\n              });\n              this.repaintState();\n            });\n        }\n      },\n      selectedWords: function() {\n        if (this.selectedWords) {\n          let model = this.selectedModel,\n            state = this.selectedState,\n            layer = this.selectedLayer;\n          const p = bus.loadStatistics(model, state, layer)\n            .then(() => {\n              this.statistics = bus.getStatistics(model, state, layer);\n              this.wordsStatistics = this.selectedWords.map((word, i) => {\n                const wordData = this.statistics.statOfWord(word.text);\n                wordData.color = this.selectedWords[i].color;\n                return wordData;\n              });\n              // console.log(this.statistics);\n              this.repaintWord();\n              // const wordsStatistics = this.statistics.statOfWord(this.selectedWords[0]).mean;\n            });\n        }\n      },\n      selectedNode: function() {\n        if (this.selectedNode) {\n          let model = this.selectedModel,\n            state = this.selectedState,\n            layer = this.selectedLayer;\n          const p = dataServices.getWordStatistics(model, state, layer, this.selectedNode.word, (response) => {\n            if (response.status === 200) {\n              const data = response.data;\n              data.word = data.words;\n              data.range1 = data.low1.map((low1, i) => [low1, data.high1[i]]);\n              data.range2 = data.low2.map((low2, i) => [low2, data.high2[i]]);\n              data.color = this.layoutParams.color(0);\n              const line = {mean: this.selectedNode.response, color: this.layoutParams.color(1), word: data.word + '(sentence)'};\n              this.wordsStatistics = [data, line];\n              console.log(this.selectedNode);\n              this.repaintWord();\n            }\n          });\n        }\n      },\n      compare: function () {\n        this.init();\n      },\n      type: function () {\n        this.init();\n      }\n    },\n    methods: {\n      init() {\n        if (this.chart) {\n          this.chart.clean();\n        }\n        if (this.labelBoard) {\n          this.labelBoard.selectAll('rect, text, path').remove();\n        }\n        this.chart = new Chart(d3.select(`#${this.svgId}`), this.width, this.height)\n          .background('lightgray', 0.0);\n        this.labelBoard = d3.select(`#${this.svgId}2`);\n      },\n      repaintWord() {\n        this.chart.clean()\n          .resize(this.width, this.height);\n        this.labelBoard.selectAll('rect, text, path').remove();\n        if (!this.wordsStatistics.length){\n          console.log('Painting no words');\n          return;\n        }\n        const layout = this.layoutParams;\n        const color = layout.color;\n        const labelLength = layout.lineLength + layout.wordWidth + layout.interval;\n\n        this.chart\n          .margin(20, 30, 20, 30)\n          .xAxis('dim')\n          .yAxis('response');\n        let sortIdx = this.wordsStatistics[0].sort_idx;\n        const interval = ~~(sortIdx.length / 200) + 1;\n        const ranges = range(0, sortIdx.length, interval);\n        sortIdx = ranges.map((i) => sortIdx[i]);\n        // console.log(range);\n        // console.log(sortIdx);\n        this.chart.line([[0,0], [this.wordsStatistics[0].mean.length,0]])\n          .attr('stroke', '#000');\n\n        this.wordsStatistics.forEach((wordData, i) => {\n          this.chart\n            .line(sortIdx.map((i) => wordData.mean[i]), (d, i) => i*interval, (d) => { return d; })\n            .attr('stroke-width', 1)\n            .attr('stroke', wordData.color)\n            .attr('stroke-opacity', 0.6);\n          if(wordData.range1){\n            this.chart\n              .area(sortIdx.map((i) => wordData.range1[i]), (d, i) => i*interval, (d) => d[0], (d) => d[1])\n              .attr('fill', wordData.color)\n              .attr('fill-opacity', 0.15)\n              .attr('stroke', wordData.color)\n              .attr('stroke-opacity', 0.1);\n          }\n          if(wordData.range2){\n            this.chart\n              .area(sortIdx.map((i) => wordData.range2[i]), (d, i) => i*interval, (d) => d[0], (d) => d[1])\n              .attr('fill', wordData.color)\n              .attr('fill-opacity', 0.15)\n              .attr('stroke', wordData.color)\n              .attr('stroke-opacity', 0.05);\n          }\n          // draw labels\n          this.labelBoard.append('rect')\n            .attr('x', labelLength*i + 20).attr('y', 10).attr('width', layout.lineLength).attr('height', 1)\n            .attr('fill', wordData.color);\n          this.labelBoard.append('text')\n            .attr('x', labelLength*i + 30 + layout.lineLength).attr('y', 15)\n            .text(wordData.word)\n            .style('font-size', 12);\n          if (i === 0) {\n            this.labelBoard.append('path')\n              .attr('d', 'M' + (30 + layout.lineLength) + ' 20 ' + 'H ' + (wordData.word.length*7 + 30 + layout.lineLength))\n              .style('stroke', wordData.color);\n          }\n        });\n        this.chart.draw();\n\n      },\n      repaintState() {\n        this.chart.clean()\n          .resize(this.width, this.height);\n        this.labelBoard.selectAll('path, text').remove();\n        if (!this.selectedUnits.length){\n          console.log('Painting no states');\n          return;\n        }\n        const xLabelWidth = 20;\n        const subChartWidth = (this.width-xLabelWidth)/this.unitsStatistics.length;\n        const top_k = this.top_k;\n\n        this.unitsStatistics.forEach((unitData, i) => {\n          const xLabel = i === this.unitsStatistics.length - 1 ? 'r' : ' '\n          const marginRight = i === this.unitsStatistics.length - 1 ? xLabelWidth : 0;\n          const subWidth = i === this.unitsStatistics.length - 1 ? subChartWidth + xLabelWidth : subChartWidth;\n          const subchart = this.chart.subChart(subWidth, this.height)\n            .xAxis(xLabel)\n            .yAxis('words');\n          subchart.axis.y.tickFormat((j) => {\n            // console.log(j);\n            if (-1 < j && j < top_k * 2)\n              return unitData[j].word;\n          }).tickValues(range(0,top_k*2,1));\n          subchart.axis.x.ticks(6);\n          subchart\n            .margin(20,marginRight,20,55)\n            .translate(subChartWidth*i, 0)\n            .rotate();\n          subchart\n            .box(unitData, 6, (d, j) => j, (d) => d.mean, (d) => d.range1, (d) => d.range2)\n            .attr('fill', 'steelblue')\n            .attr('stroke', 'black')\n            .attr('stroke-width', 0)\n            .attr('fill-opacity', 0.5);\n          // horizontal line\n          subchart.line([[top_k-0.5, subchart.extents[1][0]], [top_k-0.5, subchart.extents[1][1]]])\n            .style('stroke', '#333').style('stroke-dasharray', '5 5').style('stroke-opacity', 0.6);\n          const labelPos = subChartWidth*i + subChartWidth/2 - 6;\n          this.labelBoard.append('text')\n            .attr('x', labelPos).attr('y', 15)\n            .text('Dim: ' + this.selectedUnits[i])\n            .style('font-size', 12);\n          if (i === 0){\n            this.labelBoard.append('path')\n              .attr('d', 'M' + labelPos + ' 20 ' + 'H ' + (this.selectedUnits[0].toString().length*6 + 30 + labelPos))\n              .style('stroke', '#a36');\n          }\n        })\n        this.chart.draw();\n      },\n\n    },\n    mounted() {\n      // console.log(this.$el);\n      this.width = this.$el.clientWidth - 10;\n      this.init();\n      // register event listener\n      // this.register();\n\n      // test event\n      // bus.$on(SELECT_LAYER, () => {\n      //   setTimeout(() => {\n      //     if (this.type === 'word')\n      //       bus.$emit(SELECT_UNIT, 10, false);\n      //     // if (this.type === 'state')\n      //     //   bus.$emit(SELECT_WORD, 'he', false);\n      //   }, 1000);\n      //   setTimeout(() => {\n      //     if (this.type === 'word')\n      //       bus.$emit(SELECT_UNIT, 20, false);\n      //     // if (this.type === 'state')\n      //     //   bus.$emit(SELECT_WORD, 'she', false);\n      //   }, 4000);\n\n      // });\n\n    }\n  }\n\n  function getSortedStatesData(words) {\n\n  }\n\n  function range(start, end, interval = 1) {\n    const num = ~~((end - start -1) / interval) + 1;\n    return Array.from({length: num}, (v, i) => start + i * interval);\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// InfoBoard.vue?7879530a","<template>\n  <div>\n    <el-col :span=\"12\" class=\"col-bg\" :gutter=\"15\">\n      <info-board :type=\"type1\" :id=\"'info-board-1'\" :height=\"height\" :compare='compare'> </info-board>\n    </el-col>\n    <el-col :span=\"12\" class=\"col-bg\" :gutter=\"15\">\n      <info-board :type=\"type2\" :id=\"'info-board-2'\" :height=\"height\" :compare='false'> </info-board>\n    </el-col>\n  </div>\n</template>\n<style scoped>\n  .model-view {\n    text-align: left;\n    /*padding: 5px;*/\n  }\n\n  .content {\n    padding-left: 5px;\n    padding-right: 5px;\n  }\n</style>\n<script>\n  import { bus, SELECT_UNIT, SELECT_WORD, SELECT_SENTECE_NODE } from '../event-bus.js';\n  import InfoBoard from './InfoBoard';\n\n  export default{\n    name: 'InfoView',\n    components: { InfoBoard },\n    data() {\n      return {\n        shared: bus.state,\n        type1: 'state',\n        type2: 'word',\n      };\n    },\n    props: {\n      height: {\n        type: Number,\n        default: 300,\n      }\n    },\n    computed: {\n      compare: function() {\n        return this.shared.compare;\n      },\n    },\n    methods: {\n\n    },\n    mounted() {\n      bus.$on(SELECT_UNIT, (unit, compare) => {\n        if (!this.compare) return;\n        if (compare) {\n          this.type1 = 'state';\n        } else {\n          this.type2 = 'state';\n        }\n      });\n      bus.$on(SELECT_WORD, (word, compare) => {\n        if (!this.compare) return;\n        if (compare) {\n          this.type1 = 'word';\n        } else {\n          this.type2 = 'word';\n        }\n      });\n      bus.$on(SELECT_SENTECE_NODE, (node, compare) => {\n        if (!this.compare) return;\n        if (compare) {\n          this.type1 = 'word';\n        } else {\n          this.type2 = 'word';\n        }\n      });\n    }\n  }\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// InfoView.vue?716a8792","<template>\n  <div>\n    <h4 class=\"normal\">Main</h4>\n    <hr>\n    <cluster-view v-if=\"compare\" :width=\"width/2-15\" :height=\"height\" :compare='true'> </cluster-view>\n    <cluster-view :width=\"compare ? width/2-15 : width\" :height=\"height\" :compare='false'> </cluster-view>\n\n    <!--<test-view> </test-view>-->\n      <!--<project-view> </project-view>-->\n\n  </div>\n\n  <!--<el-tabs v-model=\"activeTab\" @tab-click=\"handleClick\" type=\"border-card\" height=800>\n\n    <el-tab-pane label=\"Cluster\" name=\"cluster\">\n      <cluster-view class=\"content\" :height=\"height\"> </cluster-view>\n    </el-tab-pane>\n    <el-tab-pane label=\"Test\" name=\"test\">\n      <test-view> </test-view>\n    </el-tab-pane>\n  </el-tabs>-->\n\n  <!--<el-tab-pane label=\"Project\" name=\"project\">\n      <project-view> </project-view>\n    </el-tab-pane>\n    <el-tab-pane label=\"Arc\" name=\"arc\">\n      <arc-view> </arc-view>\n    </el-tab-pane>-->\n\n</template>\n<style>\n  .content {\n    padding-left: 5px;\n    padding-right: 5px;\n  }\n</style>\n<script>\n  // import ModelView from 'components/ModelView';\n  import ProjectView from 'components/ProjectView';\n  import TestView from 'components/TestView';\n  import ArcView from 'components/ArcView';\n  import ClusterView from 'components/ClusterView';\n  import { bus } from '../event-bus';\n\n  export default {\n    name: \"MainView\",\n    data() {\n      return {\n        activeTab: 'project',\n        shared: bus.state,\n        width: 800,\n      };\n    },\n    props: {\n      height: {\n        type: Number,\n        default: 700,\n      }\n    },\n    methods: {\n      handleClick(tab, event) {\n        // console.log(tab, event);\n        return;\n      }\n    },\n    computed: {\n      // width: function () {\n      //   if (this.$el) {\n      //     console.log(this.$el.clientWidth);\n      //     return this.$el.clientWidth;\n      //   }\n      //   return 800;\n      // },\n      compare: function () {\n        return this.shared.compare;\n      }\n    },\n    components: {\n      ProjectView,\n      TestView,\n      ArcView,\n      ClusterView,\n    },\n    mounted() {\n      this.width = this.$el.clientWidth;\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// MainView.vue?53b6d424","<template>\n  <div class=\"grid-content\">\n    <el-form label-position=\"left\" label-width=\"30%\">\n      <!--Model Selector-->\n      <el-form-item :label=\"compare ? 'Model 2' : 'Model'\">\n        <el-select v-model=\"selectedModel\" placeholder=\"Select A Model\" size=\"small\" style=\"width: 80%;\">\n          <el-option v-for=\"(model, idx) in availableModels\" :value=\"model\" :label=\"model\"></el-option>\n        </el-select>\n        <el-button v-if=\"compare\" @click=\"toggle\" icon=\"delete\" size=\"small\"></el-button>\n      </el-form-item>\n\n      <!--Model Configs as tags-->\n      <div v-if=\"config\" class=\"el-form-item\">\n        <el-tag v-for=\"key in Object.keys(config)\" :type=\"colorType\">{{key}}: {{config[key]}}</el-tag>\n      </div>\n      <hr v-if=\"config\" class=\"local-hr\">\n\n      <!--Radio control for selecting state type-->\n      <el-form-item label=\"Hidden State\" v-if=\"states.length\">\n        <el-radio-group v-model=\"selectedState\" size=\"small\">\n          <el-radio-button v-for=\"state in states\" :label=\"state\">{{stateName(state)}}</el-radio-button>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"Layer\" v-if=\"layerNum\">\n        <el-input-number size=\"small\" v-model=\"selectedLayer\" :max=\"layerNum-1\" style=\"width: 100px; margin-top: 5px\"></el-input-number>\n      </el-form-item>\n      <el-form-item label=\"POS Tag\" v-if=\"states.length\">\n        <el-switch v-model=\"posSwitch\" on-text=\"\" off-text=\"\">\n        </el-switch>\n        <span class=\"align\" style='margin-left: 30px'>Align</span>\n        <el-switch v-model=\"mode\" on-text=\"\" off-text=\"\" @change=\"layoutChange\">\n        </el-switch>\n      </el-form-item>\n\n      <!--Sentence Editor-->\n      <el-form-item label=\"Sentences\" v-if=\"selectedModel\">\n        <el-input\n          class=\"input-new-tag\"\n          v-if=\"inputVisible\"\n          v-model=\"inputValue\"\n          ref=\"saveTagInput\"\n          size=\"small\"\n          @keyup.enter.native=\"handleInputConfirm\"\n          @blur=\"handleInputConfirm\"\n        >\n        </el-input>\n        <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Sentence</el-button>\n      </el-form-item>\n      <div class=\"sentence-container\" v-if=\"sentences.length\">\n        <el-tag v-for=\"sentence in sentences\" :closable=\"true\" @close=\"closeSentence(sentence)\" :type=\"colorType\">\n          <a>{{sentence}}</a>\n        </el-tag>\n      </div>\n      <hr v-if=\"selectedState\" class=\"local-hr\">\n\n      <!--Controls for the layout-->\n      <el-form-item label=\"Cluster Num\" v-if=\"selectedState\">\n        <el-slider v-model=\"layout.clusterNum\" :min=\"2\" :max=\"20\" style=\"width: 80%\" @change=\"layoutChange\"></el-slider>\n      </el-form-item>\n      <el-form-item label=\"Stroke Width\" v-if=\"selectedState\" style=\"margin-top: -7px; padding-bottom: -10px\">\n        <el-slider v-model=\"layout.strokeControlStrength\" :min=\"0\" :max=\"maxWidth\" :step=\"0.1\" style=\"width: 80%\" @change=\"layoutChange\"></el-slider>\n      </el-form-item>\n      <el-form-item label=\"Link Filter\" v-if=\"selectedState\" style=\"margin-top: -7px\">\n        <el-slider v-model=\"layout.linkFilterThreshold\" range :min=\"0\" :max=\"1\" :step=\"0.0001\" @change=\"layoutChange\" style=\"width: 80%\"></el-slider>\n      </el-form-item>\n      <el-form-item label=\"State Clip\" v-if=\"selectedState\" style=\"margin-top: -7px\">\n        <el-slider v-model=\"layout.stateClip\" :min=\"0\" :max=\"10\" :step=\"1\" @change=\"layoutChange\" style=\"width: 80%\"></el-slider>\n      </el-form-item>\n      <!--Color Picker for temporal use-->\n      <!--<el-form-item label=\"colorPicker\" v-if=\"selectedState\">\n        <el-color-picker label=\"positive\" v-model=\"color[1]\" @change=\"colorChange\"></el-color-picker>\n        <el-color-picker label=\"negative\" v-model=\"color[0]\" @change=\"colorChange\"></el-color-picker>\n      </el-form-item>-->\n    </el-form>\n  </div>\n</template>\n<style>\n  .el-form-item {\n    margin-bottom: 5px;\n    margin-top: -5px;\n    font-size: 12px;\n  }\n\n  .align {\n    color: rgb(72, 87, 106);\n  }\n\n  .el-form-item__content{\n    line-height: 30px !important;\n  }\n\n  label {\n    font-size: 12px !important;\n  }\n\n  .el-tag {\n    margin-right: 5px;\n    display: inline-block;\n    /*width: 90%;*/\n    white-space: normal;\n    height: auto;\n    line-height: 18px;\n  }\n\n  .local-hr {\n    width: 95%;\n    font-size: 1px;\n    color: gray;\n    opacity: 0.5;\n    line-height: 1px;\n    margin-top: 8px;\n    margin-bottom: 4px;\n  }\n\n  .sentence-container {\n    width: 90%;\n    margin-left: 10px;\n  }\n</style>\n<script>\n  import { bus, SELECT_MODEL, SELECT_STATE, SELECT_LAYER, CHANGE_LAYOUT, EVALUATE_SENTENCE, CLOSE_SENTENCE, SELECT_COLOR} from '../event-bus';\n\n  export default {\n    name: 'ModelConfig',\n    data() {\n      return {\n        shared: bus.state,\n        states: [],\n        selectedState: null,\n        selectedModel: null,\n        selectedLayer: null,\n        posSwitch: false,\n        config: null,\n        layout: {\n           clusterNum: 2,\n           strokeControlStrength: 100,\n          //  strokeControlStrength: 8,\n           linkFilterThreshold: [0, 1],\n          //  linkFilterThreshold: [0.2, 1],\n           stateClip: 1,\n           mode: 'width',\n        },\n        sentences: [],\n        inputVisible: false,\n        inputValue: '',\n        mode: false,\n        color: ['#09adff', '#ff5b09'],\n      };\n    },\n    props: {\n      toggle: {\n        type: Function,\n        default: () => { return; },\n      },\n      compare: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    computed: {\n      availableModels: function () { // model list\n        return this.shared.availableModels;\n      },\n      colorType: function() {\n        return this.compare ? 'gray' : '';\n      },\n      layerNum: function() {\n        if (this.config) return this.config.LayerNum;\n        return 0;\n      },\n      maxWidth: function() {\n        // if (this.selectedModel.substring(0, 4) === 'YELP' || this.selectedModel.substring(0, 4) === 'IMDB') return 100;\n        return 20;\n      }\n    },\n    watch: {\n      selectedModel: function (selectedModel) {\n        if (!selectedModel) return;\n        bus.loadModelConfig(selectedModel) // make sure the bus has got the config data\n          .then(() => {\n            const states = bus.availableStates(selectedModel);\n            if (states) {\n              this.states = states;\n              this.selectedState = this.states[0]; // reset\n              const config = bus.state.modelConfigs[selectedModel];\n              this.config = {\n                Cell: config.model.cell_type,\n                LayerNum: config.model.cells.length,\n                LayerSize: config.model.cells[0].num_units,\n              };\n              this.posSwitch = false;\n              this.selectedLayer = this.config.LayerNum - 1;\n              this.sentences = [];\n              bus.$emit(SELECT_MODEL, this.selectedModel, this.compare);\n              bus.$emit(CHANGE_LAYOUT, this.layout, this.compare);\n            }\n          }).catch((v) => console.log(v));\n      },\n      selectedState: function (newState) {\n        if (newState === 'state' || newState === 'state_c' || newState === 'state_h') {\n          bus.$emit(SELECT_STATE, this.selectedState, this.compare);\n        }\n      },\n      selectedLayer: function (newLayer) {\n        bus.$emit(SELECT_LAYER, newLayer, this.compare);\n      },\n      posSwitch: function(pos) {\n        if (this.compare) this.shared.renderPos2 = pos;\n        else this.shared.renderPos = pos;\n      }\n      // layout: function (newLayout) {\n      //   console.log('layout changed.')\n      //   bus.$emit(CHANGE_LAYOUT, newLayout, this.compare);\n      // }\n    },\n    methods: {\n      stateName(state) {\n        switch (state) {\n          case 'state_c': return 'cell state';\n          case 'state_h': return 'hidden state';\n          case 'state': return 'hidden state';\n          default: return 'Unknown';\n        }\n      },\n      layoutChange() {\n        console.log(\"Layout changed\")\n        // copy to a new one to force change\n        this.layout.mode = this.mode ? 'width' : 'height';\n        const layout = Object.assign({}, this.layout)\n        bus.$emit(CHANGE_LAYOUT, layout, this.compare);\n      },\n      closeSentence(sentence) {\n        const idx = this.sentences.indexOf(sentence);\n        if (idx !== -1){\n          bus.$emit(CLOSE_SENTENCE, sentence, this.compare);\n          this.sentences.splice(idx, 1);\n        }\n      },\n      showInput() {\n        this.inputVisible = true;\n        this.$nextTick(_ => {\n          this.$refs.saveTagInput.$refs.input.focus();\n        });\n      },\n\n      handleInputConfirm() {\n        let inputValue = this.inputValue;\n        if (inputValue) {\n          bus.$emit(EVALUATE_SENTENCE, inputValue, this.compare);\n          this.sentences.push(inputValue);\n        }\n        this.inputVisible = false;\n        this.inputValue = '';\n      },\n\n      colorChange(color) {\n        bus.$emit(SELECT_COLOR, this.color);\n        // console.log('color changed to ' + color);\n      }\n    },\n    mounted() {\n      // this.activeSentences = this.sentences.map((d, i) => {\n      //   return true;\n      // });\n    }\n  };\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ModelConfig.vue?3226e355","<template>\n  <div>\n    <h4 class=\"normal\">Models</h4>\n    <hr>\n    <div class=\"content model-view\">\n      <model-config :compare=\"false\"> </model-config>\n      <hr v-if=\"compare\">\n      <model-config v-if=\"compare\" :compare=\"true\" :toggle=\"toggleCompare\"> </model-config>\n      <hr>\n      <el-button @click=\"toggleCompare\" size=\"small\">Compare Model</el-button>\n    </div>\n  </div>\n</template>\n<style scoped>\n  .model-view {\n    text-align: left;\n    /*padding: 5px;*/\n  }\n\n  .content {\n    padding-left: 5px;\n    padding-right: 5px;\n  }\n</style>\n<script>\n  import { bus, SELECT_MODEL, SELECT_STATE } from '../event-bus.js';\n  import ModelConfig from './ModelConfig';\n\n  export default{\n    name: 'ModelView',\n    components: { ModelConfig },\n    data() {\n      return {\n        compare: false,\n        shared: bus.state,\n      };\n    },\n    mounted() {\n      this.getAvailableModels();\n    },\n    computed: {\n      // availableModels: function() { // model list\n      //   return this.shared.availableModels;\n      // },\n    },\n    methods: {\n      getAvailableModels() {\n        console.log(\"getting available models...\");\n        bus.loadAvailableModels();\n        if(this.shared.availableModels) return;\n        setTimeout(() => {\n          this.getAvailableModels();\n        }, 2000);\n      },\n      modelColor(i) {\n        return i === 1 ? 'primary' : 'success';\n      },\n      toggleCompare() {\n        this.compare = !this.compare;\n        if (!this.compare) {\n          this.selectedModel2 = null;\n          this.selectedState2 = null;\n          this.states2 = [];\n          bus.$emit(SELECT_MODEL, null, true);\n          bus.$emit(SELECT_STATE, null, true);\n\n        }\n      },\n      stateName(state) {\n        switch(state) {\n          case 'state_c': return 'c_state';\n          case 'state_h': return 'h_state';\n          case 'state': return 'h_state';\n          default: return 'Unknown';\n        }\n      }\n    },\n    watch: {\n      // selectedModel: function(selectedModel){\n      //   bus.loadModelConfig(selectedModel) // make sure the bus has got the config data\n      //     .then(() => {\n      //       const states = bus.availableStates(selectedModel);\n      //       if (states){\n      //         this.states = states;\n      //         this.selectedState = null; // reset\n      //         const config = bus.state.modelConfigs[selectedModel];\n      //         this.config = {\n      //           Cell: config.model.cell_type,\n      //           LayerNum: config.model.cells.length,\n      //           LayerSize: config.model.cells[0].num_units,\n      //         };\n      //       // this.configTree = json2tree(config).children;\n      //         bus.$emit(SELECT_MODEL, this.selectedModel, this.selectedModel2);\n      //       }\n      //     });\n      // },\n      // selectedModels: function(selectedModels){\n      //   if (!selectedModel) return;\n      //   bus.loadModelConfig(selectedModel) // make sure the bus has got the config data\n      //     .then(() => {\n      //       const states = bus.availableStates(selectedModel);\n      //       if (states){\n      //         this.states2 = states;\n      //         this.selectedState2 = null; // reset\n      //       // const config = bus.state.modelConfigs[selectedModel];\n      //       // this.configTree = json2tree(config).children;\n      //         bus.$emit(SELECT_MODEL, this.selectedModel, this.selectedModel2);\n      //       }\n      //     });\n      // },\n      // selectedState: function (newState) {\n      //   if (newState === 'state' || newState === 'state_c' || newState === 'state_h') {\n      //     bus.$emit(SELECT_STATE, this.selectedState, this.selectedState2);\n      //   }\n      // },\n      // selectedState2: function (newState) {\n      //   if (newState === 'state' || newState === 'state_c' || newState === 'state_h') {\n      //     bus.$emit(SELECT_STATE, this.selectedState, this.selectedState2);\n      //   }\n      // },\n    }\n  }\n\n  function json2tree(json){\n    let data = {label: '', children: []};\n    if (isObject(json)) {\n      Object.keys(json).map( key => {\n        let child = json2tree(json[key]);\n        child.label = key + child.label; // assign key back\n        if (Array.isArray(json)){\n          child.label = child.children[0].label;\n        }\n        data.children.push(child);\n      });\n    }\n    else{\n      data.label = \": \" + json;\n      delete data.children;\n    }\n    return data;\n  }\n\n  function isObject(thing){\n    return (typeof thing === \"object\") && (thing !== null);\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// ModelView.vue?48621188","<template>\n  <svg :id=\"svgId\" :width=\"width\" :height=\"height\" class=\"project\"> </svg>\n</template>\n<script>\n  import * as d3 from 'd3';\n  import { bus } from 'event-bus';\n  import { kmeans } from '../algorithm/cluster';\n\n  const defaultConfig = {\n    rScale: 0.3,\n    radius: 3.0,\n    opacity: 0.4,\n    opacityHigh: 1.0,\n    defaultAlpha: 0.35,\n    repel: -5,\n    strength_thred: 0.6,\n    color: d3.scaleOrdinal(d3.schemeCategory10),\n    color2: d3.scaleOrdinal(d3.schemeCategory20),\n    clusterNum: 0,\n  };\n\n  export default {\n    name: 'ProjectGraph',\n    defaultConfig: defaultConfig,\n    data() {\n      return {\n        fdGraph: null,\n        // defaultConfig: defaultConfig,\n      };\n    },\n    props: {\n      width: {\n        type: Number,\n        default: 800,\n      },\n      height: {\n        type: Number,\n        default: 800,\n      },\n      graphData: {\n        type: Object,\n        required: true,\n      },\n      svgId: {\n        type: String,\n        required: true,\n      },\n      config: {\n        type: Object,\n        default: null,\n      },\n      ready: { // a small workaround of getting ready signal form parent\n        type: Boolean,\n        default: false,\n      },\n    },\n    watch: {\n      width: function (newWidth) {\n        this.fdGraoh.updateScale();\n      },\n      height: function (newWidth) {\n        this.fdGraph.updateScale();\n      },\n      ready: function (newReady) {\n        if (newReady) {\n          this.reset();\n        }\n      },\n    },\n    methods: {\n      reset() {\n        // const config = this.config === null ? defaultConfig : this.config;\n        if (this.fdGraph) {\n          this.fdGraph.destroy();\n        }\n        const svg = document.getElementById(this.svgId);\n        this.fdGraph = new ForceDirectedGraph(svg, this.config);\n        normalize(this.graphData.states);\n        let extents = calExtent(this.graphData.states);\n        this.fdGraph.updateScale(extents);\n        this.fdGraph.buildGraph(this.graphData.strength, this.graphData.states);\n        this.fdGraph.insertElements();\n        this.fdGraph.initSimulation();\n        this.fdGraph.startSimulation();\n      },\n      refreshGraph(ready) {\n        if (ready){\n          this.fdGraph.refresh();\n          this.fdGraph.clusterStates(this.graphData.signature);\n        }\n      }\n    },\n    mounted() {\n      // register event listeners\n      bus.$on('REFRESH_PROJECT_GRAPH', this.refreshGraph);\n      // this.reset();\n    }\n  };\n\n  function normalize(points) {\n    const extents = calExtent(points);\n    const factor_x = 100 / (extents[0][1] - extents[0][0]);\n    const factor_y = 100 / (extents[1][1] - extents[1][0]);\n    const factor = Math.max(factor_x, factor_y)\n    for (let i = 0; i < points.length; i++) {\n      points[i].coords[0] *= factor;\n      points[i].coords[1] *= factor;\n    }\n  }\n\n  class ForceDirectedGraph {\n    constructor(svg, params, strengthfn) {\n      let self = this;\n      this.svg = d3.select(`#${svg.id}`);\n      this.svgEl = svg;\n      this.graph = null;\n      this.simulation = null;\n      this.stateNodes = null;\n      this.wordNodes = null;\n      this.links = null;\n      this.scale = { x: null, y: null, invert_x: null, invert_y: null };\n      this.extents = null;\n      this.strengthfn = strengthfn || (v => { return (v / 2) ** 3; });\n      this.params = params;\n      // Object.keys(params).forEach((p) => { self[p] = params[p]; });\n    }\n\n    get width() {\n      return this.svgEl.clientWidth;\n    }\n\n    get height() {\n      return this.svgEl.clientHeight;\n    }\n\n    buildGraph(words, states) {\n      let self = this;\n      // initialize Nodes and Links\n      // console.log(\"initializing stateNodes\")\n      states.forEach(function (e) {\n        e.id = \"\" + e.layer + \"-\" + e.state_id;\n        e.fx = e.coords[0];\n        e.fy = e.coords[1];\n        e.links = [];\n        // e.force = -200;\n      });\n      // console.log(\"initializing wordNodes\")\n      words.forEach(function (e) {\n        e.id = e.word;\n        e.links = [];\n        // e.force = 0;\n      });\n      // console.log(\"initializing nodeLinks\")\n\n      let layers = Array.from(new Set(states.map(function (d) { return d.layer }))).sort();\n      // console.log(layers)\n      let links = [];\n      let id2states = {};\n      states.forEach(function (d) { id2states[d.id] = d });\n      words.forEach(function (node) {\n        let i = 0;\n        node.strength.forEach(function (strengths) {  // the strength is stored as a list per layer's states\n          let j = 0;  // state_id counter\n          strengths.forEach(function (f) {\n            let intensity = f;\n            if (Math.abs(intensity) > self.params.strength_thred) {  // a threshold strength\n              // create link\n              let link = {\n                source: \"\" + layers[i] + \"-\" + j,  // the id of the stateNode\n                target: node.id,\n                strength: self.strengthfn(Math.abs(intensity)),\n                type: Math.sign(f)  // negative or positive strength\n              };\n              link._source = id2states[link.source];\n              link._target = node;\n              // add link to links array\n              links.push(link);\n              // add link to source and target nodes for reference\n              id2states[link.source].links.push(link);\n              node.links.push(link);\n            }\n            j++;\n          });\n          i++;\n        });\n      });\n      console.log(\"done building graph\")\n      this.graph = {\n        nodes: words.concat(states),\n        links: links,\n        id2states: id2states,\n        wordNodes: words,\n        stateNodes: states\n      };\n    }\n\n    initSimulation() {\n      var repelForce = d3.forceManyBody().strength(-30).distanceMax(4); // the force that repel words apart\n      var init = repelForce.initialize;\n      repelForce.initialize = function (nodes) {\n        init(nodes.filter(function (d) { d.hasOwnProperty(\"word\") })); // only apply between word Nodes\n      }\n      // var collideForce = d3.forceManyBody().strength(this.params.repel).distanceMax(10);\n      var collideForce = d3.forceCollide().strength(0.5).radius(1);\n      this.simulation = d3.forceSimulation().alpha(this.params.defaultAlpha)\n        .force(\"link\", d3.forceLink() //.iterations(4)\n          .id((d) => { return d.id; })\n          .distance((l) => { return l.type < 0 ? 50 : 5; })\n          .strength((d) => { return d.strength }))\n        .force(\"collide\", collideForce)\n        .force(\"charge\", repelForce);\n    }\n\n    insertElements() {\n      let self = this;\n      var g_states = this.svg.append('g')\n        .attr('class', 'states');\n      this.stateNodes = g_states.selectAll('circle')\n        .data(this.graph.stateNodes)\n        .enter().append(\"circle\")\n        // .attr(\"cx\", function(d) { return d.fx; })\n        // .attr(\"cy\", function(d) { return d.fy; })\n        .attr(\"r\", function (d) {\n          if (d.links.length > 0)\n            return d.links.length * self.params.rScale + self.params.radius;\n          return 0;\n        })\n        .style(\"fill\", function (d, i) { return self.params.color(d.label); })\n        .classed(\"active\", false)\n        .on(\"mouseover\", d => mouseover(d, self))\n        .on(\"mouseout\", d => mouseout(d, self))\n        .on(\"click\", d => clickState(d, self));\n\n      this.stateNodes.append(\"title\")\n        .text(function (d) { return d.id });\n      //.style({opacity:'1.0'});\n\n      // append a group for links\n      this.links = this.svg.append(\"g\")\n        .attr(\"class\", \"links\")\n        .selectAll(\"line\")\n        .data(this.graph.links)\n        .enter().append(\"line\")\n        .classed(\"active\", false);\n\n      // append a group for text nodes\n      this.wordNodes = this.svg.append(\"g\")\n        .attr(\"class\", \"words\")\n        .selectAll(\"text\")\n        .data(this.graph.wordNodes)\n        .enter().append(\"text\")\n        .classed(\"active\", false)\n        .call(d3.drag()\n          .on(\"start\", d => {\n            if (!d3.event.active) self.simulation.alphaTarget(self.params.defaultAlpha).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n            // graph.links.forEach( function(d) {d.active = false; });\n            d.links.forEach(function (d) { d.active = true; });\n            refreshLinkStyle(self);\n          })\n          .on(\"drag\", d => {\n            d.fx = self.scale.invert_x(d3.mouse(self.svgEl)[0]);\n            d.fy = self.scale.invert_y(d3.mouse(self.svgEl)[1]);\n          })\n          .on(\"end\", d => {\n            if (!d3.event.active) self.simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n            d.links.forEach(function (d) { d.active = false; });\n            refreshLinkStyle(self);\n          }))\n        .text(function (d) { return d.id });\n      // console.log(this.links)\n\n      refreshLinkStyle(self);\n      refreshWordStyle(self);\n      refreshStateStyle(self);\n    }\n\n    startSimulation() {\n      let self = this;\n      self.simulation\n        .nodes(self.graph.nodes)\n        .on(\"tick\", () => self.ticked(self.links, self.wordNodes, self.stateNodes));\n\n      self.simulation.force(\"link\")\n        .links(self.graph.links);\n    }\n\n    ticked(links, wordNodes, stateNodes) {\n      // console.log(this.scale)\n      let _graph = this;\n      links\n        .attr(\"x1\", function (d) { return _graph.scale.x(d.source.x); })\n        .attr(\"y1\", function (d) { return _graph.scale.y(d.source.y); })\n        .attr(\"x2\", function (d) { return _graph.scale.x(d.target.x); })\n        .attr(\"y2\", function (d) { return _graph.scale.y(d.target.y); });\n\n      wordNodes\n        .attr(\"x\", function (d) { return _graph.scale.x(d.x); })\n        .attr(\"y\", function (d) { return _graph.scale.y(d.y); });\n\n      stateNodes\n        .attr(\"cx\", function (d) { return _graph.scale.x(d.x); })\n        .attr(\"cy\", function (d) { return _graph.scale.y(d.y); });\n    }\n\n    updateScale(extents) {\n      if (extents) {\n        this.extents = extents;\n      }\n      let width = this.width, height = this.height;\n      let xExtent = this.extents[0],\n        yExtent = this.extents[1];\n      let xCenter = (xExtent[0] + xExtent[1]) / 2,\n        yCenter = (yExtent[0] + yExtent[1]) / 2;\n      let scaleFactor = 0.9 * Math.min(width / (xExtent[1] - xExtent[0]), height / (yExtent[1] - yExtent[0]));\n      this.scale.x = function (_x) {\n        return (_x - xCenter) * scaleFactor + width / 2;\n      };\n      this.scale.y = function (_y) {\n        return (yCenter - _y) * scaleFactor + height / 2;\n      };\n      this.scale.invert_x = function (_x) {\n        return (_x - width / 2) / scaleFactor + xCenter;\n      };\n      this.scale.invert_y = function (_y) {\n        return yCenter - (_y - height / 2) / scaleFactor;\n      };\n    }\n\n    clusterStates(stateSignature) {\n      const clusterNum = this.params.clusterNum;\n      if (clusterNum < 2)\n        return;\n      const clusterAssignments = kmeans(stateSignature, clusterNum, 1000);\n      this.graph.stateNodes.forEach( (node, i) => {\n        node.cluster = clusterAssignments[i];\n      });\n      this.stateNodes.style('fill', (d, i) => {\n        if (clusterNum < 11)\n          return this.params.color(d.cluster);\n        return this.params.color2(d.cluster);\n      });\n    }\n\n    destroy() {\n      console.log(`Destroying Graph ${this.svgEl.id}`)\n      this.simulation.nodes([]);\n      this.simulation.force(\"link\").links([]);\n      this.links.remove();\n      this.stateNodes.remove();\n      this.wordNodes.remove();\n      // this.graph;\n    }\n\n    refresh() {\n      refreshLinkStyle(this);\n      refreshStateStyle(this);\n      refreshWordStyle(this);\n    }\n\n  };\n\n  function calExtent(points) {\n    var xExtent = d3.extent(points, function (d) { return d.coords[0] }),\n      yExtent = d3.extent(points, function (d) { return d.coords[1] });\n    return [xExtent, yExtent]\n  }\n\n  function mouseover(d, g) {\n    if (d.active) return;\n    d3.select(this).classed(\"active\", true);\n    d.links.forEach(function (l) {\n      l.active = true;\n      l._target.active = true;\n    });\n    refreshLinkStyle(g);\n    refreshWordStyle(g);\n  }\n\n  function mouseout(d, g) {\n    if (d.active) return;\n    d3.select(this).classed(\"active\", false);\n    d.links.forEach(function (l) {\n      l.active = false;\n      l._target.active = false;\n    });\n    refreshLinkStyle(g);\n    refreshWordStyle(g);\n  }\n\n\n  function clickState(d, g) {\n    let isActive = d.active;\n    if (isActive) {\n      d.active = false;\n      mouseout(d, g);\n    }\n    else {\n      mouseover(d, g);\n      d.active = true;\n    }\n    refreshLinkStyle(g);\n    refreshWordStyle(g);\n    d3.select(this).classed(\"active\", d.active);\n  }\n\n  function refreshLinkStyle(g) {\n    g.links.classed(\"active\", function (d) { return d.active; })\n      .style(\"opacity\", function (d) {\n        return d.strength * (d.active ? g.params.opacityHigh : g.params.opacity);\n      })\n      .style(\"stroke\", function (d) {\n        if (d.active)\n          return \"#6b7\"\n        if (d.type < 0)\n          return \"#68b\";\n        return \"#c66\";\n      });\n  }\n\n  function refreshStateStyle(g) {\n    g.stateNodes.classed(\"active\", function (d) { return d.active; });\n    // stateNodes.attr('r', function(d){ return d.links.length * rScale + radius})\n  }\n\n  function refreshWordStyle(g) {\n    g.wordNodes.classed(\"active\", function (d) { return d.active; })\n  }\n\n</script>\n<style>\n  .links .active {\n    stroke-width: 3;\n  }\n\n  .links {\n    stroke-width: 1.5;\n    pointer-events: none;\n  }\n\n  .states .active {\n    stroke-width: 2.0;\n    stroke: black;\n    opacity: 1.0;\n  }\n\n  .states {\n    stroke-width: 0.0;\n    opacity: 0.7;\n  }\n\n  .words .active {\n    stroke-width: 0.5;\n    stroke: black;\n    opacity: 1.0;\n  }\n\n  .words {\n    font-size: 13;\n    opacity: 0.8;\n    stroke: black;\n    stroke-width: 0;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ProjectGraph.vue?1b20cc84","<template>\n  <div class=\"project\">\n    <!--<div class=\"header\">\n      <el-radio-group v-model=\"selectedState\" size=\"small\">\n        <el-radio-button v-for=\"state in states\" :label=\"state\"></el-radio-button>\n      </el-radio-group>\n    </div>-->\n    <project-graph :svg-id=\"paneId(model, selectedState)\" :width=\"width\" :height=\"height\" :graph-data=\"graphData\" :ready=\"ready\" :config=\"config\">\n    </project-graph>\n    <div class=\"config\">\n      <!--<el-form :model=\"config\" :inline=\"true\">-->\n      <el-col :span=\"4\">\n        <span>Cluster No.</span>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-slider v-model=\"config.clusterNum\" :min=\"1\" :max=\"20\" @change=\"configWatcher\"></el-slider>\n      </el-col>\n      <el-col :span=\"4\">\n        <span>Opacity</span>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-slider v-model=\"config.opacity\" :max=\"1\" :step=\"0.05\" @change=\"configWatcher\" :width=\"100\"></el-slider>\n      </el-col>\n      <!--</el-form>-->\n    </div>\n\n  </div>\n</template>\n<script>\n  import * as d3 from 'd3';\n  import dataService from '../services/dataService';\n  import { bus, SELECT_MODEL } from 'event-bus';\n  import ProjectGraph from 'components/ProjectGraph';\n\n  export default {\n    name: 'ProjectView',\n    props: {\n      width: {\n        type: Number,\n        default: 800,\n      },\n      height: {\n        type: Number,\n        default: 600,\n      },\n    },\n    data() {\n      const drawConfig = Object.assign({}, ProjectGraph.defaultConfig); // get a copy\n      return {\n        model: '',\n        // selectedState: '',\n        states: '',\n        ready: false,\n        graphData: { states: null, strength: null },\n        config: drawConfig,\n        cache: {},\n        shared: bus.state,\n      };\n    },\n    components: { ProjectGraph },\n    computed: {\n      selectedState: function () {\n        return this.shared.selectedState;\n      }\n    },\n    watch: {\n      selectedState: function (newState, oldState) {\n        bus.state.selectedState = newState;\n        if (newState === oldState) {\n          return;\n        }\n        if (newState === 'state' || newState === 'state_c' || newState === 'state_h') {\n          this.reset();\n        }\n      },\n    },\n\n    methods: {\n\n      paneId(model, state) {\n        return `${model}-${state}-svg`;\n      },\n\n      reset() { // reset the whole graph\n        this.ready = false; // reset ready signal\n        delete this.graphData.signature; // reset signature data\n        this.config = Object.assign({}, ProjectGraph.defaultConfig); // reset controlings\n        if(this.selectedState === 'state'){ //hack\n          this.config.strength_thred = 0.9;\n        }\n        if(this.selectedState === 'state_h'){\n          this.config.strength_thred = 0.5;\n        }\n        if(this.model === 'IMDB'){\n          this.config.strength_thred = 0.0;\n          this.config.strengthFn = (v => { return (v * 30) ** 2; });\n          this.config.farDistance = 120;\n        }\n        const cacheTag = this.paneId(this.model, this.selectedState);\n        if (Object.prototype.hasOwnProperty.call(this.cache, cacheTag)) { // already has the cache data\n          Object.assign(this.graphData, this.cache[cacheTag]);\n          setTimeout(() => { this.ready = true; }, 100);\n          return;\n        }\n        // request for data\n        const p1 = dataService.getProjectionData(this.model, this.selectedState, {}, response => {\n          this.graphData.states = response.data;\n          console.log('states data loaded');\n        });\n        const p2 = dataService.getStrengthData(this.model, this.selectedState, { top_k: 200 }, response => {\n          const strengthData = response.data;\n          this.graphData.strength = [strengthData[163]].concat(strengthData.slice(20, 40)); //.concat(strengthData.slice(170, 190));\n          console.log('strength data loaded');\n        });\n        const pAll = Promise.all([p1, p2]).then(values => {\n          this.cache[cacheTag] = { states: this.graphData.states, strength: this.graphData.strength }; // cache fetched data;\n          setTimeout(() => { this.ready = true; }, 100);\n          // continue to download signature data which might be used for clustering\n          dataService.getStateSignature(this.model, this.selectedState, {}, response => {\n            this.graphData.signature = response.data;\n            this.cache[cacheTag].signature = this.graphData.signature;\n            console.log('signature data loaded');\n          });\n        }, errResponse => {\n          console.log(\"Failed to build force graph!\");\n        });\n\n      },\n\n      configWatcher() {\n        if (this.ready === false) return;\n        if (this.config.clusterNum > 1 && !Object.prototype.hasOwnProperty.call(this.graphData, 'signature')) {\n          dataService.getStateSignature(this.model, this.selectedState, {}, response => {\n            this.graphData.signature = response.data;\n            console.log('signature data loaded');\n            bus.$emit(\"REFRESH_PROJECT_GRAPH\", this.ready);\n          });\n          return;\n        }\n        bus.$emit(\"REFRESH_PROJECT_GRAPH\", this.ready);\n      },\n    },\n\n    mounted() {\n      bus.$on(SELECT_MODEL, (modelName, compare) => {\n        if (compare)\n          return;\n        console.log(`selected model: ${modelName}`);\n        this.model = modelName;\n        bus.loadModelConfig(modelName).then((_) => {\n          const states = bus.availableStates(modelName);\n          if (states){\n            this.states = states;\n            // console.log(this.states);\n            setTimeout(() => { // wait 100ms to update incase the dom is not ready\n              if (this.states[0] === this.selectedState) { // ugly hacker incase states are same to manually reset the data.\n                this.reset();\n              }\n              this.selectedState = null;\n            }, 100);\n          }\n          else {\n            console.log(\"Unknown cell type!\");\n          }\n        })\n      });\n    },\n\n  };\n\n</script>\n<style scope>\n  .config span {\n    line-height: 34px;\n  }\n  .header {\n    text-align: left;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ProjectView.vue?6d808270","<template>\n  <div>\n    <svg :id='svgId'> </svg>\n  </div>\n</template>\n<style>\n\n</style>\n<script>\n  import * as d3 from 'd3';\n  import dataService from '../services/dataService.js';\n  import { bus, SELECT_MODEL } from 'event-bus.js';\n  import { Chart } from '../layout/chart.js'\n  import { WordCloud } from '../layout/cloud.js'\n  import { sentence } from '../layout/sentence.js'\n\n  export default {\n    name: 'TestView',\n    data() {\n      return {\n        chart: null,\n        model: 'PTB-LSTM',\n        state: 'state_c',\n      };\n    },\n    props: {},\n    computed: {\n      svgId: function () {\n        return 'svg-test';\n      }\n    },\n    methods: {\n      init() {\n        const svg = d3.select(`#${this.svgId}`)\n          .attr('width', 500)\n          .attr('height', 500);\n        this.chart = new Chart(svg, 500, 500)\n          .background('lightgray', 0.0);\n      },\n      draw2() {\n        var words = ['you', 'want', 'more',\n          'words', 'than', 'this', 'he', 'is', 'she', 'they', 'what', 'million',\n          'it', '$', '<unk>', 'good', 'i', 'by']\n          .map(function (d, i) {\n            return { text: d, size: 5 + Math.random()*25, type: 0 + Math.round(Math.random()) };\n          });\n        //This method tells the word cloud to redraw with a new set of words.\n        //In reality the new words would probably come from a server request,\n        // user input or some other source.\n        function showNewWords(vis, i) {\n          i = i || 0;\n\n          vis.update(words)\n          setTimeout(function () { showNewWords(vis, i + 1) }, 2000)\n        }\n\n        //Create a new instance of the word cloud visualisation.\n        var myWordCloud = new WordCloud(d3.select(`#${this.svgId}`), 120, 120).transform('translate(200,200)');\n        // myWordCloud.update(words);\n\n        //Start cycling through the demo data\n        showNewWords(myWordCloud);\n        // myWordCloud.update(words);\n      },\n      draw() {\n        dataService.getWordStatistics(this.model, this.state, -1, 'he', response => {\n          const data = response.data;\n          const mean = data.sort_idx.map((d, i) => { return data.mean[d]; });\n          const range = data.sort_idx.map((d, i) => { return [data.low1[d], data.high1[d]]; });\n          const range2 = data.sort_idx.map((d, i) => { return [data.low2[d], data.high2[d]]; });\n\n          console.log(data);\n          const subchart = this.chart.subChart(250, 200)\n            .margin(5, 5, 20, 30)\n            .xAxis()\n            .yAxis();\n          subchart.line(mean, (d, i) => { return i; }, (d) => { return d; });\n          subchart.area(range, (d, i) => i, (d) => d[0], (d) => d[1])\n            .attr('opacity', 0.4);\n          subchart.area(range2, (d, i) => i, (d) => d[0], (d) => d[1])\n            .attr('opacity', 0.2);\n          // subchart.draw();\n        });\n        let processed;\n        const p1 = dataService.getStateStatistics(this.model, this.state, -1, 200, response => {\n          const data = response.data;\n          // console.log(data);\n          processed = data.mean[0].map((_, i) => {\n            return {\n              freqs: data.freqs,\n              mean: data.mean.map((m) => m[i]),\n              low1: data.low1.map((m) => m[i]),\n              low2: data.low2.map((m) => m[i]),\n              high1: data.high1.map((m) => m[i]),\n              high2: data.high2.map((m) => m[i]),\n              rank: data.sort_idx.map((indice) => {\n                return indice.findIndex((idx) => (idx === i));\n              })\n            };\n          });\n        });\n        let vocab;\n        const p2 = dataService.getVocab(this.model, 200, response => {\n          vocab = response.data;\n        })\n        Promise.all([p1, p2]).then(() => {\n          console.log(processed);\n          console.log(vocab);\n          const dim = 10;\n          let data = processed[dim];\n          data = data.freqs.map((f, i) => {\n            return {\n              freqs: f,\n              mean: data.mean[i],\n              range1: [data.low1[i], data.high1[i]],\n              range2: [data.low2[i], data.high2[i]],\n              rank: data.rank[i],\n              word_id: i,\n              word: vocab[i],\n            };\n          })\n          const boxData = data.sort((a, b) => {\n            return a.mean - b.mean;\n          })\n          // const boxData = mean.map((m, i) => {\n          //   return {mean: m, range1: range[i], range2: range2[i], idx: data.sort_idx[i]};\n          // });\n          const boxes = boxData.slice(0, 10).concat(boxData.slice(boxData.length - 10));\n          const subchart2 = this.chart.subChart(250, 200)\n            .translate(250, 0)\n            .margin(5, 30, 40, 5)\n            .xAxis()\n            .yAxis('right');\n          subchart2.axis.x.tickFormat((d, i) => {\n            return boxes[d].word;\n          }).ticks(20);\n          //   .group.attr('transform', 'rotate(90)');\n          subchart2.box(boxes, 5, (d, i) => i, (d) => d.mean, (d) => d.range1, (d) => d.range2)\n            .attr('fill', 'steelblue')\n            .attr('stroke', 'gray')\n            .attr('fill-opacity', 0.5);\n          this.chart.draw();\n\n          // formatting x axis labels\n          subchart2.axisHandles.x.selectAll('text')\n            .attr('y', 0)\n            .attr('x', -9)\n            .attr('dy', '.35em')\n            .attr('transform', 'rotate(-90)')\n            .style('text-anchor', 'end');\n          // subchart2.axis.x.ticks(10);\n\n          // .line([[0.1, 0.1], [0.3, 0.8], [0.9,0.9]]);\n\n        });\n      },\n      draw_arc() {\n        let color = d3.scaleOrdinal(d3.schemeCategory10);\n        let width = 500, height = 500;\n        const svg = d3.select(`#${this.svgId}`)\n          .attr('width', width)\n          .attr('height', height);\n\n        let data = [\n          { start: 0, end: 2 * Math.PI / 8},\n          { start: 2 * Math.PI / 8, end: 2 * Math.PI / 2},\n          { start: 2 * Math.PI / 2, end: 2 * Math.PI},\n        ];\n\n        let g = svg.append('g')\n          .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n        var arc = d3.arc()\n          .innerRadius(230)\n          .outerRadius(240)\n          // .startAngle(0)\n\n        data.forEach((d, i) => {\n          g.append('path')\n          // .attr('transform', 'rotate(' + 180 + ')')\n            .datum({startAngle: d.start, endAngle: d.end})\n            .style('fill', color(i))\n            .attr('d', arc)\n            // .attr('cent', arc.centroid())\n          console.log(arc.centroid({startAngle: d.start, endAngle: d.end}));\n        })\n\n      },\n      draw4() {\n        let color = d3.scaleOrdinal(d3.schemeCategory10);\n        let width = 500, height = 500;\n        const rectHeight = 20;\n        const rectWidth = 50;\n        const rectInterval = 10;\n        const data = ['this', 'is', 'foy', 'test', '<eos>'];\n        \n        var x = d3.scaleTime()\n          .domain([new Date(2013, 7, 1), new Date(2013, 7, 15) - 1])\n          .rangeRound([0, width]);\n        const g = d3.select(`#${this.svgId}`)\n          .attr('width', width)\n          .attr('height', height)\n          .append('g')\n          .attr(\"transform\", \"translate(100,\" + height / 3  + \")\");\n\n        let texts = g\n          .selectAll('text')\n          .data(data).enter()\n          .append('text')\n          .text((d) => {return d})\n          .style('text-anchor', 'middle')\n          // .attr('font-size', 12)\n          .attr('transform', function(d, i) {\n            return 'translate(' + [(rectWidth + rectInterval) * i + rectWidth / 2, rectHeight/1.3] + ')';\n          });\n        \n        const rect_g = g.append('g');\n        data.forEach((d, i) => {\n          if (i > 0) {\n            rect_g.append('rect')\n              .attr('x', i * (rectWidth + rectInterval) - rectInterval)\n              .attr('y', '0')\n              .attr('width', rectInterval)\n              .attr('height', rectHeight)\n              .attr('fill', 'lightgray')\n              .attr('stroke-width', 2)\n              .attr('stroke', 'blue')\n              .attr('opacity', 0.2);\n          }\n          rect_g\n            .append('rect')\n            .attr('x', i * (rectWidth + rectInterval))\n            .attr('y', '0')\n            .attr('width', rectWidth)\n            .attr('height', rectHeight)\n            .attr('fill', 'lightgray')\n            .attr('stroke-width', 2)\n            .attr('stroke', 'blue')\n            .attr('opacity', 0.2);\n        });\n        \n        g.append('g')\n          .call(d3.brushX()\n              .extent([[0, 0], [(rectWidth + rectInterval) * data.length - rectInterval, rectHeight]])\n              .on('end', brushended)\n          );\n        \n        function brushended () {\n          if (!d3.event.sourceEvent) return;\n          if (!d3.event.selection) return;\n          let extent = d3.event.selection;\n          extent[0] = Math.round(extent[0] / (rectWidth + rectInterval)) * (rectWidth + rectInterval);\n          extent[1] = Math.max(Math.round(extent[1] / (rectWidth + rectInterval)) * (rectWidth + rectInterval) - rectInterval, extent[0]);\n          console.log(d3.event.selection);\n          d3.select(this).transition().call(d3.event.target.move, extent)\n        }\n      },\n\n      drawRect(g, dataLength, func) {\n        const self = this;\n        const rectSize = [20, 50];\n        const minBrushLength = 3;\n        g.selectAll('.wordRect')\n          .data(d3.range(dataLength)).enter()\n          .append('rect')\n          .attr('x', 0)\n          .attr('y', d => d * rectSize[1])\n          .attr('width', rectSize[0])\n          .attr('height', rectSize[1])\n          .attr('fill', 'lightgray')\n          .attr('stroke-width', 2)\n          .attr('stroke', 'blue')\n          .attr('opacity', 0.2);\n        let brush = d3.brushY()\n          .extent([[0, 0], [rectSize[0], rectSize[1] * dataLength]])\n          .on('end', function() {\n            if (!d3.event.sourceEvent) return;\n            if (!d3.event.selection) return;\n            let extent = d3.event.selection;\n            extent[0] = Math.round(extent[0] / rectSize[1]) * rectSize[1];\n            extent[1] = Math.round(extent[1] / rectSize[1]) * rectSize[1];\n            d3.select(this).transition().call(d3.event.target.move, extent);\n            console.log(d3.event.selection);\n            func([Math.round(extent[0] / rectSize[1]), Math.round(extent[1] / rectSize[1])])\n          });\n        g.append('g')\n          .call(brush)\n          .call(brush.move, [0, rectSize[1] * dataLength])\n      },\n\n      draw5() {\n        const p1 = bus.loadCoCluster('PTB-LSTM', 'state_c', 10, {top_k: 300, mode: 'raw'});\n        const record = bus.evalSentence('What can I do for you?', 'PTB-LSTM');\n        const p2 = record.evaluate();\n        const clientHeight = 500;\n        let sent = null;\n        const svg = d3.select(`#${this.svgId}`);\n        const sent_g = svg.append('g');\n        \n        Promise.all([p1, p2]).then((values) => {\n          const coCluster = bus.getCoCluster('PTB-LSTM', 'state_c', 10, {top_k: 300, mode: 'raw'});\n          const sentenceRecord = record.getRecords('state_c', -1);\n          console.log(record);\n          const rect_g = svg.append('g')\n            .attr('transform', 'translate(0, 50)');\n          sent = sentence(sent_g)\n            .transform('translate(100, 0)')\n            .size([50, clientHeight])\n            .sentence(sentenceRecord)\n            .coCluster(coCluster)\n            .words(record.tokens)\n            .draw()\n            // .transform('scale('  + scaleFactor + ')translate(' + [200/scaleFactor,10/scaleFactor] + ')');;\n          console.log(sent.strengthByCluster);\n          this.drawRect(rect_g, record.tokens.length, updateSentence);\n      });\n\n      function updateSentence(extent_) {\n        console.log(`extent_ is ${extent_}`);\n        const words = record.tokens.slice(...extent_);\n        console.log(`words is ${words}`);\n        let scaleFactor = record.tokens.length / words.length;\n        scaleFactor = Math.min(scaleFactor, 2);\n        const newHeight = scaleFactor * clientHeight;\n        let translateY = sent.getWordPos(extent_[0])[1];\n        sent.transform('scale('  + scaleFactor + ')translate(' + [100/scaleFactor, -translateY] + ')');\n      }\n    },\n    \n    draw3() {\n      const p1 = bus.loadCoCluster('PTB-LSTM', 'state_c', 10, {top_k: 300, mode: 'raw'});\n      const record = bus.evalSentence('What can I do for you?', 'PTB-LSTM');\n      const p2 = record.evaluate();\n      Promise.all([p1, p2]).then((values) => {\n        const coCluster = bus.getCoCluster('PTB-LSTM', 'state_c', 10, {top_k: 300, mode: 'raw'});\n        const sentenceRecord = record.getRecords('state_c', -1);\n        console.log(record);\n        const a = sentence(d3.select(`#${this.svgId}`).append('g'))\n          .transform('translate(100, 10)')\n          .size([50, 450])\n          .sentence(sentenceRecord)\n          .coCluster(coCluster)\n          .words(record.tokens)\n          .draw();\n        console.log(a.strengthByCluster);\n      })\n\n\n        // .layout();\n    },\n  },\n    mounted() {\n      // let coClusterData;\n      // const p = dataService.getCoCluster(this.model, this.state, 10, {}, response => {\n      //   coClusterData = response.data;\n      //   // console.log('co-cluster data:');\n      //   // console.log(coClusterData);\n      // })\n      this.init();\n      // this.draw2();\n      // this.draw_arc();\n      this.draw5();\n      // this.draw4();\n    }\n\n  }\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// TestView.vue?069eb963","<template>\n  <div class=\"text-view\">\n    <h4 class=\"normal\">Text</h4>\n    <hr>\n    <div class=\"state-select\" v-if=\"displayControl\">\n      <el-radio-group v-model=\"selectedState\" size=\"small\">\n        <el-radio-button v-for=\"state in states\" :label=\"state\"></el-radio-button>\n      </el-radio-group>\n      <div class=\"input\">\n        <el-col :span=\"4\" class=\"label\">\n          <span>Layer:</span>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-input-number size=\"small\" v-model=\"selectedLayer\" :max=\"layerNum-1\" style=\"width: 80%\"></el-input-number>\n        </el-col>\n        <!--<el-col :span=\"2\"> <span> </span></el-col>-->\n        <el-col :span=\"4\" class=\"label\">\n          <span>Dim:</span>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-input-number size=\"small\" v-model=\"selectedDim\" :max=\"layerSize\" style=\"width: 100%\"></el-input-number>\n        </el-col>\n      </div>\n    </div>\n    <el-input\n      type=\"textarea\"\n      :rows=\"2\"\n      placeholder=\"Please input\"\n      v-if=\"isInput\"\n      v-model=\"inputs\"\n      class=\"text-input\">\n    </el-input>\n    <el-button @click=\"onSubmit\"> Evaluate\n    </el-button>\n    <hr v-if=\"records\">\n    <div class=\"text-box\" v-if=\"records\">\n      <div v-for=\"sentence in sentences\">\n        <span v-for=\"word in sentence\" v-bind:style=\"{backgroundColor: color(word.value)}\"> {{ word.text }} </span>\n      </div>\n    </div>\n  </div>\n</template>\n<style scoped>\n.text-view {\n  padding: 5px;\n  text-align: left;\n}\n.text-box {\n  border-style: solid;\n  border-width: 1px;\n  border-color: lightgrey;\n  padding: 6px;\n  margin-top: 2px;\n  margin-bottom: 10px;\n}\n.text-input {\n  margin-top: 2px;\n  margin-bottom: 10px;\n}\n.state-select {\n  margin-bottom: 10px;\n}\n.label {\n  margin: auto;\n  font-size: 10pt;\n  text-align: left;\n  /*line-height: 20px;*/\n  /*padding: 8px 0 8px;*/\n}\n.input {\n  margin-top: 6px;\n  margin-bottom: 8px;\n}\n</style>\n<script>\n  import dataService from '../services/dataService';\n  import { bus, SELECT_MODEL } from '../event-bus';\n\n  let activeColorScheme = [\"88, 126, 182\", \"201, 90, 95\"];\n  export default {\n    name: 'TextView',\n    data() {\n      return {\n        // sentences: sentences,\n        inputs: null,\n        shared: bus.state,\n        isInput: true,\n        states: [],\n        selectedState: null,\n        selectedLayer: -1,\n        selectedDim: null,\n        cache: {},\n        oldInputs: null,\n        tokens: null,\n        records: null,\n        layerNum: 0,\n        // layerSize: 0,\n      };\n    },\n    computed: {\n      displayControl: function() {\n        return this.states.length !== 0;\n      },\n      // hasRecords: function() {\n      //   return this.records;\n      // },\n      layerSize: function() {\n        const selectedModel = this.shared.selectedModel;\n        return bus.layerSize(selectedModel, this.selectedLayer);\n      },\n      sentences: function() {\n        if(this.records){\n          return this.tokens.map((sentence, i) => {\n            return sentence.map((token, j) => {\n              return {text: token, value: this.records[i][j][this.selectedState][this.selectedLayer][this.selectedDim]};\n            })\n          });\n        }\n        return [];\n      }\n    },\n    watch: {\n      // inputs: function(newValue, oldValue){\n      //   this.oldInputs = oldValue;\n      // }\n    },\n    methods: {\n      color(value) {\n        if (value < 0)\n          return 'rgba(' + activeColorScheme[0] + ',' + (-value) + ')';\n        return 'rgba(' + activeColorScheme[1] + ',' + value + ')';\n      },\n      onSubmit() {\n        if (this.selectedState === null) return false;\n        const selectedModel = this.shared.selectedModel;\n        if(this.inputs === this.oldInputs) return true;\n        // const splitted = this.inputs.split('.')\n        dataService.getTextEvaluation(selectedModel, this.inputs,\n          (response) => {\n            const data = response.data;\n            this.tokens = data.tokens;\n            this.records = data.records;\n            this.oldInputs = this.inputs;\n          });\n      }\n    },\n    mounted() {\n      bus.$on(SELECT_MODEL, (modelName) => {\n        const states = bus.availableStates(modelName);\n        if (states) {\n          this.states = states;\n          this.layerNum = bus.layerNum(modelName);\n          this.selectedLayer = this.layerNum - 1;\n          this.selectedState = this.states[0];\n        }\n        else {\n          this.states = [];\n        }\n      })\n    }\n  }\n  function colorGrad(color1, color2, ratio) {\n    return color1.map((c, i) => c * ratio + color2[i] * (1-ratio));\n  }\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// TextView.vue?2b088992","import Vue from 'vue'\nimport VueResource from 'vue-resource';\nVue.use(VueResource);\n\n// Test version\n// const devMainUrl = 'http://143.89.191.20';\nconst devMainUrl = 'http://localhost:5000';\n\nconst $http = Vue.http;\n\nconst cache = {}\n\nconst getUrlData = function(url, callback) {\n  if (url in cache) {\n      return Promise.resolve(callback(cache[url]));\n  } else {\n    return $http.get(url).then(response => {\n      if (response.status === 200)\n        cache[url] = {status: 200, data: response.data};\n      callback(cache[url]);\n    }, errResponse => {\n      console.log(errResponse);\n      throw errResponse;\n    });\n  }\n}\n\nlet getProjectionData = function (model, state, parameters = {}, callback) {\n  //  empty api for future implementation\n  let url = `${devMainUrl}/projection?model=${model}&state=${state}`;\n  Object.keys(parameters).forEach((p) => { url += `&${p}=${parameters[p]}`; });\n  return getUrlData(url, callback);\n}\n\nlet getStrengthData = function (model, state, parameters = {}, callback) {\n  // additional parameters: layer: -1, top_k: 100\n  let url = `${devMainUrl}/strength?model=${model}&state=${state}`\n  Object.keys(parameters).forEach((p) => { url += `&${p}=${parameters[p]}`; });\n  return getUrlData(url, callback);\n}\n\n\nlet getStateSignature = function (model, state, parameters = {}, callback) {\n  // additional parameters: layer: -1, size: 1000\n  let url = `${devMainUrl}/state_signature?model=${model}&state=${state}`\n  Object.keys(parameters).forEach((p) => { url += `&${p}=${parameters[p]}`; });\n  return getUrlData(url, callback);\n}\n\nlet getModels = function (callback) {\n  const url = `${devMainUrl}/models/available`;\n  return getUrlData(url, callback);\n}\n\nlet getModelConfig = function (model, callback) {\n  const url = `${devMainUrl}/models/config/${model}`;\n  return getUrlData(url, callback);\n}\n\nlet getTextEvaluation = function (model, text, callback) {\n\n  let url = `${devMainUrl}/models/evaluate`;\n  // Object.keys(parameters).forEach((p) => { url += `&${p}=${parameters[p]}`; });\n  return $http.post(url, { model: model, text: text }).then(response => {\n    callback(response);\n  }, errResponse => {\n    console.log(errResponse);\n    throw errResponse;\n  });\n}\n\nlet getCoCluster = function (model, state, n_cluster, parameters = {}, callback) {\n  // layer: -1\n  // top_k: 100\n  // mode: 'positive'\n  // seed: 0\n  let url = `${devMainUrl}/co_clusters?model=${model}&state=${state}&n_cluster=${n_cluster}`;\n  Object.keys(parameters).forEach((p) => { url += `&${p}=${parameters[p]}`; });\n  return getUrlData(url, callback);\n}\n\nlet getVocab = function (model, top_k = 100, callback) {\n  const url = `${devMainUrl}/vocab?model=${model}&top_k=${top_k}`;\n  return getUrlData(url, callback);\n}\n\n// Get statistics of all states in a layer. The statistics are relating to words, e.g. reaction distribution\nlet getStateStatistics = function (model, state, layer, top_k, callback) {\n  // k: k words with highest strength, and k words with lowest negative strength\n  console.log(`If no statistics data available, try visit url ${devMainUrl}/models/record_default?model=${model}&set=test for generating state records!`);\n  const url = `${devMainUrl}/state_statistics?model=${model}&state=${state}&layer=${layer}&top_k=${top_k}`;\n  return getUrlData(url, callback);\n}\n\n// Get statistics of a word regarding all states in a layer.\nlet getWordStatistics = function (model, state, layer, word, callback) {\n  const url = `${devMainUrl}/word_statistics?model=${model}&state=${state}&layer=${layer}&word=${word}`;\n  return getUrlData(url, callback);\n}\n\nlet getPosStatistics = function (model, top_k, callback) {\n  const url = `${devMainUrl}/pos_statistics?model=${model}&top_k=${top_k}`;\n  return getUrlData(url, callback);\n}\n\n\nexport default {\n  getProjectionData,\n  getStrengthData,\n  // getTextData,\n  getModels,\n  getModelConfig,\n  getTextEvaluation,\n  getCoCluster,\n  getVocab,\n  getStateSignature,\n  getStateStatistics,\n  getWordStatistics,\n  getPosStatistics,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/dataService.js","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-5a3bb6f0!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ArcView.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ArcView.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-5a3bb6f0!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ArcView.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ArcView.vue\n// module id = 703\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-d96d80a0!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ClusterView.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ClusterView.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-d96d80a0!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ClusterView.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ClusterView.vue\n// module id = 704\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-6411595c&scoped=true!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./InfoView.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./InfoView.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-6411595c!../../node_modules/vue-loader/lib/selector?type=template&index=0!./InfoView.vue\"),\n  /* scopeId */\n  \"data-v-6411595c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/InfoView.vue\n// module id = 705\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-b48e8d46!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./MainView.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./MainView.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-b48e8d46!../../node_modules/vue-loader/lib/selector?type=template&index=0!./MainView.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/MainView.vue\n// module id = 706\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-709c6488!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ModelConfig.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ModelConfig.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-709c6488!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ModelConfig.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ModelConfig.vue\n// module id = 707\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-820c27c2&scoped=true!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ModelView.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ModelView.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-820c27c2!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ModelView.vue\"),\n  /* scopeId */\n  \"data-v-820c27c2\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ModelView.vue\n// module id = 708\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-1d6c2814!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ProjectGraph.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProjectGraph.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-1d6c2814!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ProjectGraph.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ProjectGraph.vue\n// module id = 709\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-18dee9cf!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ProjectView.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProjectView.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-18dee9cf!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ProjectView.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ProjectView.vue\n// module id = 710\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-33a00f36!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TestView.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./TestView.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-33a00f36!../../node_modules/vue-loader/lib/selector?type=template&index=0!./TestView.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/TestView.vue\n// module id = 711\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-0de1765e&scoped=true!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./TextView.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./TextView.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-0de1765e!../../node_modules/vue-loader/lib/selector?type=template&index=0!./TextView.vue\"),\n  /* scopeId */\n  \"data-v-0de1765e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/TextView.vue\n// module id = 712\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"text-view\"\n  }, [_c('h4', {\n    staticClass: \"normal\"\n  }, [_vm._v(\"Text\")]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), (_vm.displayControl) ? _c('div', {\n    staticClass: \"state-select\"\n  }, [_c('el-radio-group', {\n    attrs: {\n      \"size\": \"small\"\n    },\n    model: {\n      value: (_vm.selectedState),\n      callback: function($$v) {\n        _vm.selectedState = $$v\n      },\n      expression: \"selectedState\"\n    }\n  }, _vm._l((_vm.states), function(state) {\n    return _c('el-radio-button', {\n      attrs: {\n        \"label\": state\n      }\n    })\n  })), _vm._v(\" \"), _c('div', {\n    staticClass: \"input\"\n  }, [_c('el-col', {\n    staticClass: \"label\",\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('span', [_vm._v(\"Layer:\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('el-input-number', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"size\": \"small\",\n      \"max\": _vm.layerNum - 1\n    },\n    model: {\n      value: (_vm.selectedLayer),\n      callback: function($$v) {\n        _vm.selectedLayer = $$v\n      },\n      expression: \"selectedLayer\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"label\",\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('span', [_vm._v(\"Dim:\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 8\n    }\n  }, [_c('el-input-number', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"size\": \"small\",\n      \"max\": _vm.layerSize\n    },\n    model: {\n      value: (_vm.selectedDim),\n      callback: function($$v) {\n        _vm.selectedDim = $$v\n      },\n      expression: \"selectedDim\"\n    }\n  })], 1)], 1)], 1) : _vm._e(), _vm._v(\" \"), (_vm.isInput) ? _c('el-input', {\n    staticClass: \"text-input\",\n    attrs: {\n      \"type\": \"textarea\",\n      \"rows\": 2,\n      \"placeholder\": \"Please input\"\n    },\n    model: {\n      value: (_vm.inputs),\n      callback: function($$v) {\n        _vm.inputs = $$v\n      },\n      expression: \"inputs\"\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c('el-button', {\n    on: {\n      \"click\": _vm.onSubmit\n    }\n  }, [_vm._v(\" Evaluate\\n  \")]), _vm._v(\" \"), (_vm.records) ? _c('hr') : _vm._e(), _vm._v(\" \"), (_vm.records) ? _c('div', {\n    staticClass: \"text-box\"\n  }, _vm._l((_vm.sentences), function(sentence) {\n    return _c('div', _vm._l((sentence), function(word) {\n      return _c('span', {\n        style: ({\n          backgroundColor: _vm.color(word.value)\n        })\n      }, [_vm._v(\" \" + _vm._s(word.text) + \" \")])\n    }))\n  })) : _vm._e()], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-0de1765e!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/TextView.vue\n// module id = 713\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"project\"\n  }, [_c('project-graph', {\n    attrs: {\n      \"svg-id\": _vm.paneId(_vm.model, _vm.selectedState),\n      \"width\": _vm.width,\n      \"height\": _vm.height,\n      \"graph-data\": _vm.graphData,\n      \"ready\": _vm.ready,\n      \"config\": _vm.config\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"config\"\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('span', [_vm._v(\"Cluster No.\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 6\n    }\n  }, [_c('el-slider', {\n    attrs: {\n      \"min\": 1,\n      \"max\": 20\n    },\n    on: {\n      \"change\": _vm.configWatcher\n    },\n    model: {\n      value: (_vm.config.clusterNum),\n      callback: function($$v) {\n        _vm.config.clusterNum = $$v\n      },\n      expression: \"config.clusterNum\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('span', [_vm._v(\"Opacity\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 6\n    }\n  }, [_c('el-slider', {\n    attrs: {\n      \"max\": 1,\n      \"step\": 0.05,\n      \"width\": 100\n    },\n    on: {\n      \"change\": _vm.configWatcher\n    },\n    model: {\n      value: (_vm.config.opacity),\n      callback: function($$v) {\n        _vm.config.opacity = $$v\n      },\n      expression: \"config.opacity\"\n    }\n  })], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-18dee9cf!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ProjectView.vue\n// module id = 714\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('h4', {\n    staticClass: \"normal\"\n  }, [_vm._v(_vm._s(_vm.header))]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('svg', {\n    attrs: {\n      \"id\": _vm.svgId,\n      \"width\": _vm.width,\n      \"height\": _vm.height\n    }\n  }), _vm._v(\" \"), _c('svg', {\n    attrs: {\n      \"id\": _vm.svgId + \"2\",\n      \"width\": _vm.width,\n      \"height\": 30\n    }\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-1ccedeee!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/InfoBoard.vue\n// module id = 715\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('svg', {\n    staticClass: \"project\",\n    attrs: {\n      \"id\": _vm.svgId,\n      \"width\": _vm.width,\n      \"height\": _vm.height\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-1d6c2814!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ProjectGraph.vue\n// module id = 716\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('el-menu', {\n    staticClass: \"header-menu\",\n    attrs: {\n      \"theme\": \"dark\",\n      \"default-active\": '',\n      \"mode\": \"horizontal\"\n    },\n    on: {\n      \"select\": function () {\n        _vm.console.log('Hi!');\n      }\n    }\n  }, [_c('el-menu-item', {\n    staticClass: \"logo\",\n    attrs: {\n      \"index\": \"1\"\n    }\n  }, [_vm._v(\"RNNVis\")]), _vm._v(\" \"), _c('el-menu-item', {\n    attrs: {\n      \"index\": \"2\"\n    }\n  }, [_vm._v(\"Info\")])], 1), _vm._v(\" \"), _c('el-row', {\n    attrs: {\n      \"gutter\": 10\n    }\n  }, [_c('el-col', {\n    staticClass: \"col-bg\",\n    attrs: {\n      \"span\": 6,\n      \"gutter\": 15\n    }\n  }, [_c('model-view'), _vm._v(\" \"), _c('br'), _vm._v(\" \"), (!_vm.compare) ? _c('info-board', {\n    attrs: {\n      \"compare\": false,\n      \"type\": \"word\",\n      \"id\": \"info-word\",\n      \"height\": _vm.infoHeight * 1.0\n    }\n  }) : _vm._e(), _vm._v(\" \"), (!_vm.compare) ? _c('info-board', {\n    attrs: {\n      \"compare\": false,\n      \"type\": \"state\",\n      \"id\": \"info-state\",\n      \"height\": _vm.infoHeight * 0.8\n    }\n  }) : _vm._e()], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"col-bg\",\n    attrs: {\n      \"span\": 18,\n      \"gutter\": 15\n    }\n  }, [_c('el-row', [_c('main-view', {\n    attrs: {\n      \"height\": _vm.mainHeight\n    }\n  })], 1), _vm._v(\" \"), _c('el-row', {\n    attrs: {\n      \"gutter\": 10\n    }\n  }, [(_vm.compare) ? _c('info-view', {\n    attrs: {\n      \"height\": _vm.infoHeight\n    }\n  }) : _vm._e()], 1)], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-25441132!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 717\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('svg', {\n    attrs: {\n      \"id\": _vm.svgId\n    }\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-33a00f36!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/TestView.vue\n// module id = 718\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"arc\"\n  }, [_c('div', {\n    staticClass: \"header\"\n  }, [_c('el-radio-group', {\n    attrs: {\n      \"size\": \"small\"\n    },\n    model: {\n      value: (_vm.selectedState),\n      callback: function($$v) {\n        _vm.selectedState = $$v\n      },\n      expression: \"selectedState\"\n    }\n  }, _vm._l((_vm.states), function(state) {\n    return _c('el-radio-button', {\n      attrs: {\n        \"label\": state\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('svg', {\n    attrs: {\n      \"id\": _vm.svgId,\n      \"width\": _vm.width,\n      \"height\": _vm.height\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"arc_config\"\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('span', [_vm._v(\"Cluster No.\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 6\n    }\n  }, [_c('el-slider', {\n    attrs: {\n      \"min\": 2,\n      \"max\": 20\n    },\n    model: {\n      value: (_vm.clusterNum),\n      callback: function($$v) {\n        _vm.clusterNum = $$v\n      },\n      expression: \"clusterNum\"\n    }\n  })], 1)], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-5a3bb6f0!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ArcView.vue\n// module id = 719\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('el-col', {\n    staticClass: \"col-bg\",\n    attrs: {\n      \"span\": 12,\n      \"gutter\": 15\n    }\n  }, [_c('info-board', {\n    attrs: {\n      \"type\": _vm.type1,\n      \"id\": 'info-board-1',\n      \"height\": _vm.height,\n      \"compare\": _vm.compare\n    }\n  })], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"col-bg\",\n    attrs: {\n      \"span\": 12,\n      \"gutter\": 15\n    }\n  }, [_c('info-board', {\n    attrs: {\n      \"type\": _vm.type2,\n      \"id\": 'info-board-2',\n      \"height\": _vm.height,\n      \"compare\": false\n    }\n  })], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-6411595c!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/InfoView.vue\n// module id = 720\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"grid-content\"\n  }, [_c('el-form', {\n    attrs: {\n      \"label-position\": \"left\",\n      \"label-width\": \"30%\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": _vm.compare ? 'Model 2' : 'Model'\n    }\n  }, [_c('el-select', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"placeholder\": \"Select A Model\",\n      \"size\": \"small\"\n    },\n    model: {\n      value: (_vm.selectedModel),\n      callback: function($$v) {\n        _vm.selectedModel = $$v\n      },\n      expression: \"selectedModel\"\n    }\n  }, _vm._l((_vm.availableModels), function(model, idx) {\n    return _c('el-option', {\n      attrs: {\n        \"value\": model,\n        \"label\": model\n      }\n    })\n  })), _vm._v(\" \"), (_vm.compare) ? _c('el-button', {\n    attrs: {\n      \"icon\": \"delete\",\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.toggle\n    }\n  }) : _vm._e()], 1), _vm._v(\" \"), (_vm.config) ? _c('div', {\n    staticClass: \"el-form-item\"\n  }, _vm._l((Object.keys(_vm.config)), function(key) {\n    return _c('el-tag', {\n      attrs: {\n        \"type\": _vm.colorType\n      }\n    }, [_vm._v(_vm._s(key) + \": \" + _vm._s(_vm.config[key]))])\n  })) : _vm._e(), _vm._v(\" \"), (_vm.config) ? _c('hr', {\n    staticClass: \"local-hr\"\n  }) : _vm._e(), _vm._v(\" \"), (_vm.states.length) ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"Hidden State\"\n    }\n  }, [_c('el-radio-group', {\n    attrs: {\n      \"size\": \"small\"\n    },\n    model: {\n      value: (_vm.selectedState),\n      callback: function($$v) {\n        _vm.selectedState = $$v\n      },\n      expression: \"selectedState\"\n    }\n  }, _vm._l((_vm.states), function(state) {\n    return _c('el-radio-button', {\n      attrs: {\n        \"label\": state\n      }\n    }, [_vm._v(_vm._s(_vm.stateName(state)))])\n  }))], 1) : _vm._e(), _vm._v(\" \"), (_vm.layerNum) ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"Layer\"\n    }\n  }, [_c('el-input-number', {\n    staticStyle: {\n      \"width\": \"100px\",\n      \"margin-top\": \"5px\"\n    },\n    attrs: {\n      \"size\": \"small\",\n      \"max\": _vm.layerNum - 1\n    },\n    model: {\n      value: (_vm.selectedLayer),\n      callback: function($$v) {\n        _vm.selectedLayer = $$v\n      },\n      expression: \"selectedLayer\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.states.length) ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"POS Tag\"\n    }\n  }, [_c('el-switch', {\n    attrs: {\n      \"on-text\": \"\",\n      \"off-text\": \"\"\n    },\n    model: {\n      value: (_vm.posSwitch),\n      callback: function($$v) {\n        _vm.posSwitch = $$v\n      },\n      expression: \"posSwitch\"\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"align\",\n    staticStyle: {\n      \"margin-left\": \"30px\"\n    }\n  }, [_vm._v(\"Align\")]), _vm._v(\" \"), _c('el-switch', {\n    attrs: {\n      \"on-text\": \"\",\n      \"off-text\": \"\"\n    },\n    on: {\n      \"change\": _vm.layoutChange\n    },\n    model: {\n      value: (_vm.mode),\n      callback: function($$v) {\n        _vm.mode = $$v\n      },\n      expression: \"mode\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.selectedModel) ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"Sentences\"\n    }\n  }, [(_vm.inputVisible) ? _c('el-input', {\n    ref: \"saveTagInput\",\n    staticClass: \"input-new-tag\",\n    attrs: {\n      \"size\": \"small\"\n    },\n    on: {\n      \"blur\": _vm.handleInputConfirm\n    },\n    nativeOn: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.handleInputConfirm($event)\n      }\n    },\n    model: {\n      value: (_vm.inputValue),\n      callback: function($$v) {\n        _vm.inputValue = $$v\n      },\n      expression: \"inputValue\"\n    }\n  }) : _c('el-button', {\n    staticClass: \"button-new-tag\",\n    attrs: {\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.showInput\n    }\n  }, [_vm._v(\"+ New Sentence\")])], 1) : _vm._e(), _vm._v(\" \"), (_vm.sentences.length) ? _c('div', {\n    staticClass: \"sentence-container\"\n  }, _vm._l((_vm.sentences), function(sentence) {\n    return _c('el-tag', {\n      attrs: {\n        \"closable\": true,\n        \"type\": _vm.colorType\n      },\n      on: {\n        \"close\": function($event) {\n          _vm.closeSentence(sentence)\n        }\n      }\n    }, [_c('a', [_vm._v(_vm._s(sentence))])])\n  })) : _vm._e(), _vm._v(\" \"), (_vm.selectedState) ? _c('hr', {\n    staticClass: \"local-hr\"\n  }) : _vm._e(), _vm._v(\" \"), (_vm.selectedState) ? _c('el-form-item', {\n    attrs: {\n      \"label\": \"Cluster Num\"\n    }\n  }, [_c('el-slider', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"min\": 2,\n      \"max\": 20\n    },\n    on: {\n      \"change\": _vm.layoutChange\n    },\n    model: {\n      value: (_vm.layout.clusterNum),\n      callback: function($$v) {\n        _vm.layout.clusterNum = $$v\n      },\n      expression: \"layout.clusterNum\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.selectedState) ? _c('el-form-item', {\n    staticStyle: {\n      \"margin-top\": \"-7px\",\n      \"padding-bottom\": \"-10px\"\n    },\n    attrs: {\n      \"label\": \"Stroke Width\"\n    }\n  }, [_c('el-slider', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"min\": 0,\n      \"max\": _vm.maxWidth,\n      \"step\": 0.1\n    },\n    on: {\n      \"change\": _vm.layoutChange\n    },\n    model: {\n      value: (_vm.layout.strokeControlStrength),\n      callback: function($$v) {\n        _vm.layout.strokeControlStrength = $$v\n      },\n      expression: \"layout.strokeControlStrength\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.selectedState) ? _c('el-form-item', {\n    staticStyle: {\n      \"margin-top\": \"-7px\"\n    },\n    attrs: {\n      \"label\": \"Link Filter\"\n    }\n  }, [_c('el-slider', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"range\": \"\",\n      \"min\": 0,\n      \"max\": 1,\n      \"step\": 0.0001\n    },\n    on: {\n      \"change\": _vm.layoutChange\n    },\n    model: {\n      value: (_vm.layout.linkFilterThreshold),\n      callback: function($$v) {\n        _vm.layout.linkFilterThreshold = $$v\n      },\n      expression: \"layout.linkFilterThreshold\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (_vm.selectedState) ? _c('el-form-item', {\n    staticStyle: {\n      \"margin-top\": \"-7px\"\n    },\n    attrs: {\n      \"label\": \"State Clip\"\n    }\n  }, [_c('el-slider', {\n    staticStyle: {\n      \"width\": \"80%\"\n    },\n    attrs: {\n      \"min\": 0,\n      \"max\": 10,\n      \"step\": 1\n    },\n    on: {\n      \"change\": _vm.layoutChange\n    },\n    model: {\n      value: (_vm.layout.stateClip),\n      callback: function($$v) {\n        _vm.layout.stateClip = $$v\n      },\n      expression: \"layout.stateClip\"\n    }\n  })], 1) : _vm._e()], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-709c6488!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ModelConfig.vue\n// module id = 721\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('h4', {\n    staticClass: \"normal\"\n  }, [_vm._v(\"Models\")]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('div', {\n    staticClass: \"content model-view\"\n  }, [_c('model-config', {\n    attrs: {\n      \"compare\": false\n    }\n  }), _vm._v(\" \"), (_vm.compare) ? _c('hr') : _vm._e(), _vm._v(\" \"), (_vm.compare) ? _c('model-config', {\n    attrs: {\n      \"compare\": true,\n      \"toggle\": _vm.toggleCompare\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"size\": \"small\"\n    },\n    on: {\n      \"click\": _vm.toggleCompare\n    }\n  }, [_vm._v(\"Compare Model\")])], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-820c27c2!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ModelView.vue\n// module id = 722\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('h4', {\n    staticClass: \"normal\"\n  }, [_vm._v(\"Main\")]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), (_vm.compare) ? _c('cluster-view', {\n    attrs: {\n      \"width\": _vm.width / 2 - 15,\n      \"height\": _vm.height,\n      \"compare\": true\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c('cluster-view', {\n    attrs: {\n      \"width\": _vm.compare ? _vm.width / 2 - 15 : _vm.width,\n      \"height\": _vm.height,\n      \"compare\": false\n    }\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-b48e8d46!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/MainView.vue\n// module id = 723\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('svg', {\n    attrs: {\n      \"id\": _vm.svgId,\n      \"width\": _vm.width,\n      \"height\": _vm.height\n    }\n  }, [_c('defs', [_c('linearGradient', {\n    attrs: {\n      \"id\": \"state-legend\"\n    }\n  }, [_c('stop', {\n    staticClass: \"stop1\",\n    attrs: {\n      \"offset\": \"0%\",\n      \"stop-color\": \"rgba(9, 173, 255, 1)\"\n    }\n  }), _vm._v(\" \"), _c('stop', {\n    staticClass: \"stop2\",\n    attrs: {\n      \"offset\": \"50%\",\n      \"stop-color\": \"rgba(128, 128, 128, 0.1)\"\n    }\n  }), _vm._v(\" \"), _c('stop', {\n    staticClass: \"stop3\",\n    attrs: {\n      \"offset\": \"100%\",\n      \"stop-color\": \"rgba(255, 91, 9, 1)\"\n    }\n  })], 1)], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-d96d80a0!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ClusterView.vue\n// module id = 724\n// module chunks = 1","import * as d3 from 'd3';\nimport cloud from 'd3-cloud';\nimport { bus, SELECT_WORD, DESELECT_WORD } from '../event-bus';\n// import cloud from './forcecloud.js';\n// console.log(d3);\n// var cloud = require('./d3.cloud.js');\n// console.log('haha');\n\nconst bgLayout = {\n  'stroke': 'black',\n  'stroke-width': 1,\n  'fill': 'white',\n  'fill-opacity': 0.0,\n  'stroke-opacity': 0.2,\n};\n\nconst wordLayout = {\n  'font': 'Arial',\n  // 'fontSize': [12, 24],\n  'fontSize': [9, 17],\n  // 'fontSize': [7, 11],\n  'fontWeight': [300, 400, 500],\n  'padding': 0,\n  'opacity': 0.7,\n  'baseColor': '#1f77b4',\n}\n\nexport class WordCloud{\n  constructor(selector, radiusX = 100, radiusY = radiusX, bgshape = 'rect', compare = false) {\n    this.selector = selector;\n    this.bggroup = this.selector.append('g');\n    this.bg = this.bggroup.append('g');\n    this.bgHandle;\n    this.bgshape = bgshape;\n    this.bgLayout = bgLayout;\n    this.wordLayout = wordLayout;\n    this.group = this.bggroup.append('g');\n    this.radius = [radiusX, radiusY];\n    this.data;\n    this.cloud = null;  // the handle to all the texts\n    this.font = 'Impact';\n    this.margin_ = 0;\n    this.colorScheme = d3.scaleOrdinal(d3.schemeCategory10);\n    this.word2data;\n    this.compare = compare;\n    this.boundingSize = [radiusX*2, radiusY*2];\n    // this.selected = [];\n    // this.bounding();\n    // register event listener\n  }\n  get width() {\n    return (this.radius[0] - this.margin_) * 2;\n  }\n  get height() {\n    return (this.radius[1] - this.margin_) * 2;\n  }\n  get polygon() {\n    let polygon = [];\n    const len = 4;\n    for (let i = 0; i < len; i++) {\n      polygon.push([\n        Math.round(this.radiusX * Math.cos(2 * Math.PI * i / len)),\n        Math.round(this.radiusY * Math.sin(2 * Math.PI * i / len))]);\n    }\n    return polygon;\n  }\n  size(size) {\n    this.radius[0] = size[0] / 2;\n    this.radius[1] = size[1] / 2;\n    return this;\n  }\n  wordLayoutParams(layoutParams) {\n    return arguments.length ? (this.wordLayout = layoutParams, this) : this.wordLayout;\n  }\n  bgLayoutParams(layoutParams) {\n    return arguments.length ? (this.bgLayout = layoutParams, this) : this.bgLayout;\n  }\n  transform(transformStr) {\n    if (this.compare) transformStr += ' scale(-1, 1)';\n    this.bggroup\n      .transition()\n      .duration(200)\n      .attr('transform', transformStr);\n    return this;\n  }\n  // set the background color and opacity\n  background(color, alpha = 1.0) {\n    this.bgLayout['fill'] = color;\n    this.bgLayout['fill-opacity'] = alpha;\n    return this;\n  }\n  drawBackground() {\n    // console.log(\"Redrawing backgrounds\")\n    if(this.bgHandle)\n      this.bgHandle.remove();\n    this.bgHandle = this.bg.append(this.bgshape);\n    if (this.bgshape === 'rect') {\n      this.bgHandle\n        .attr('x', -this.radius[0])\n        .attr('y', -this.radius[1])\n        .attr('rx', 4)\n        .attr('ry', 4)\n        .attr('width', 2 * this.radius[0])\n        .attr('height', 2 * this.radius[1])\n    } else if (this.bgshape === 'ellipse') {\n      this.bgHandle\n        .attr('cx', 0)\n        .attr('cy', 0)\n        .attr('rx', radius[0])\n        .attr('ry', radius[1]);\n    }\n    Object.keys(this.bgLayout).forEach((param) => {\n      this.bgHandle.attr(param, this.bgLayout[param]);\n    });\n    return this;\n  }\n  margin(margin) {\n    this.margin_ = margin;\n    // this.group.attr('transform', `scale()`)\n    return this;\n  }\n  fontFamily(font) {\n    this.wordLayout.font = font;\n    return this;\n  }\n  color(colorScheme) {\n    this.colorScheme = colorScheme;\n    return this;\n  }\n  draw(size = [this.width/2, this.height/2], data = this.data) {\n    // console.log(this.cloud);\n    if (size[0] !== this.width/2 || size[1] !== this.height/2) {\n      // this.size(size);\n      this.radius = size;\n      this.drawBackground();\n\n    }\n    if (!this.bgHandle)\n      this.drawBackground();\n    if (!this.data)\n      this.data = data;\n    // if (this.compare) this.group\n    // console.log(data);\n    const radiusX = size[0];\n    const radiusY = size[1];\n    const wordLayout = this.wordLayout;\n    // this.group.attr('transform', 'translate(' + [-radiusX, -radiusY] + ')');\n    const filterData = data.filter((d) => {\n      return -radiusX < d.x - d.width / 4 && -radiusY < d.y - d.size/2 && d.x + d.width/4 < radiusX && d.y -d.size/2 < radiusY;\n    });\n    const self = this;\n    this.cloud = this.group.selectAll('text')\n      .data(filterData, function (d) { return d.text; }); // matching key\n\n    //Entering words\n    const text = this.cloud.enter()\n      .append('text')\n      .style('font-family', wordLayout.font)\n      .attr('text-anchor', 'middle')\n      .style('fill', (d, i) => { return typeof d.type === 'number' ? self.colorScheme(d.type) : wordLayout.baseColor; });\n    text\n      .text(function (d) { return d.text; });\n\n    this.cloud\n      .style('fill', (d, i) => { return typeof d.type === 'number' ? self.colorScheme(d.type) : wordLayout.baseColor; });\n\n      // .attr('font-size', 1);\n\n    text\n      .attr('transform', function (d) {\n        return 'translate(' + [d.x, d.y] + ')';\n      })\n      // .attr('font-size', 1)\n      .attr('font-size', function (d) { return d.size + 'px'; })\n      .attr('font-weight', function(d) { return d.weight; })\n      .style('fill-opacity', 0)\n      .transition()\n      .duration(300)\n      .style('fill-opacity', wordLayout.opacity);\n\n    text\n      .on('mouseover', function () {\n        d3.select(this).style('fill-opacity', 1.0);\n      })\n      .on('mouseout', function (d, i) {\n        if (d.select) return;\n        d3.select(this).style('fill-opacity', wordLayout.opacity);\n      })\n      .on('click', function (d, i) {\n        if (!d.select){\n          d.select = true;\n          d.opacity = wordLayout.opacity;\n          d.baseColor = typeof d.type === 'number' ? self.colorScheme(d.type) : wordLayout.baseColor;\n          d3.select(this).style('fill-opacity', 1.0).style('font-weight', d.weight+500);\n          bus.$emit(SELECT_WORD, d, self.compare);\n        } else {\n          d.select = false;\n          bus.$emit(DESELECT_WORD, d, self.compare);\n          d3.select(this).style('fill-opacity', wordLayout.opacity).style('font-weight', d.weight);\n        }\n      });\n\n    // registering el in to datum\n    text.each(function(d) {\n      d.el = this;\n    });\n\n    this.word2data = {}\n    this.data.forEach((d) => this.word2data[d.text] = d);\n    // console.log(data);\n\n    //Exiting words\n    this.cloud.exit()\n      .transition()\n      .duration(200)\n      .style('fill-opacity', 1e-6)\n      .attr('font-size', 1)\n      .remove();\n\n    return this;\n\n    // this._txt = null;\n    // autoscale\n    // setTimeout(() => self.autoscale(bounds), 100);\n  }\n  update(words) {\n    const self = this;\n    // console.log(words);\n    words.sort((a, b) => {return a.size - b.size; });\n    const fontExtent = d3.extent(words, (d) => d.size);\n    const scale = d3.scalePow()\n      .range(this.wordLayout.fontSize)\n      .domain(fontExtent);\n    const weightScale = d3.scaleQuantize()\n      .range(this.wordLayout.fontWeight)\n      .domain(fontExtent);\n    words.forEach((word) => {\n      word.weight = Math.round(weightScale(word.size));\n      word.size = scale(word.size);\n    });\n    // d3.cloud()\n    self.boundingSize = [self.boundingSize[0]*1.3, self.boundingSize[1]*1.05];\n    cloud()\n      .size(this.boundingSize) // when layout, first give a larger region\n      .words(words)\n      .padding(this.wordLayout.padding)\n      .rotate(0)\n      .font(this.wordLayout.font)\n      .text(d => d.text)\n      .fontSize(d => d.size)\n      .fontWeight(d => d.weight)\n      .on('end', (words_) => {\n        // if(words_.length < words.length * 0.8){\n        //   self.boundingSize = [self.boundingSize[0]*1.3, self.boundingSize[1]*1.05];\n        //   console.log('word cloud size updated to ' + self.boundingSize);\n        //   self.update(words);\n        // } else {\n        self.draw([self.width/2, self.height/2], words_);\n        // }\n      })\n      .random(()=> 0.5)\n      .spiral('rectangular')\n      .start();\n    // return this\n  }\n  autoscale(bounds) {\n\n    // console.log(`centerx: ${centerX}, centerY: ${centerY}`);\n    const scaleX = 0.9 * this.width / Math.abs(bounds[0].x - bounds[1].x);\n    const scaleY = 0.9 * this.height / Math.abs(bounds[0].y - bounds[1].y);\n    const scale = Math.min(scaleX, scaleY);\n    const centerX = (bounds[1].x + bounds[0].x - this.width) / 2 * scale;\n    const centerY = (bounds[1].y + bounds[0].y - this.height) / 2 * scale;\n    this.group.attr('transform', `scale(${scale}) translate(${-centerX}, ${-centerY})`);\n  }\n  destroy() {\n    this.selector\n      .transition()\n      .duration(300)\n      .attr('opacity', 0)\n      .remove();\n  }\n}\n\nexport default {\n  WordCloud,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/layout/cloud.js"],"sourceRoot":""}